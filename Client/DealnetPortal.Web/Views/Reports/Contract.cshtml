@using System
@using System.Globalization
@using System.Linq
@using DealnetPortal.Api.Common.Helpers
@using DealnetPortal.Web.Models.Enumeration
@model DealnetPortal.Web.Models.ContractViewModel
@{
    var contractState = Model.AdditionalInfo.ContractState;

    Func<string, string> formatIncome = str =>
    {
        if(str.Contains('<'))
        {
            return str.Replace("<", Resources.LessThan + " $");
        }
        if(str.Contains('-'))
        {
            return "$" + str.Replace("-", " - $");
        }
        return "$" + str;
    };
}

<div class="form-container">
    <div class="form-section">
        <div class="dealnet-large-header">@Resources.ReportForContract #@(Model.AdditionalInfo.TransactionId ?? Model.BasicInfo.ContractId.ToString())</div>
        <br />
        <div class="documents-container">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="dealnet-section-title">
                        @Resources.FundingChecklist
                        <span class="mandatory-title"><i class="mandatory-icon">*</i> &mdash; @Resources.MandatoryDocuments</span>
                    </h3>
                </div>
            </div>
            <div class="tabs tabs-vertical row responsive-tabs">
                <div class="col-md-6">
                    <ul class="nav nav-pills nav-stacked documents-pills">
                        @for(var i = 0; i < Model.UploadDocumentsInfo.DocumentTypes.Count; i++)
                        {
                            var document = Model.UploadDocumentsInfo.ExistingDocuments.FirstOrDefault(x => x.DocumentTypeId.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value);
                            <li class="@(i == 0 ? "active" : "") @(document != null ? "uploaded" : "") documents-pills-item">
                                <a href="#tab@(i+1)" class="documents-pills-link" aria-controls="tab@(i+1)" role="tab" data-toggle="tab">
                                    @if(Model.UploadDocumentsInfo.DocumentTypes[i].Value == "7")
                                    {
                                        <text>@Resources.OtherDocuments</text>
                                    }
                                    else
                                    {
                                        @(Model.UploadDocumentsInfo.DocumentTypes[i].Text)
                                        if(Model.UploadDocumentsInfo.MandatoryDocumentTypes.Any(md => md.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value))
                                        {
                                            <i class="mandatory-icon">*</i>
                                        }
                                    }
                                </a>
                            </li>
                        }
                    </ul>
                </div>
                <div class="col-md-6">
                    <div class="tab-content doc-tab-content documents-pills" role="tablist">
                        @for(var i = 0; i < Model.UploadDocumentsInfo.DocumentTypes.Count; i++)
                        {
                            if(Model.UploadDocumentsInfo.DocumentTypes[i].Value == "7")
                            {
                                continue;
                            }
                            var document = Model.UploadDocumentsInfo.ExistingDocuments.FirstOrDefault(x => x.DocumentTypeId.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value);
                            <div class="@(i == 0 ? "active" : "") @(document != null ? "uploaded" : "") @(Model.UploadDocumentsInfo.MandatoryDocumentTypes.Any(md => md.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value) ? "mandatory" : "" ) documents-pills-item tab-container-@(i+1)">
                                <a href="#tab@(i+1)" class="documents-pills-link" aria-controls="tab@(i+1)" role="tab" data-toggle="tab">
                                    <span class="mandatory-text">
                                        @(Model.UploadDocumentsInfo.DocumentTypes[i].Text)
                                        @if(Model.UploadDocumentsInfo.MandatoryDocumentTypes.Any(md => md.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value))
                                        {
                                            <i class="mandatory-icon">*</i>
                                        }
                                    </span>
                                </a>
                            </div>
                            <div role="tabpanel" class="tab-pane @(i == 0 ? "active" : "")" id="tab@(i + 1)">
                                <h3 class="document-pane-header">
                                    @(Model.UploadDocumentsInfo.DocumentTypes[i].Text)
                                </h3>
                                @if(document != null)
                                {
                                    <div class="documents-list">
                                        <div class="document-item block-item">
                                            <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
                                            <span class="document-naming">@(document.DocumentName)</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }

                        <div class="@(Model.UploadDocumentsInfo.ExistingDocuments.Any(x => x.DocumentTypeId == 7) ? "uploaded" : "") documents-pills-item">
                            <a href="#tab7" class="documents-pills-link" aria-controls="tab7" role="tab" data-toggle="tab">
                                @Resources.OtherDocuments
                            </a>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="tab7">
                            <h3 class="document-pane-header">
                                @Resources.OtherDocuments
                            </h3>
                            <div class="documents-list" id="other-documents-list">
                                @foreach(var document in Model.UploadDocumentsInfo.ExistingDocuments.Where(x => x.DocumentTypeId == 7))
                                {
                                    <div class="document-item block-item">
                                        <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
                                        <span class="document-naming">@document.DocumentName</span>
                                    </div>
                                    <hr>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr>
    <div class="form-section">
        @if(Model.BasicInfo.SubDealers?.Any() ?? false)
        {
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <div class="dealnet-section-title">@Resources.SubDealer</div>
                        <div class="form-group">
                            <div class="row">
                                <label for="" class="dealnet-field-caption col-xs-6">@Resources.DealerName</label>
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo.SubDealers.FirstOrDefault(x => x.Id == Model.BasicInfo.SubmittingDealerId)?.DisplayName ?? Resources.OnMyBehalf)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <h3 class="dealnet-section-title">@Resources.DealInformation</h3>
        <div class="row credit-check-info-hold no-top-margin">
            <div class="col-md-6 col-md-push-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <div class="form-group">
                        <div class="row">
                            <label class="dealnet-field-caption col-xs-6">@Resources.TotalValue</label>
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    $ @($"{(Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication ? Model.EquipmentInfo.ValueOfDeal : (double)Model.PaymentSummary.TotalMonthlyPayment):0.00}")
                                </div>
                            </div>
                        </div>
                    </div>
                    @if(Model.EquipmentInfo?.AgreementType == AgreementType.LoanApplication)
                    {
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.LoanTerm, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.EquipmentInfo?.LoanTerm)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.LoanDeferralType, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.EquipmentInfo?.LoanDeferralType.GetEnumDescription())
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.RequestedTerm, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.EquipmentInfo?.RequestedTerm)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.RentalDeferralType, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.EquipmentInfo?.RentalDeferralType.GetEnumDescription())
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.EquipmentInfo.SalesRep, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.EquipmentInfo?.SalesRep)
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <label class="dealnet-field-caption col-xs-6">@Resources.CreatedByCustomer</label>
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.AdditionalInfo.IsCreatedByCustomer ? Resources.Yes : Resources.No)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-md-pull-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.AdditionalInfo.Status, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.AdditionalInfo?.Status)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.EquipmentInfo.AgreementType, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.EquipmentInfo?.AgreementType.GetEnumDescription())
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.AdditionalInfo.LastUpdateTime, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.AdditionalInfo?.LastUpdateTime?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="dealnet-field-caption col-xs-6">@Resources.TypeOfEquipment</label>
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.EquipmentInfo?.NewEquipment?.Select(eq => eq.TypeDescription).ConcatWithComma())
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr>
    <div class="form-section">
        <div class="row credit-check-info-hold">
            <div class="col-md-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <h3 class="dealnet-section-title">@Resources.BorrowerInformation</h3>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.FirstName, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.FirstName)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.LastName, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.LastName)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.BirthDate, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.BirthDate?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group hidden">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.DriverLicenseNumber)
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.IsHomeOwner, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.HiddenFor(m => m.BasicInfo.HomeOwner.IsHomeOwner)
                                    <input type="text" readonly="readonly" class="dealnet-disabled-input" value=@(Model.BasicInfo.HomeOwner.IsHomeOwner ? Resources.Yes : Resources.No )>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <h3 class="dealnet-section-title">@Resources.InstallationAddressInformation</h3>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.AddressInformation?.Street)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.AddressInformation?.UnitNumber)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.AddressInformation?.City)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo?.HomeOwner?.AddressInformation?.Province)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    <span class="postal-code">@(Model.BasicInfo?.HomeOwner?.AddressInformation?.PostalCode)</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if(Model.BasicInfo?.HomeOwner?.PreviousAddressInformation != null)
            {
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <h3 class="dealnet-section-title">@Resources.PreviousAddressInformation</h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.PreviousAddressInformation.Street)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.PreviousAddressInformation.UnitNumber)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.PreviousAddressInformation.City)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.PreviousAddressInformation.Province)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        <span class="postal-code">@(Model.BasicInfo?.HomeOwner?.PreviousAddressInformation.PostalCode)</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if(Model.BasicInfo?.HomeOwner?.MailingAddressInformation != null)
            {
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <h3 class="dealnet-section-title">@Resources.MailingAddress</h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.MailingAddressInformation.Street)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.MailingAddressInformation.UnitNumber)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.MailingAddressInformation.City)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.BasicInfo?.HomeOwner?.MailingAddressInformation.Province)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        <span class="postal-code">@(Model.BasicInfo?.HomeOwner?.MailingAddressInformation.PostalCode)</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="col-md-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <h3 class="dealnet-section-title">@Resources.ContactInformation</h3>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.ContactAndPaymentInfo?.HomeOwnerContactInfo?.HomePhone)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.ContactAndPaymentInfo?.HomeOwnerContactInfo?.CellPhone)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.ContactAndPaymentInfo?.HomeOwnerContactInfo?.BusinessPhone)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.ContactAndPaymentInfo?.HomeOwnerContactInfo?.EmailAddress)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if(Model.BasicInfo.HomeOwner.EmploymentInformation != null)
        {
            <hr>
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <h3 class="dealnet-section-title">
                            @Resources.BorrowerEmploymentInformation
                        </h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus)" name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus)" value="@Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus.GetEnumDescription()" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if(Model.BasicInfo.HomeOwner.EmploymentInformation.IncomeType.HasValue)
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.IncomeType, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.IncomeType)" name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.IncomeType)" value="@Model.BasicInfo.HomeOwner.EmploymentInformation.IncomeType.GetEnumDescription()" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary))
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            <input readonly="readonly" class="dealnet-disabled-input"
                                                   id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary)"
                                                   name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary)"
                                                   value="@formatIncome(Model.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate))
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            <input readonly="readonly" class="dealnet-disabled-input"
                                                   id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate)"
                                                   name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate)"
                                                   value="@formatIncome(Model.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                        {
                            <div class="form-group">
                                <div class="row">
                                    <label class="dealnet-field-caption col-xs-6">@Resources.LengthOfEmployment</label>
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            <div class="dealnet-disabled-input">
                                                <span>@Model.BasicInfo.HomeOwner.EmploymentInformation.YearsOfEmployment @(Model.BasicInfo.HomeOwner.EmploymentInformation.YearsOfEmployment == "1" ? Resources.Year : Resources.Years)</span>
                                                @if(!string.IsNullOrEmpty(Model?.BasicInfo.HomeOwner?.EmploymentInformation?.MonthsOfEmployment))
                                                {
                                                    <span>@Model.BasicInfo.HomeOwner.EmploymentInformation.MonthsOfEmployment @(Model.BasicInfo.HomeOwner.EmploymentInformation.MonthsOfEmployment == "1" ? Resources.Month : Resources.Months)</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                {
                    <div class="col-md-6 grid-column">
                        <div class="dealnet-credit-check-section">
                            <h3 class="dealnet-section-title">
                                &nbsp;
                            </h3>
                            @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed)
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType)" name="@Html.NameFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType)" value="@Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType.GetEnumDescription()" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.JobTitle))
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.JobTitle, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.JobTitle, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.CompanyName))
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyName, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyName, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.CompanyPhone))
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                {
                    <div class="col-md-6 grid-column">
                        <div class="dealnet-credit-check-section">
                            <h3 class="dealnet-section-title">
                                @Resources.CompanyAddress
                            </h3>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.City, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.City, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <div class="row">
            @if(Model.ContactAndPaymentInfo?.CoBorrowersContactInfo != null)
            {
                for(var i = 0; i < Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
                {
                    <hr style="clear: both">
                    <div class="credit-check-info-hold">
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">@Resources.AdditionalApplicant</h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Model.BasicInfo.AdditionalApplicants[i].FirstName
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Model.BasicInfo.AdditionalApplicants[i].LastName
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].BirthDate, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.BasicInfo.AdditionalApplicants[i].BirthDate?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group hidden">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Model.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].IsHomeOwner, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.HiddenFor(m => m.BasicInfo.AdditionalApplicants[i].IsHomeOwner)
                                                <input type="text" readonly="readonly" class="dealnet-disabled-input" value=@(Model.BasicInfo.AdditionalApplicants[i].IsHomeOwner ? Resources.Yes : Resources.No )>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation != null)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
                                    <h3 class="dealnet-section-title">@Resources.PreviousAddressInformation</h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <span class="postal-code">@(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode)</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if(Model.BasicInfo.AdditionalApplicants[i].AddressInformation != null)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
                                    <h3 class="dealnet-section-title">@Resources.AdditionalApplicantAddressInfo</h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].AddressInformation.Street)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].AddressInformation.UnitNumber)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].AddressInformation.City)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.AdditionalApplicants[i].AddressInformation.Province)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <span class="postal-code">@(Model.BasicInfo.AdditionalApplicants[i].AddressInformation.PostalCode)</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">@Resources.ContactInformation</h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.HomePhone)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.CellPhone)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.BusinessPhone)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.EmailAddress)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    if(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation != null)
                    {
                        <div class="credit-check-info-hold">
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
                                    <h3 class="dealnet-section-title">
                                        @Resources.AdditionalApplicant @Resources.EmploymentInformation
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus)" name="@Html.NameFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus)" value="@Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus.GetEnumDescription()" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.IncomeType.HasValue)
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.IncomeType, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.IncomeType)" name="@Html.NameFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.IncomeType)" value="@Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.IncomeType.GetEnumDescription()" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.AnnualSalary))
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.AnnualSalary, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        <input readonly="readonly" class="dealnet-disabled-input"
                                                               id="@Html.IdFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.AnnualSalary)"
                                                               name="@Html.NameFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.AnnualSalary)"
                                                               value="@formatIncome(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.AnnualSalary)" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.HourlyRate))
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.HourlyRate, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        <input readonly="readonly" class="dealnet-disabled-input"
                                                               id="@Html.IdFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.HourlyRate)"
                                                               name="@Html.NameFor(m=>m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.HourlyRate)"
                                                               value="@formatIncome(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.HourlyRate)" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    @if(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                <label class="dealnet-field-caption col-xs-6">@Resources.LengthOfEmployment</label>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        <div class="dealnet-disabled-input">
                                                            <span>@Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.YearsOfEmployment @(Model.BasicInfo.HomeOwner.EmploymentInformation.YearsOfEmployment == "1" ? Resources.Year : Resources.Years)</span>
                                                            @if(!string.IsNullOrEmpty(Model?.BasicInfo.AdditionalApplicants[i]?.EmploymentInformation?.MonthsOfEmployment))
                                                            {
                                                                <span>@Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.MonthsOfEmployment @(Model.BasicInfo.HomeOwner.EmploymentInformation.MonthsOfEmployment == "1" ? Resources.Month : Resources.Months)</span>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            @if(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                            {
                                <div class="col-md-6 grid-column">
                                    <div class="dealnet-credit-check-section">
                                        <h3 class="dealnet-section-title">
                                            &nbsp;
                                        </h3>
                                        @if(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed)
                                        {
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentType, new { @class = "dealnet-field-caption col-xs-6" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentType)" name="@Html.NameFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentType)" value="@Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentType.GetEnumDescription()" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.JobTitle))
                                        {
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.JobTitle, new { @class = "dealnet-field-caption col-xs-6" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.JobTitle, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyName))
                                        {
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyName, new { @class = "dealnet-field-caption col-xs-6" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyName, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyPhone))
                                        {
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                            @if(Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed ||
                Model.BasicInfo.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                            {
                                <div class="col-md-6 grid-column">
                                    <div class="dealnet-credit-check-section">
                                        <h3 class="dealnet-section-title">
                                            @Resources.CompanyAddress
                                        </h3>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.City, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.City, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
            }


        </div>
    </div>
    <hr>
    <div class="form-section">
        @if(Model.EquipmentInfo?.NewEquipment != null)
        {
            var i = 0;

            <h3 class="dealnet-section-title">@Resources.EquipmentInformation</h3>

            <div class="row credit-check-info-hold equipment-info no-top-margin">
                @foreach(var equipment in Model.EquipmentInfo.NewEquipment)
                {
                    <div class="col-md-6 grid-column">
                        <div class="dealnet-credit-check-section">
                            <div class="form-group">
                                <div class="row">
                                    <div class="dealnet-field-caption col-xs-12">#@(++i)</div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(x => equipment.TypeDescription, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                    <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                        <div class="control-group">
                                            @equipment.TypeDescription
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(x => equipment.Description, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                    <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                        <div class="control-group">
                                            @equipment.Description
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if(Model.EquipmentInfo?.AgreementType == AgreementType.LoanApplication)
                            {
                                if(Model.IsClarityDealer && !Model.IsOldClarityDeal)
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.Label(Resources.MonthlyCostOfOwnership, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                                <div class="control-group">
                                                    @equipment.MonthlyCost
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(x => equipment.Cost, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                                <div class="control-group">
                                                    @equipment.Cost
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.MonthlyCost, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                        <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                            <div class="control-group">
                                                @equipment.MonthlyCost
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="row credit-check-info-hold equipment-info">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(x => Model.EquipmentInfo.EstimatedInstallationDate, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                    <div class="control-group">
                                        @(Model.EquipmentInfo.EstimatedInstallationDate?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if(Model.EquipmentInfo?.InstallationPackages?.Any() == true)
        {
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">

                        <h3 class="dealnet-section-title">
                            @Resources.InstallationPackage
                        </h3>

                    </div>
                </div>
            </div>

            <div class="row credit-check-info-hold  equipment-info cols-no-titles no-top-margin equipment-info">
                @for(var i = 0; i < Model.EquipmentInfo.InstallationPackages.Count; i++)
                {
                    <div class="col-md-6 grid-column">
                        <div class="dealnet-credit-check-section">
                            @Html.HiddenFor(m => m.EquipmentInfo.InstallationPackages[i].Id)
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-xs-12">
                                        #@(i + 1)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.EquipmentInfo.InstallationPackages[i].Description, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                    <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                        @Html.DisplayFor(m => m.EquipmentInfo.InstallationPackages[i].Description, new { @readonly = "readonly", id = "" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.Label(Resources.MonthlyCostOfOwnership, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                    <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                        @Html.DisplayFor(m => m.EquipmentInfo.InstallationPackages[i].MonthlyCost, new { @readonly = "readonly", @class = "has-cost-sign package-cost", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <div class="row">
            <div class="col-md-12">
                <div class="form-group summary-payment-info well">
                    @if(Model.IsClarityDealer && !Model.IsOldClarityDeal)
                    {
                        <div class="row">
                            <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
                                <div class="row">
                                    <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
                                        <div>
                                            @Resources.TotalMonthlyCostOfOwnership (@Resources.TaxExcl)
                                        </div>
                                    </div>
                                    <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                                        <div class="inline-children">
                                            $@(Math.Round(Model.PaymentSummary.MonthlyPayment - Model.PaymentSummary.Hst ?? 0, 2))
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
                                <div class="row">
                                    <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
                                        <div>
                                            @Model.ProvinceTaxRate.Description
                                        </div>
                                    </div>
                                    <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                                        <div class="inline-children">
                                            $@(Math.Round(Model.PaymentSummary.Hst ?? 0, 2))
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
                                <div class="row">
                                    <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
                                        <div>
                                            @Resources.TotalMonthlyCostOfOwnership (@Resources.TaxIncl)
                                        </div>
                                    </div>
                                    <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                                        <div class="inline-children">
                                            $@(Math.Round(Model.PaymentSummary.MonthlyPayment ?? 0, 2))
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
                                <div class="row">
                                    <div class="dealnet-field-caption col-xs-12 col-sm-7 col-md-12">
                                        @Resources.MonthlyPayment
                                    </div>
                                    <div class="dealnet-field-holder col-xs-12 col-sm-5 col-md-12">
                                        <text>$</text>
                                        @(Math.Round(Model.PaymentSummary.MonthlyPayment ?? 0, 2))
                                    </div>
                                </div>
                            </div>
                            @if(Model.EquipmentInfo != null && Model.EquipmentInfo?.AgreementType != AgreementType.LoanApplication)
                            {
                                <div class="col-md-2 col-lg-2 col-xs-12 summary-payment-info-item">
                                    <div class="row">
                                        <div class="dealnet-field-caption col-xs-12 col-sm-7 col-md-12">
                                            @(Model.ProvinceTaxRate?.Description ?? @Resources.Tax)
                                        </div>
                                        <div class="dealnet-field-holder col-xs-12 col-sm-5 col-md-12">
                                            $@(Math.Round((Model.EquipmentInfo?.TotalMonthlyPayment ?? 0) * (Model.ProvinceTaxRate?.Rate ?? 0) / 100, 2))
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-7 col-xs-12 summary-payment-info-item">
                                    <div class="row">
                                        <div class="dealnet-field-caption col-xs-12 col-sm-7 col-md-12">
                                            @Resources.TotalMonthlyPaymentWithTaxes
                                        </div>
                                        <div class="dealnet-field-holder col-xs-12 col-sm-5 col-md-12">
                                            $@(Math.Round((Model.EquipmentInfo?.TotalMonthlyPayment ?? 0) + (Model.EquipmentInfo?.TotalMonthlyPayment ?? 0) * (Model.ProvinceTaxRate?.Rate ?? 0) / 100, 2))
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        @if(Model.ContactAndPaymentInfo?.PaymentInfo != null)
        {
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <h3 class="dealnet-section-title">@Resources.PaymentInformation</h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @(Model.ContactAndPaymentInfo.PaymentInfo.PaymentType.GetEnumDescription())
                                    </div>
                                </div>
                            </div>
                        </div>
                        @switch(Model.ContactAndPaymentInfo.PaymentInfo.PaymentType)
                        {
                            case PaymentType.Enbridge:
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo.PaymentInfo.MeterNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                break;
                            case PaymentType.Pap:
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo.PaymentInfo.AccountNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo.PaymentInfo.BlankNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(Model.ContactAndPaymentInfo.PaymentInfo.TransitNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                break;
                        }
                    </div>
                </div>
            </div>
        }

        @if(Model.EquipmentInfo?.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
        {
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <h3 class="dealnet-section-title">@Resources.ExistingEquipmentInformation</h3>
                        @foreach(var equipment in Model.EquipmentInfo.ExistingEquipment)
                        {
                            <div class="summury-return-equip-item">
                                <div class="form-group">
                                    <div class="row">
                                        <div class="dealnet-field-caption col-xs-6">
                                            @Resources.IsRental
                                        </div>
                                        <div class="dealnet-field-holder col-xs-6">
                                            @(equipment.IsRental ? Resources.Yes : Resources.No)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.RentalCompany, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @equipment.RentalCompany
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.GeneralCondition, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @equipment.GeneralCondition
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.EstimatedAge, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @equipment.EstimatedAge
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.Make, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @equipment.Make
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.Model, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @equipment.Model
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.SerialNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @equipment.SerialNumber
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(x => equipment.Notes, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <span style="white-space: pre-wrap">@equipment.Notes</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <hr>
        <div class="form-section">
            <div class="row">
                <div class="credit-check-info-hold">
                    <div class="col-md-6 grid-column" id="edit-add-contract-section">
                        <div class="dealnet-credit-check-section">
                            <h3 class="dealnet-section-title">
                                @Resources.AdditionalContractInformation
                            </h3>
                            @if(Model.AdditionalInfo.CustomerComments != null && Model.AdditionalInfo.CustomerComments.Any())
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.AdditionalInfo.CustomerComments, new { @class = "col-xs-12 text-semibold text-md-sm" })
                                        <div class="dealnet-field-holder col-xs-12">
                                            <div class="control-group">
                                                <div class="text-left">
                                                    @foreach(var comment in Model.AdditionalInfo.CustomerComments)
                                                    {
                                                        @comment
                                                        <br />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if(!string.IsNullOrEmpty(Model.EquipmentInfo?.Notes))
                            {
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.EquipmentInfo.Notes, new { @class = "col-xs-12 text-semibold text-md-sm" })
                                        <div class="dealnet-field-holder text-left col-xs-12">
                                            <span style="white-space: pre-wrap">@(Model.EquipmentInfo?.Notes)</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="text-center back-to-top-hold">
    <a href="#" class="dealnet-info-link" id="back-to-top"><svg aria-hidden="true" class="icon icon-back-to-top"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-back-to-top")"></use></svg>@Resources.BackToTop</a>
</div>

@section scripts {
    @Scripts.Render("~/bundles/report-contracts")

    <script>
        $(document).ready(function () {
            module.require('report-contracts').init();
        });
    </script>
}