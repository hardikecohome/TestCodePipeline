@using DealnetPortal.Api.Common.Enumeration
@{
    var dealStatus = ContractState.Started;
    var dealType = AgreementType.LoanApplication;
    var paymentType = PaymentType.Enbridge;
}
<div id="label-steps">
	<div class="dealnet-action-link">Reports</div> >
</div>
<!--<div class="dealnet-large-header">My Deals</div>-->
<div class="expand-filter-template">
	<a class="clear-data-link" id="clear-filters">
        <svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg><span class="hidden-xs">Clear Filters</span>
	</a>
	<!-- Nav tabs -->
	<ul class="nav nav-tabs" role="tablist">
		<li role="presentation" class="active"><a href="#deal-info-tab" aria-controls="deal-info-tab" role="tab" data-toggle="tab">Deal Info</a></li>
		<li role="presentation"><a href="#detailed-info-tab" aria-controls="profile" role="tab" data-toggle="tab">Detailed Info</a></li>
	</ul>

	<!-- Tab panes -->
	<div class="tab-content">
		<div role="tabpanel" class="tab-pane active" id="deal-info-tab">
			<div class="reset-form-inline">
				<div class="label-caption">Filter</div>
				<div class="row">
					<div class="col-sm-6 col-md-3 col-lg-4">
						<div class="form-group">
							<label for="">Deal Type</label>
							<div class="control-group">
								@Html.EnumDropDownListFor(s => dealType, null, new { @class = "form-control filter-input select-filter", id = "agreement-type" })
							</div>
						</div>
					</div>
					<div class="col-lg-2 col-md-3 col-sm-6">
						<div class="form-group">
							<label for="">Date From</label>
							<div class="control-group date-group">
								<input type="text" class="form-control date-control filter-input" id="date-from">
							</div>
						</div>
					</div>
					<div class="col-lg-2 col-md-3 col-sm-6">
						<div class="form-group">
							<label for="">Date To</label>
							<div class="control-group date-group">
								<input type="text" class="form-control date-control filter-input" id="date-to">
							</div>
						</div>
					</div>
					<div class="col-sm-6 col-md-3 col-lg-4">
						<div class="form-group">
							<label for="">Deal Status</label>
							<div class="control-group">
								@Html.EnumDropDownListFor(s => dealStatus, null, new { @class = "form-control filter-input select-filter", id = "deal-status" })
							</div>
						</div>
					</div>
					<div class="col-lg-3 col-md-3 col-sm-6">
						<div class="form-group">
							<button class="btn dealnet-button dealnet-success-button block-button filter-button">Filter</button>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div role="tabpanel" class="tab-pane" id="detailed-info-tab">
			<div class="reset-form-inline">
				<div class="label-caption">Filter</div>
				<div class="row">
					<div class="col-sm-6 col-md-4 col-lg-4">
						<div class="form-group">
							<label for="">Equipment</label>
							<div class="control-group">
								<input type="text" class="form-control dealnet-input filter-input" id="equipment-input">
							</div>
						</div>
					</div>
					<div class="col-sm-6 col-md-4 col-lg-4">
						<div class="form-group">
							<label for="">Type of Payment</label>
							<div class="control-group">
								@Html.EnumDropDownListFor(s => paymentType, null, new { @class = "form-control filter-input select-filter", id = "payment-type" })
							</div>
						</div>
					</div>
					<div class="col-sm-6 col-md-4 col-lg-4">
						<div class="form-group">
							<label for="">Value of Deal</label>
							<div class="control-group">
								<input type="text" class="form-control dealnet-input filter-input" id="deal-value">
							</div>
						</div>
					</div>
					<div class="col-lg-3 col-md-3 col-sm-6">
						<div class="form-group">
							<button class="btn dealnet-button dealnet-success-button block-button filter-button">Filter</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<table id="work-items-table" class="display responsive" width="100%">
	<thead>
		<tr>
			<th class="all checkbox-cell"></th>
			<th class="all id-cell">Contract#</th>
			<th class="all">Customer</th>
		    <th class="min-tablet">Status</th>
			<th class="">Email</th>
			<th class="">Phone</th>
			<th class="">Date</th>
			<th class="">Equipment</th>
			<th class="">Value</th>
            <th class="">RemainingDescription</th>
            <th class="">AgreementType</th>
            <th class="">PaymentType</th>
			<th class="all controls-cell"></th>
		</tr>
	</thead>
</table>

<div class="reports-table-footer">
	<div class="row">
		<div class="col-sm-5 col-sm-push-7 col-lg-4 col-lg-push-8">
			<div class="total-info">
				<div class="row additional-info">
					<div class="col-xs-6">Total for selected:</div>
					<div class="col-xs-6 text-right"><span id="selectedTotal"></span></div>
				</div>
				<div class="row">
					<div class="col-xs-6">Grand Total:</div>
					<div class="col-xs-6 text-right"><span id="reports-grand-total"></span></div>
				</div>
			</div>
		</div>
		<div class="col-sm-7 col-sm-pull-5 col-lg-8 col-lg-pull-4">
			<div class="row additional-info">
				<div class="col-sm-4 col-lg-3"><button class="btn dealnet-button dealnet-success-button block-button" id="preview-button">Preview</button></div>
				<div class="col-sm-4 col-lg-3"><button class="btn dealnet-button dealnet-success-button block-button" id="export-excel">Export to Excel</button></div>
			</div>
		</div>
	</div>
</div>

@using (Html.BeginForm("GetXlsxReport", "Reports", FormMethod.Post, new { id = "export-form" }))
{
    <div id="export-ids"></div>
}

@using (Html.BeginForm("Contract", "Reports", FormMethod.Post, new { id = "single-preview-form" }))
{
    <input type="hidden" name="contractId" id="contract-preview-id"/>
}

@using (Html.BeginForm("Contracts", "Reports", FormMethod.Post, new { id = "multiple-preview-form" }))
{
    <div id="contract-preview-ids"></div>
}

<link href="https://code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css" rel="stylesheet">
@section scripts
{
    <script type="text/javascript">
        var itemsUrl = '@Url.Action("GetWorkItems", "Home")';
        var contractPreviewUrl = '@Url.Action("Contract", "Reports")' + '/';
    </script>
    @Scripts.Render("~/bundles/reports")
}