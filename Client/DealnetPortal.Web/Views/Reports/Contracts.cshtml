@using System
@using System.Globalization
@using System.Linq
@using DealnetPortal.Api.Common.Helpers
@using DealnetPortal.Web.Common.Enumeration
@model System.Collections.Generic.IList<DealnetPortal.Web.Models.ContractViewModel>
<div id="label-steps">
	@Html.ActionLink(Resources.Reports, "Index", "Reports", null, new { @class = "dealnet-action-link" }) &gt; <div class="dealnet-action-link">@Resources.Contracts</div>  &gt;
</div>
<div class="form-container">
	<div class="form-section">
		<div class="dealnet-large-header">@Resources.ReportForContracts</div>
		<div class="row credit-check-info-hold without-divider no-top-margin">
			<div class="col-md-6 grid-column">
				<div class="dealnet-credit-check-section">
					<div class="dealnet-large-header">@Model.Select(x => $"#{x.AdditionalInfo.TransactionId ?? x.BasicInfo?.ContractId.ToString()}").ConcatWithComma()</div>
				</div>
			</div>
			<div class="col-md-6 grid-column">
				<div class="dealnet-credit-check-section common-contract-information">
					<div class="form-group">
						<div class="row">
							<div class="col-xs-12 col-sm-8 col-md-7 col-lg-8 dealnet-field-caption">@Resources.TotalMonthlyPaymentWithTaxes</div>
							<div class="col-xs-12 col-sm-4 col-md-5 col-lg-4 dealnet-field-holder">
								<div class="control-group">
                                    $ @($"{Model.Sum(c => c.EquipmentInfo == null ? 0 : c.EquipmentInfo.AgreementType == AgreementType.LoanApplication ? c.LoanCalculatorOutput.TotalMonthlyPayment : (c.EquipmentInfo?.TotalMonthlyPayment ?? 0) + (c.EquipmentInfo?.TotalMonthlyPayment ?? 0)* (c.ProvinceTaxRate?.Rate ?? 0) / 100 ):0.00}")
								</div>
							</div>
						</div>
					</div>
				        <div class="form-group">
				            <div class="row">
				                <div class="col-xs-12 col-sm-8 col-md-7 col-lg-8 dealnet-field-caption">@Resources.TotalValue</div>
				                <div class="col-xs-12 col-sm-4 col-md-5 col-lg-4 dealnet-field-holder">
				                    <div class="control-group">
				                        $ @($"{Model.Where(x => x.EquipmentInfo != null).Sum(c => c.EquipmentInfo.ValueOfDeal):0.00}")
				                    </div>
				                </div>
				            </div>
				        </div>
                </div>
			</div>
		</div>
	</div>
	<hr>
    @{var contractCount = 0;}
    @foreach (var contract in Model)
    {
        contractCount++;
        <div class="form-container reports-contract-item">
		<div class="form-section contract-visible-info">
			<div class="dealnet-large-header">@Resources.ReportForContract #@(contract.AdditionalInfo.TransactionId ?? contract.BasicInfo.ContractId.ToString())</div>
            <br />
            <div class="documents-container">
	            <div class="row">
		            <div class="col-md-6">
			            <h3 class="dealnet-section-title">@Resources.FundingChecklist
				            <span class="mandatory-title"><i class="mandatory-icon">*</i> &mdash; @Resources.MandatoryDocuments</span>
			            </h3>
		            </div>
	            </div>
                <div class="tabs tabs-vertical row responsive-tabs">
                    <div class="col-md-6">
                        <ul class="nav nav-pills nav-stacked documents-pills">
                            @for (var i = 0; i < contract.UploadDocumentsInfo.DocumentTypes.Count; i++)
                            {
                                var document = contract.UploadDocumentsInfo.ExistingDocuments.FirstOrDefault(x => x.DocumentTypeId.ToString() == contract.UploadDocumentsInfo.DocumentTypes[i].Value);
                                <li class="@(i == 0 && contractCount == 1 ? "active" : "") @(document != null ? "uploaded" : "") documents-pills-item">
                                    <a href="#tab@(contractCount*10 + (i+1))" class="documents-pills-link" aria-controls="tab@(contractCount*10 + (i+1))" role="tab" data-toggle="tab">
                                        @if (contract.UploadDocumentsInfo.DocumentTypes[i].Value == "7")
                                        {
                                            <text>@Resources.OtherDocuments</text>
                                        }
                                        else
                                        {
                                            @(contract.UploadDocumentsInfo.DocumentTypes[i].Text)
                                            if (contract.UploadDocumentsInfo.MandatoryDocumentTypes.Any(md => md.ToString() == contract.UploadDocumentsInfo.DocumentTypes[i].Value))
                                            {
                                                <i class="mandatory-icon">*</i>
                                            }
                                        }
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <div class="tab-content doc-tab-content documents-pills" role="tablist">
                            @for (var i = 0; i < contract.UploadDocumentsInfo.DocumentTypes.Count; i++)
                            {
                                if (contract.UploadDocumentsInfo.DocumentTypes[i].Value == "7")
                                {
                                    continue;
                                }
                                var document = contract.UploadDocumentsInfo.ExistingDocuments.FirstOrDefault(x => x.DocumentTypeId.ToString() == contract.UploadDocumentsInfo.DocumentTypes[i].Value);
                                <div class="@(i == 0 && contractCount == 1 ? "active" : "") @(document != null ? "uploaded" : "") documents-pills-item">
                                    <a href="#tab@(contractCount*10 + (i+1))" class="documents-pills-link" aria-controls="tab@(contractCount*10 + (i+1))" role="tab" data-toggle="tab">
	                                    <span class="mandatory-text">
	                                        @(contract.UploadDocumentsInfo.DocumentTypes[i].Text)
		                                    @if (contract.UploadDocumentsInfo.MandatoryDocumentTypes.Any(md => md.ToString() == contract.UploadDocumentsInfo.DocumentTypes[i].Value))
	                                        {
	                                            <i class="mandatory-icon">*</i>
	                                        }
		                                </span>
                                    </a>
                                </div>
                                <div role="tabpanel" class="tab-pane @(i == 0 && contractCount == 1 ? "active" : "")" id="tab@(contractCount*10 + (i+1))">
                                    <h3 class="document-pane-header">
                                        @(contract.UploadDocumentsInfo.DocumentTypes[i].Text)
                                    </h3>
                                    @if (document != null)
                                    {
                                        <div class="documents-list">
                                            <div class="document-item block-item">
                                                <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
                                                <span class="document-naming">@(document.DocumentName)</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }

                            <div class="@(contract.UploadDocumentsInfo.ExistingDocuments.Any(x => x.DocumentTypeId == 7) ? "uploaded" : "") documents-pills-item">
                                <a href="#tab@(contractCount*10 + 7)" class="documents-pills-link" aria-controls="tab@(contractCount*10 + 7)" role="tab" data-toggle="tab">
                                    @Resources.OtherDocuments
                                </a>
                            </div>
                            <div role="tabpanel" class="tab-pane" id="tab@(contractCount*10 + 7)">
                                <h3 class="document-pane-header">
                                    @Resources.OtherDocuments
                                </h3>
                                <div class="documents-list" id="other-documents-list">
                                    @foreach (var document in contract.UploadDocumentsInfo.ExistingDocuments.Where(x => x.DocumentTypeId == 7))
                                    {
                                        <div class="document-item block-item">
                                            <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
                                            <span class="document-naming">@document.DocumentName</span>
                                        </div>
                                        <hr>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <br/>
            <h3 class="dealnet-section-title">@Resources.DealInformation</h3>
			<div class="row credit-check-info-hold no-top-margin">
				<div class="col-md-6 col-md-push-6 grid-column">
					<div class="dealnet-credit-check-section">
                        <div class="form-group">
                            <div class="row">
                                <label class="dealnet-field-caption col-xs-6">@Resources.TotalValue</label>
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        $ @($"{contract.EquipmentInfo?.ValueOfDeal:0.00}")
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if (contract.EquipmentInfo != null && contract.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
					    {
					        <div class="form-group">
					            <div class="row">
					                @Html.LabelFor(m => contract.EquipmentInfo.LoanTerm, new { @class = "dealnet-field-caption col-xs-6" })
					                <div class="dealnet-field-holder col-xs-6">
					                    <div class="control-group">
					                        @(contract.EquipmentInfo?.LoanTerm)
					                    </div>
					                </div>
					            </div>
					        </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.EquipmentInfo.LoanDeferralType, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.EquipmentInfo?.LoanDeferralType.GetEnumDescription())
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
					        <div class="form-group">
					            <div class="row">
					                @Html.LabelFor(m => contract.EquipmentInfo.RequestedTerm, new { @class = "dealnet-field-caption col-xs-6" })
					                <div class="dealnet-field-holder col-xs-6">
					                    <div class="control-group">
					                        @(contract.EquipmentInfo?.RequestedTerm)
					                    </div>
					                </div>
					            </div>
					        </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.EquipmentInfo.RentalDeferralType, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.EquipmentInfo?.RentalDeferralType.GetEnumDescription())
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="form-group">
							<div class="row">
                                @Html.LabelFor(m => contract.EquipmentInfo.SalesRep, new { @class = "dealnet-field-caption col-xs-6" })
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@(contract.EquipmentInfo?.SalesRep)
									</div>
								</div>
							</div>
						</div>
                        @if (contract.BasicInfo.SubDealers?.Any() ?? false)
                        {
                            <div class="form-group">
                                <div class="row">
                                    <label class="dealnet-field-caption col-xs-6">@Resources.SubDealer</label>
                                    <div class="dealnet-field-holder col-xs-6">
                                       @(contract.BasicInfo.SubDealers.FirstOrDefault(x => x.Id == contract.BasicInfo.SubmittingDealerId)?.DisplayName)
                                    </div>
                                </div>
                            </div>
                        }
						<div class="form-group">
							<div class="row">
								<label class="dealnet-field-caption col-xs-6">Created by Customer</label>
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										Yes
									</div>
								</div>
							</div>
						</div>
                    </div>
				</div>
				<div class="col-md-6 col-md-pull-6 grid-column">
					<div class="dealnet-credit-check-section">
						<div class="form-group">
							<div class="row">
								@Html.LabelFor(m => contract.AdditionalInfo.ContractState, new { @class = "dealnet-field-caption col-xs-6" })
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@(contract.AdditionalInfo?.ContractState.GetEnumDescription())
									</div>
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="row">
								@Html.LabelFor(m => contract.EquipmentInfo.AgreementType, new { @class = "dealnet-field-caption col-xs-6" })
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@(contract.EquipmentInfo?.AgreementType.GetEnumDescription())
									</div>
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="row">
								@Html.LabelFor(m => contract.AdditionalInfo.LastUpdateTime, new { @class = "dealnet-field-caption col-xs-6" })
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@(contract.AdditionalInfo?.LastUpdateTime?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
									</div>
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="row">
								<label class="dealnet-field-caption col-xs-6">@Resources.TypeOfEquipment</label>
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@(contract.EquipmentInfo?.NewEquipment?.Select(eq => eq.TypeDescription).ConcatWithComma())
									</div>
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="row">
								<label class="dealnet-field-caption col-xs-6">@Resources.SubDealer</label>
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@(contract.BasicInfo.SubDealers.FirstOrDefault(x => x.Id == contract.BasicInfo.SubmittingDealerId)?.DisplayName)
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="text-right">
				<a href="#" class="dealnet-info-link show-full-conract-link">@Resources.ShowMoreInfo</a>
			</div>
		</div>
		<div class="contract-hidden-info">
			<hr>
			<div class="form-section">
				<div class="row credit-check-info-hold">
					<div class="col-md-6 grid-column">
						<div class="dealnet-credit-check-section">
							<h3 class="dealnet-section-title">@Resources.InstallationAddressInformation</h3>
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											@(contract.BasicInfo?.HomeOwner?.AddressInformation?.Street)
										</div>
									</div>
								</div>
							</div>
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											@(contract.BasicInfo?.HomeOwner?.AddressInformation?.UnitNumber)
										</div>
									</div>
								</div>
							</div>
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											@(contract.BasicInfo?.HomeOwner?.AddressInformation?.City)
										</div>
									</div>
								</div>
							</div>
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											@(contract.BasicInfo?.HomeOwner?.AddressInformation?.Province)
										</div>
									</div>
								</div>
							</div>
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											<span class="postal-code">@(contract.BasicInfo?.HomeOwner?.AddressInformation?.PostalCode)</span>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<hr>
				<div class="row credit-check-info-hold">
					<div class="col-md-6 grid-column">
						<div class="dealnet-credit-check-section">
							<h3 class="dealnet-section-title">@Resources.BorrowerInformation</h3>
							<div class="form-group">
							    <div class="row">
							        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.FirstName, new { @class = "dealnet-field-caption col-xs-6" })
							        <div class="dealnet-field-holder col-xs-6">
							            <div class="control-group">
							                @(contract.BasicInfo?.HomeOwner?.FirstName)
							            </div>
							        </div>
							    </div>
							</div>
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.BasicInfo.HomeOwner.LastName, new { @class = "dealnet-field-caption col-xs-6" })
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											@(contract.BasicInfo?.HomeOwner?.LastName)
										</div>
									</div>
								</div>
							</div>
						    <div class="form-group">
						        <div class="row">
						            @Html.LabelFor(m => contract.BasicInfo.HomeOwner.BirthDate, new { @class = "dealnet-field-caption col-xs-6" })
						            <div class="dealnet-field-holder col-xs-6">
						                <div class="control-group">
						                    @(contract.BasicInfo?.HomeOwner?.BirthDate?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
						                </div>
						            </div>
						        </div>
						    </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.BasicInfo.HomeOwner.DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.BasicInfo?.HomeOwner?.DriverLicenseNumber)
                                        </div>
                                    </div>
                                </div>
                            </div>

							<div class="form-group">
								<div class="row">
									<label for="" class="dealnet-field-caption col-xs-6">Home Owner</label>
									<div class="dealnet-field-holder col-xs-6">
										<div class="control-group">
											<input type="text" readonly="readonly" class="dealnet-disabled-input" value=@((contract.BasicInfo?.HomeOwner.IsHomeOwner ?? false) ? Resources.Yes : Resources.No)>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				    @if (contract.BasicInfo?.HomeOwner?.PreviousAddressInformation != null)
				    {
				        <div class="col-md-6 grid-column">
				            <div class="dealnet-credit-check-section">
				                <h3 class="dealnet-section-title">@Resources.PreviousAddressInformation</h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.PreviousAddressInformation.Street)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.PreviousAddressInformation.UnitNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.PreviousAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.PreviousAddressInformation.City)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.PreviousAddressInformation.Province)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                <span class="postal-code">@(contract.BasicInfo?.HomeOwner?.PreviousAddressInformation.PostalCode)</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
				            </div>
				        </div>
				    }
                    @if (contract.BasicInfo?.HomeOwner?.MailingAddressInformation != null)
                    {
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">@Resources.MailingAddress</h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.MailingAddressInformation.Street)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.MailingAddressInformation.UnitNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.MailingAddressInformation.City)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.BasicInfo?.HomeOwner?.MailingAddressInformation.Province)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                <span class="postal-code">@(contract.BasicInfo?.HomeOwner?.MailingAddressInformation.PostalCode)</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-md-6 grid-column">
                        <div class="dealnet-credit-check-section">
                            <h3 class="dealnet-section-title">@Resources.ContactInformation</h3>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.ContactAndPaymentInfo?.HomeOwnerContactInfo?.HomePhone)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.ContactAndPaymentInfo?.HomeOwnerContactInfo?.CellPhone)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.ContactAndPaymentInfo?.HomeOwnerContactInfo?.BusinessPhone)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @(contract.ContactAndPaymentInfo?.HomeOwnerContactInfo?.EmailAddress)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
				<div class="row">
                    @if (contract.ContactAndPaymentInfo?.CoBorrowersContactInfo != null)
                    {
                        for (var i = 0; i < contract.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
                        {
					<hr style="clear: both">
					<div class="credit-check-info-hold">
	                    <div class="col-md-6 grid-column">
							<div class="dealnet-credit-check-section">
								<h3 class="dealnet-section-title">@Resources.AdditionalApplicant</h3>
								<div class="form-group">
									<div class="row">
										@Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].FirstName, new { @class = "dealnet-field-caption col-xs-6" })
										<div class="dealnet-field-holder col-xs-6">
											<div class="control-group">
												@contract.BasicInfo.AdditionalApplicants[i].FirstName
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										@Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].LastName, new { @class = "dealnet-field-caption col-xs-6" })
										<div class="dealnet-field-holder col-xs-6">
											<div class="control-group">
												@contract.BasicInfo.AdditionalApplicants[i].LastName
											</div>
										</div>
									</div>
								</div>
							    <div class="form-group">
							        <div class="row">
							            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].BirthDate, new { @class = "dealnet-field-caption col-xs-6" })
							            <div class="dealnet-field-holder col-xs-6">
							                <div class="control-group">
							                    @(contract.BasicInfo.AdditionalApplicants[i].BirthDate?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
							                </div>
							            </div>
							        </div>
							    </div>
	                            <div class="form-group">
	                                <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
	                                    <div class="dealnet-field-holder col-xs-6">
	                                        <div class="control-group">
	                                            @contract.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber
	                                        </div>
	                                    </div>
	                                </div>
	                            </div>

								<div class="form-group">
									<div class="row">
										<label for="" class="dealnet-field-caption col-xs-6">Home Owner</label>
										<div class="dealnet-field-holder col-xs-6">
											<div class="control-group">
												<input type="text" readonly="readonly" class="dealnet-disabled-input" value=@(contract.BasicInfo.AdditionalApplicants[i].IsHomeOwner ? Resources.Yes : Resources.No)>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						@if (contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation != null)
						{
						    <div class="col-md-6 grid-column">
						        <div class="dealnet-credit-check-section">
						            <h3 class="dealnet-section-title">@Resources.PreviousAddressInformation</h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <span class="postal-code">@(contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode)</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.ResidenceType, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.ResidenceType.GetEnumDescription())
                                                </div>
                                            </div>
                                        </div>
                                    </div>
						        </div>
						    </div>
						}
                        @if (contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation != null)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
	                            <h3 class="dealnet-section-title">@Resources.MailingAddress</h3>
                                    <div class="form-group">
                                        <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <span class="postal-code">@(contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode)</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
	                                    @Html.LabelFor(m => contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.ResidenceType, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(contract.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.ResidenceType.GetEnumDescription())
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
	                    <div class="col-md-6 grid-column">
	                        <div class="dealnet-credit-check-section">
	                            <h3 class="dealnet-section-title">@Resources.ContactInformation</h3>
	                            <div class="form-group">
	                                <div class="row">
	                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
	                                    <div class="dealnet-field-holder col-xs-6">
	                                        <div class="control-group">
	                                            @(contract.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.HomePhone)
	                                        </div>
	                                    </div>
	                                </div>
	                            </div>
	                            <div class="form-group">
	                                <div class="row">
	                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
	                                    <div class="dealnet-field-holder col-xs-6">
	                                        <div class="control-group">
	                                            @(contract.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.CellPhone)
	                                        </div>
	                                    </div>
	                                </div>
	                            </div>
	                            <div class="form-group">
	                                <div class="row">
	                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
	                                    <div class="dealnet-field-holder col-xs-6">
	                                        <div class="control-group">
	                                            @(contract.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.BusinessPhone)
	                                        </div>
	                                    </div>
	                                </div>
	                            </div>
	                            <div class="form-group">
	                                <div class="row">
	                                    @Html.LabelFor(m => contract.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new { @class = "dealnet-field-caption col-xs-6" })
	                                    <div class="dealnet-field-holder col-xs-6">
	                                        <div class="control-group">
	                                            @(contract.ContactAndPaymentInfo?.CoBorrowersContactInfo[i]?.EmailAddress)
	                                        </div>
	                                    </div>
	                                </div>
	                            </div>
	                        </div>
	                    </div>
					</div>
                        }
                    }
				</div>
			</div>

		<div class="form-section">
			@if (contract.EquipmentInfo?.NewEquipment != null)
			{
			    var i = 0;
				<hr style="clear: both">

				<h3 class="dealnet-section-title">@Resources.EquipmentInformation</h3>

                <div class="row credit-check-info-hold equipment-info no-top-margin">
                    @foreach (var equipment in contract.EquipmentInfo.NewEquipment)
                    {
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <div class="form-group">
                                    <div class="row">
                                        <div class="dealnet-field-caption col-xs-12">#@(++i)</div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => equipment.TypeDescription, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                        <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                            <div class="control-group">
                                                @equipment.TypeDescription
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => equipment.Description, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                        <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                            <div class="control-group">
                                                @equipment.Description
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (contract.EquipmentInfo?.AgreementType == AgreementType.LoanApplication)
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => equipment.Cost, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                                <div class="control-group">
                                                    @equipment.Cost
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => equipment.MonthlyCost, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                                <div class="control-group">
                                                    @equipment.MonthlyCost
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
			    </div>
				<div class="row credit-check-info-hold equipment-info">
					<div class="col-md-6 grid-column">
						<div class="dealnet-credit-check-section">
							<div class="form-group">
								<div class="row">
									@Html.LabelFor(m => contract.EquipmentInfo.EstimatedInstallationDate, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
									<div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
										<div class="control-group">
											@(contract.EquipmentInfo.EstimatedInstallationDate?.ToString("MM/dd/yyyy", CultureInfo.InvariantCulture))
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
			@if (contract.EquipmentInfo != null)
			{
			    <div class="row">
			        <div class="col-md-12">
			            <div class="form-group summary-payment-info well">
			                <div class="row">
			                    <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
			                        <div class="row">
			                            <div class="dealnet-field-caption col-xs-12 col-sm-7 col-md-12">
			                                @Resources.MonthlyPayment
			                            </div>
			                            <div class="dealnet-field-holder col-xs-12 col-sm-5 col-md-12">
			                                @if (contract.EquipmentInfo?.AgreementType == AgreementType.LoanApplication)
			                                {
			                                    <text>$</text>
			                                    @(Math.Round(contract.LoanCalculatorOutput.TotalMonthlyPayment, 2))

			                                }
			                                else
			                                {
			                                    <text>$</text>
			                                    @(contract.EquipmentInfo?.TotalMonthlyPayment)
			                                }
			                            </div>
			                        </div>
			                    </div>
			                    @if (contract.EquipmentInfo != null && contract.EquipmentInfo?.AgreementType != AgreementType.LoanApplication)
			                    {
			                        <div class="col-md-2 col-lg-2 col-xs-12 summary-payment-info-item">
			                            <div class="row">
			                                <div class="dealnet-field-caption col-xs-12 col-sm-7 col-md-12">
								                @(contract.ProvinceTaxRate?.Description ?? @Resources.Tax)
			                                </div>
			                                <div class="dealnet-field-holder col-xs-12 col-sm-5 col-md-12">
			                                    $@(Math.Round((contract.EquipmentInfo?.TotalMonthlyPayment ?? 0)* (contract.ProvinceTaxRate?.Rate ?? 0) / 100, 2))
			                                </div>
			                            </div>
			                        </div>
			                        <div class="col-md-6 col-lg-7 col-xs-12 summary-payment-info-item">
			                            <div class="row">
			                                <div class="dealnet-field-caption col-xs-12 col-sm-7 col-md-12">
			                                    @Resources.TotalMonthlyPaymentWithTaxes
			                                </div>
			                                <div class="dealnet-field-holder col-xs-12 col-sm-5 col-md-12">
			                                    $@(Math.Round((contract.EquipmentInfo?.TotalMonthlyPayment ?? 0) + (contract.EquipmentInfo?.TotalMonthlyPayment ?? 0)* (contract.ProvinceTaxRate?.Rate ?? 0) / 100, 2))
			                                </div>
			                            </div>
			                        </div>
			                    }
			                </div>
			            </div>
			        </div>
			    </div>
			}

				@if (contract.ContactAndPaymentInfo?.PaymentInfo != null)
                {
                    <div class="row credit-check-info-hold">
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">@Resources.PaymentInformation</h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => contract.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @(contract.ContactAndPaymentInfo.PaymentInfo.PaymentType.GetEnumDescription())
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @switch (contract.ContactAndPaymentInfo.PaymentInfo.PaymentType)
                                {
                                    case DealnetPortal.Web.Common.Enumeration.PaymentType.Enbridge:
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => contract.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @(contract.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => contract.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @(contract.ContactAndPaymentInfo.PaymentInfo.MeterNumber)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        break;
                                    case DealnetPortal.Web.Common.Enumeration.PaymentType.Pap:
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => contract.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @(contract.ContactAndPaymentInfo.PaymentInfo.AccountNumber)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => contract.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @(contract.ContactAndPaymentInfo.PaymentInfo.BlankNumber)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => contract.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @(contract.ContactAndPaymentInfo.PaymentInfo.TransitNumber)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        break;
                                }
                            </div>
                        </div>
                    </div>
                }
				@if (contract.EquipmentInfo?.ExistingEquipment != null && contract.EquipmentInfo.ExistingEquipment.Any())
                {
                    <div class="row">
                        <div class="col-md-12">
                            <div class="summary-return-equipment">
                                <h3 class="dealnet-section-title">@Resources.ExistingEquipmentInformation</h3>
                                @foreach (var equipment in contract.EquipmentInfo.ExistingEquipment)
                    {
                                    <div class="summury-return-equip-item">
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.IsRental, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @(equipment.IsRental ? Resources.Yes : Resources.No)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.RentalCompany, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @equipment.RentalCompany
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.GeneralCondition, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @equipment.GeneralCondition
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.EstimatedAge, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @equipment.EstimatedAge
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.Make, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @equipment.Make
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.Model, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @equipment.Model
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.SerialNumber, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    @equipment.SerialNumber
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => equipment.Notes, new { @class = "dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2" })
                                                <div class="dealnet-field-holder text-left col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                                    <span style="white-space: pre-wrap">@equipment.Notes</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }


			<hr>
			<div class="form-section">
				<div class="row">
					<div class="credit-check-info-hold">
						<div class="col-md-6 grid-column" id="edit-add-contract-section">
							<div class="dealnet-credit-check-section">
								<h3 class="dealnet-section-title">
									@Resources.AdditionalContractInformation
								</h3>
								<div class="form-group">
								    <div class="row">
								        @Html.LabelFor(m => contract.EquipmentInfo.Notes, new { @class = "dealnet-field-caption col-xs-12" })								        
								        <div class="dealnet-field-holder text-left col-xs-12">
								            <span style="white-space: pre-wrap">@(contract.EquipmentInfo?.Notes)</span>
								        </div>
								    </div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="text-right">
				<a href="#" class="dealnet-info-link hide-full-conract-link">@Resources.ShowLessInfo</a>
			</div>
			</div>

		</div>
		<hr>
	</div>
    }
</div>

<div class="text-center back-to-top-hold">
	<a href="#" class="dealnet-info-link" onClick="backToTop()"><svg aria-hidden="true" class="icon icon-back-to-top"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-back-to-top")"></use></svg>@Resources.BackToTop</a>
</div>