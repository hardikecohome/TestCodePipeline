@model DealnetPortal.Web.Models.MyProfile.ProfileViewModel

@{
    ViewBag.Title = Resources.MyProfile;
}

<div class="profile-header">
    <div class="main-heading profile-heading">@Resources.MyProfile</div>
</div>

<div class="form-container profile-form-container">
    @using (Html.BeginForm("SetProfile", "Profile", FormMethod.Post, new { id = "main-form", onkeydown = "return event.keyCode!=13" }))
    {
        @Html.HiddenFor(s => s.ProfileId)
        @Html.HiddenFor(s => s.QuebecDealer, new { id = "quebecDealer" })
        @Html.HiddenFor(s => s.QuebecPostalCodes, new { id = "quebecPostalCodes" })
        @Html.AntiForgeryToken()
        <h3 class="dealnet-middle-header">@Resources.OfferedService</h3>
        <div class="row">
            <div class="col-md-4 col-sm-6 col-lg-3">
                <div class="form-group">
                    <label for="">@Resources.SelectCategory</label>
                    <div class="control-group">
                        @Html.DropDownList("SelectedCategories", (Model.EquipmentTypes).Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Description }), Resources.PleaseSelect,
                                  new { @class = "form-control dealnet-input", id = "offered-service" })
                    </div>
                </div>
            </div>
            <div class="col-md-8 col-sm-6 col-lg-6">
                <div class="form-group">
                    <label for="" class="hidden-xs">&nbsp;</label>

                    <ul class="customer-needs-list tags-list" id="selected-categories">
                        @if (Model.DealerEquipments != null)
                        {
                            @Html.Partial("Profile/_DealerEquipment", Model)
                        }
                    </ul>
                </div>
            </div>
        </div>
        <h3 class="dealnet-middle-header">@Resources.AreaOfMyService</h3>
        <div id="postal-code-area">
            @if (Model.PostalCodes != null)
            {
                @Html.Partial("Profile/_PostalCode", Model)
            }
        </div>
        <div>
            <a id="add-postalCode" class="align-middle action-link blue">
                <svg aria-hidden="true" class="icon icon-add-app"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use></svg>
                <span>@Resources.AddPostalCode</span>
            </a>
        </div>
    }
    <div class="clearfix">        
        <div id="infoErrors"></div>
        <br>
        <button class="btn btn-green btn-form" id="saveProfileBtn">@Resources.Save</button>
        <div id="infoErrors"></div>
        <br>
        <div class="well clear-border collapse" id="success-message">
            <svg aria-hidden="true" class="icon icon-success"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-success")"></use></svg>
            @Resources.YourConfigurationWasSuccessfullyUpdated
        </div>
    </div>
</div>

<div class="hidden">
    <div id="postal-template">
        <div class="row postal-code-hold">
            <div class="col-md-3 col-sm-4 col-xs-10">
                <div class="form-group">
                    <label for="">@Resources.PostalCode</label>
                    <div class="control-group">
                        @Html.HiddenFor(x => x.PostalCodes[0].Id)
                        @Html.TextBoxFor(x => x.PostalCodes[0].PostalCode, new { @class = "form-control postal-code form-control-not-clear", placeholder = "12345" })
                        @Html.ValidationMessageFor(x => x.PostalCodes[0].PostalCode, "", new { @class = "text-danger" })
                        <a href="" class="remove-postal-code link-default" id="remove-postal-code-" hidden-value=" ">
                            <svg aria-hidden="true" class="icon icon-remove-cross"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove-cross")"></use></svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Translations
{
    translations['ErrorWhileUpdatingData'] = "@Resources.ErrorWhileUpdatingData";
    translations['SuchPostalCodeAlreadyExist'] = "@Resources.SuchPostalCodeAlreadyExist";
    translations['ServiceAreaInQc'] = "@Resources.ServiceAreaInQc";
    translations['ServiceAreaNotInQc'] = "@Resources.ServiceAreaNotInQc";
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/localization")
    @Scripts.Render("~/bundles/my-profile")

    <script type="text/javascript">
        module.require('my-profile-index');
    </script>

    <script>
        $(document).ready(function () {
            $('.remove-postal-code').on('click', function () {
                $(this).parents('.postal-code-hold').remove();
                return false;
            });
        });
    </script>

}
