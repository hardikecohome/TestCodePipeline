@using DealnetPortal.Web.Models.Enumeration
@model DealnetPortal.Web.Models.StandaloneCalculatorViewModel

<div class="calculator-redesigned standalone-calculator">

  <div class="dealnet-large-header">@Resources.Calculator</div>

  @*<form id="province-form" class="row">
    <div class="col-md-4 col-sm-6">
      <div class="form-group">
        <label>@Resources.ChooseProvince</label>
        @Html.DropDownListFor(m => m.ProvinceTaxRate, Model.ProvinceTaxRates.Select(x => new SelectListItem { Value = x.Province, Text = x.Province }),
          Resources.NotSelected,
          new
          {
            @class = "form-control",
            id = "province-tax-rate"
          })
          @Html.ValidationMessageFor(m=>m.ProvinceTaxRate, "", new { @class = "text-danger" })
      </div>
    </div>
  </form>*@
  <div class="calculators-container">
    <div class="jcarousel-wrapper rate-cards-container steps-carousel">
      <div class="jcarousel">
        <ul no-wrap="noWrapSlides" id="options-container">
          <li class="rate-card-col" id="option1-container">
            <h2 class="dealnet-middle-header calculator-heading">
              <span id="option1-header">@Resources.Option 1</span>
              <span class="calculator-remove" id="option1-remove">
                <i class="glyphicon glyphicon-remove"></i>
              </span>
            </h2>
            <form class="rate-card table-mode">
              <div class="equipments-hold">
                <div class="equipment-item" id="option1-equipment-0">
                  <div class="dealnet-middle-header equipment-heading">
                    <span>@Resources.Equipment  <span class="equipment-number">№1</span></span>
                  </div>
                  <div class="form-group">
                    @Html.LabelFor(m => m.Equipment.NewEquipment[0].Type)
                    @Html.DropDownListFor(m => m.Equipment.NewEquipment[0].Type, Model.EquipmentTypes.Select(x => new SelectListItem { Value = x.Type, Text = x.Description }), new { @class = "form-control" })
                  </div>
                  <div class="form-group">
                    @Html.LabelFor(m => m.Equipment.NewEquipment[0].Description)
                    <div class="control-group">
                      @Html.TextBoxFor(m => m.Equipment.NewEquipment[0].Description, new { @class = "form-control dealnet-input date-input", placeholder = Resources.Description })
                      @Html.ValidationMessageFor(m => m.Equipment.NewEquipment[0].Description, "", new { @class = "text-danger" })
                    </div>
                  </div>
                  <div class="form-group">
                    @Html.LabelFor(m => m.Equipment.NewEquipment[0].Cost)
                    <div class="control-group has-addon-left">
                      <div class="control-group-addon">$</div>
                      @Html.TextBoxFor(m => m.Equipment.NewEquipment[0].Cost, new { @class = "form-control dealnet-input date-input equipment-cost", type = "text", placeholder = Resources.Cost })
                      @Html.ValidationMessageFor(m => m.Equipment.NewEquipment[0].Cost, "", new { @class = "text-danger" })
                    </div>
                  </div>
                </div>
              </div>
              <div class="action-link blue add-equip-link" id="option1-addEquipment">
                <svg aria-hidden="true" class="icon icon-add-app"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use></svg>
                <span>@Resources.AddAdditionalEquipment</span>
              </div>
              <hr>
              @Html.Partial("Calculator/_RateCard", Model)
            </form>
          </li>
        </ul>
        <div class="jcarousel-controls">
          <a href="#" class="jcarousel-control-prev">&lsaquo;</a>
          <p class="jcarousel-pagination"></p>
          <a href="#" class="jcarousel-control-next">&rsaquo;</a>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="control-add-calc col-sm-6 col-xs-12" id="first-add-button">
        <button class="btn btn-green btn-add-calc-option" type="button">@Resources.AddAnotherOption</button>
      </div>
      <div class="control-add-calc col-sm-6 col-xs-12" id="second-add-button">
        <button class="btn btn-green btn-add-calc-option hidden" type="button">@Resources.AddAnotherOption</button>
      </div>
    </div>
  </div>
</div>

@Html.Partial("Calculator/_EquipmentTemplate", Model)
<div class="hidden">
    @Html.DropDownList("hiddenCustomDropdown",
        EnumHelper.GetSelectList(typeof(LoanDeferralType)),
        new { @class = "form-control hidden", @id= "deferralDropdownForCustomRc" })
    @Html.DropDownList("deferralDropdownForDeferralRc", Model.DeferralPeriods.Select(x => new SelectListItem { Value = x.Key, Text = x.Value }), new { @class = "hidden" })
    @Html.HiddenFor(x => x.RateCardProgramsAvailable, new {id="programs-available"});
</div>

@section Translations
{
  translations['TotalMonthlyPaymentMustBeGreaterZero'] = "@Html.Raw(Resources.TotalMonthlyPaymentMustBeGreaterZero)";
  translations['loanTermMax'] = "@Resources.LoanTermMustBe3Max";
  translations['loanTermFormat'] = "@Resources.LoanTermIncorrectFormat";
  translations['amortTermMax'] = "@Resources.AmortizationTermMustBe3Max";
  translations['amortTermFormat'] = "@Resources.AmortizationTermIncorrectFormat";
  translations['adminFeeFormat'] = "@Resources.AdminFeeIncorrectFormat";
  translations['customerRateFormat'] = "@Resources.CustomerRateIncorrectFormat";
  translations['yourCostFormat'] = "@Resources.YourRateIncorrectFormat";
  translations['customerOrYourCost'] = "@Resources.CustomerOrYourCostRequired";
  translations['enterZero'] = "@Resources.PleaseEnterAtLeastZero";
  translations['EnterValidDate'] = "@Resources.EnterValidDate";
  translations['downPaymentInvalidFormat']='@Resources.DownPaymentIncorrectFormat';
  translations['tax']='@Resources.Tax';
  translations['coveredByCustomer'] = "@Resources.CoveredByCustomer";
  translations['coveredByDealer'] = "@Resources.CoveredByDealer";
}


<script type="text/javascript">
    var taxRate = '0';
    var customerFee = @Model.AdminFee;
    var TotalAmtFinancedFor180amortTerm = @Model.TotalAmountFinancedFor180AmortTerm;
</script>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/localization")
    @Scripts.Render("~/bundles/standalone-calculator")

    <script type="text/javascript">
        configInitialized.then(function() {
            module.require('calculator.init').init(
                @Html.Raw(Json.Encode(Model.Plans)),
                @Html.Raw(Json.Encode(Model.DealerTier.RateCards)),
                @Html.Raw(Json.Encode(Model.ProvinceTaxRates)));
        });
    </script>
}


