@using DealnetPortal.Api.Common.Enumeration
@using DealnetPortal.Api.Common.Helpers
@using Microsoft.Ajax.Utilities
@model DealnetPortal.Web.Models.LoanCalculatorViewModel

@{
    var loanDeferralTypes = Enum.GetValues(typeof(DeferralType))
                         .Cast<DeferralType>()
                         .Where(e => e == DeferralType.NoDeferral ||
                         e == DeferralType.ThreeMonth ||
                         e == DeferralType.SixMonth ||
                         e == DeferralType.NineMonth ||
                         e == DeferralType.TwelveMonth)
                         .Select(e => new SelectListItem
                         {
                             Value = ((int)e).ToString(),
                             Text = e.GetEnumDescription()
                         }).ToList();
}
<div ng-app="calculator" ng-controller="calculator">
    <!-- Provide standalone payment calculator screen -->
    <div id="label-steps">
        <div class="dealnet-action-link">Calculator</div> >
    </div>
    <div class="dealnet-large-header" id="basic-info">Calculator</div>

    <div class="initial-standalone-calculator">

        <!-- Nav tabs -->
        <ul class="nav nav-tabs text-left switch-calculators hidden-md hidden-lg compare-mode">
            <li class="active"><a href="#" data-calc="1" ng-click="retrieveCompareState()">Type 1</a></li>
            <li><a href="#" data-calc="2">Type 2</a></li>
            <li><a href="#" data-calc="3">Type 3</a></li>
        </ul>

        <!-- Tab panes -->

        <div class="form-container equipment-form-container has-loan-calc standalone-calculator">
            <div class="form-section">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "activeForm" }))
                {
                    <div class="equipment-editable-parent row">
                        <div class="equipment-editable-section col-sm-6">
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-8 initial-width">
                                        <label>Choose province</label>
                                        @Html.DropDownListFor(m => m.ProvinceTaxRates,
                                            (Model.ProvinceTaxRates).Select(x => new SelectListItem {Value = x.Rate.ToStringInvariant(), Text = x.Province}),
                                            new {@class = "form-control", id="province-tax-rate", onchange = "assignTaxRate.call(this); calculateLoanValues();" })
                                    </div>
                                </div>
                            </div>
                            <div class="equipments-hold" recalculate-Tcp reset-Form>
                                <h3 class="dealnet-middle-header no-top-margin-compare-mode">Equipment Information</h3>
                                <div ng-repeat="item in activeEquipment">
                                    <div class="dealnet-middle-header owner-info-label" ng-if="$index !== 0">
                                        <div ng-click="removeActiveEquipment($index)">
                                            <i class="glyphicon glyphicon-remove"></i>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.NewEquipment[0].Type, new { @for = "Equipment_NewEquipment_{{$index}}__Type" })
                                        @Html.DropDownListFor(m => m.Equipment.NewEquipment[0].Type,
                                                (Model.EquipmentTypes).Select(x => new SelectListItem { Value = x.Type, Text = x.Description }),
                                                new { id = "Equipment_NewEquipment_{{$index}}__Type", Name = "Equipment.NewEquipment[{{$index}}].Type", @class = "form-control", ng_model = "item.type" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.NewEquipment[0].Description, new { @for = "Equipment_NewEquipment_{{$index}}__Description" })
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.NewEquipment[0].Description, new { id = "Equipment_NewEquipment_{{$index}}__Description", Name = "Equipment.NewEquipment[{{$index}}].Description", @class = "form-control dealnet-input date-input", placeholder = "Description", ng_model = "item.description" })
                                            @Html.ValidationMessageFor(m => m.Equipment.NewEquipment[0].Description, "", new { data_valmsg_for = "Equipment.NewEquipment[{{$index}}].Description", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6 equipment-cost-col initial-width">
                                                @Html.LabelFor(m => m.Equipment.NewEquipment[0].Cost, new { @for = "Equipment_NewEquipment_{{$index}}__Cost" })
                                                <div class="control-group has-addon-left">
                                                    <div class="control-group-addon">$</div>
                                                    @Html.TextBoxFor(m => m.Equipment.NewEquipment[0].Cost, new { id = "Equipment_NewEquipment_{{$index}}__Cost", Name = "Equipment.NewEquipment[{{$index}}].Cost", @class = "form-control dealnet-input date-input equipment-cost", placeholder = "Cost", onchange = "recalculateTotalCashPrice();", ng_model = "item.cost" })
                                                    @Html.ValidationMessageFor(m => m.Equipment.NewEquipment[0].Cost, "", new { data_valmsg_for = "Equipment.NewEquipment[{{$index}}].Cost", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                </div>

                            <div class="align-middle dealnet-info-link add-equip-link" ng-click="addActiveEquipment()">
                                <svg aria-hidden="true" class="icon icon-add-app"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use></svg>
                                <span>Add additional equipment</span>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.AdminFee)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.AdminFee, new { @class = "form-control", placeholder = "Admin Fee", id = "admin-fee", onchange = "calculateLoanValues();", ng_model = "activeAdminFee" })
                                            @Html.ValidationMessageFor(m => m.Equipment.AdminFee, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.DownPayment)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.DownPayment, new { @class = "form-control", placeholder = "Down Payment", id = "down-payment", onchange = "calculateLoanValues();", ng_model = "activeDownPayment" })
                                            @Html.ValidationMessageFor(m => m.Equipment.DownPayment, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.CustomerRate)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.CustomerRate, new { @class = "form-control customer-rate", id= "customer-rate", placeholder = "Customer Rate (%)", onchange = "calculateLoanValues();", ng_model = "activeCustomerRate" })
                                            @Html.ValidationMessageFor(m => m.Equipment.CustomerRate, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <h3 class="dealnet-middle-header">Term and Rep</h3>
                            <div class="row loan-element">
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.LoanTerm)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.LoanTerm, new { @class = "form-control dealnet-input loan-term", id= "loan-term", placeholder = "Loan Term", onchange = "calculateLoanValues();", value = "120", ng_model = "activeLoanTerm" })
                                            @Html.ValidationMessageFor(m => m.Equipment.LoanTerm, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.AmortizationTerm)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.AmortizationTerm, new { @class = "form-control dealnet-input amortization-term", id= "amortization-term", placeholder = "Amortization Term", onchange = "calculateLoanValues();", ng_model = "activeAmortizationTerm" })
                                            @Html.ValidationMessageFor(m => m.Equipment.AmortizationTerm, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.LoanDeferralType)
                                        @Html.DropDownListFor(m => loanDeferralTypes, loanDeferralTypes, new { @class = "form-control", ng_model = "activeDeferralType" })
                                    </div>
                                </div>
                            </div>
                        </div><!--equipment-editable-section END-->

                        <div class="col-md-6 col-sm-6 sticker-parent compare-table-calculator">
                            <div class="calculators-hold">
                                <div class="row form-group hidden-sm hiden-xs text-semibold compare-mode">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label ">Comparing</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1 calc-title" data-calc="1">
                                        Type 1
                                        <span class="calculator-remove">
                                            <i class="glyphicon glyphicon-remove"></i>
                                        </span>
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 calc-title compare-mode" data-calc="2">
                                        Type 2
                                        <span class="calculator-remove">
                                            <i class="glyphicon glyphicon-remove"></i>
                                        </span>
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 calc-title compare-mode" data-calc="3">
                                        Type 3
                                        <span class="calculator-remove">
                                            <i class="glyphicon glyphicon-remove"></i>
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group  hidden-sm hiden-xs compare-mode">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Type of equipment</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right calc-field-type1 text-uppercase">AIR CONDITIONER</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right calc-field-type2 text-uppercase">AIR CONDITIONER</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right calc-field-type3 text-uppercase">AIR CONDITIONER</div>
                                </div>
                                <div class="row form-group  hidden-sm hiden-xs compare-mode">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Description</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right calc-field-type1 text-uppercase">Everest 16 SEER - ESX130181</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right calc-field-type2 text-uppercase">Goodman 40000 - 36840 - GMSS960402BN</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right calc-field-type3 text-uppercase">Goodman 40000 - 36840 - GMSS960402BN</div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Cash Price of Equipment</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="equipment-cash-price">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>10,400.00</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>11,400.00</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">HST</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="hst">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>1,500.00</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>1,950.00</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Total Cash Price</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="total-cash-price">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>15,459.95</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>18,459.95</span></div>
                                </div>
                                <hr>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Total Amount Financed</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="total-amount-financed">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>300.12</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>500.00</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Total Monthly Payment</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="loan-total-monthly-payment">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>26,967.35</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>29,967.35</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Total of All Monthly Payments</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="loan-total-all-monthly-payments">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>-</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Balance Owing at the End of Monthly Payments (Residual)</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="residual-balance">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>25,967.35</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>26,967.35</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Total Obligation</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="total-obligation">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">$ <span>4,507.40</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">$ <span>6,507.40</span></div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label">Total Cost of Borrowing</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1">$ <span id="total-borrowing-cost">-</span></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 compare-mode">12.000 %</div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 compare-mode">14.000 %</div>
                                </div>
                                <div class="row form-group hidden-xs hidden-sm compare-mode">
                                    <div class="col-xs-8 col-sm-8 col-md-9 calc-label"></div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type1 calc-field-edit">
                                        <a class="dealnet-section-edit-link" onClick="$('#calculator-modal').modal(); return false;">Edit</a>
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type2 calc-field-edit">
                                        <a class="dealnet-section-edit-link" onClick="$('#calculator-modal').modal(); return false;">Edit</a>
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-3 text-right text-semibold calc-field-type3 calc-field-edit">
                                        <a class="dealnet-section-edit-link" onClick="$('#calculator-modal').modal(); return false;">Edit</a>
                                    </div>
                                </div>
                            </div><!--equipment-calculator END-->
                        </div>

                    </div>
                    <!--equipment-editable-parent END-->
                }

                <div class="row">
                    <div class="col-md-12">
                        <div class="button-proceed">
                            <input type="submit" value="Add to Comparison" class="btn dealnet-button dealnet-success-button initial-mode" ng-click="tryCopyActiveToCompare()">
                            <button class="btn dealnet-button dealnet-success-button hidden-md hidden-lg compare-mode" id="clearCalcBtn">Remove</button>
                        </div>
                    </div>
                </div>

            </div> <!--form-section END-->

        </div><!--form-container END-->
    </div><!--initial-standalone-calculator END-->

    <!--Modal for desktop version-->
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="calculator-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">Compare to</div>
                </div>
                <div class="modal-body no-padding-top">
                    <h3 class="dealnet-middle-header no-top-margin">Equipment Information</h3>
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formToCompare" }))
                    {
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            <div class="equipments-hold">
                                <div ng-repeat="item in equipmentToCompare">
                                    <div class="dealnet-middle-header owner-info-label" ng-if="$index !== 0">
                                        <div ng-click="removeEquipmentToCompare($index)">
                                            <i class="glyphicon glyphicon-remove"></i>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Equipment.NewEquipment[0].Type, new { @for = "Equipment_NewEquipment_{{$index}}__Type" })
                                                @Html.DropDownListFor(m => m.Equipment.NewEquipment[0].Type,
                                                (Model.EquipmentTypes).Select(x => new SelectListItem { Value = x.Type, Text = x.Description }),
                                                new { id = "Equipment_NewEquipment_{{$index}}__Type", Name = "Equipment.NewEquipment[{{$index}}].Type", @class = "form-control", ng_model = "item.type" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Equipment.NewEquipment[0].Description, new { @for = "Equipment_NewEquipment_{{$index}}__Description" })
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.Equipment.NewEquipment[0].Description, new { id = "Equipment_NewEquipment_{{$index}}__Description", Name = "Equipment.NewEquipment[{{$index}}].Description", @class = "form-control dealnet-input date-input", placeholder = "Description", ng_model = "item.description" })
                                                    @Html.ValidationMessageFor(m => m.Equipment.NewEquipment[0].Description, "", new { data_valmsg_for= "Equipment.NewEquipment[{{$index}}].Description", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(m => m.Equipment.NewEquipment[0].Cost, new { @for = "Equipment_NewEquipment_{{$index}}__Cost" })
                                            <div class="control-group has-addon-left">
                                                <div class="control-group-addon">$</div>
                                                @Html.TextBoxFor(m => m.Equipment.NewEquipment[0].Cost, new { id = "Equipment_NewEquipment_{{$index}}__Cost", Name = "Equipment.NewEquipment[{{$index}}].Cost", @class = "form-control dealnet-input date-input equipment-cost", placeholder = "Cost", ng_model = "item.cost" })
                                                @Html.ValidationMessageFor(m => m.Equipment.NewEquipment[0].Cost, "", new { data_valmsg_for = "Equipment.NewEquipment[{{$index}}].Cost", @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="align-middle dealnet-info-link add-equip-link" ng-click="addEquipmentToCompare()">
                                <svg aria-hidden="true" class="icon icon-add-app"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use></svg>
                                <span>Add additional equipment</span>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.AdminFee)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.AdminFee, new { @class = "form-control", placeholder = "Admin Fee", ng_model = "adminFeeToCompare" })
                                            @Html.ValidationMessageFor(m => m.Equipment.AdminFee, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.DownPayment)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.DownPayment, new { @class = "form-control", placeholder = "Down Payment", ng_model = "downPaymentToCompare" })
                                            @Html.ValidationMessageFor(m => m.Equipment.DownPayment, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.CustomerRate)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.CustomerRate, new { @class = "form-control customer-rate", placeholder = "Customer Rate (%)", ng_model = "customerRateToCompare" })
                                            @Html.ValidationMessageFor(m => m.Equipment.CustomerRate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <h3 class="dealnet-middle-header">Term and Rep</h3>
                            <div class="row loan-element">
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.LoanTerm)
                                        @Html.TextBoxFor(m => m.Equipment.LoanTerm, new { @class = "form-control dealnet-input", placeholder = "Loan Term", value = "120", ng_model = "loanTermToCompare" })
                                        @Html.ValidationMessageFor(m => m.Equipment.LoanTerm, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.AmortizationTerm)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.Equipment.AmortizationTerm, new { @class = "form-control dealnet-input amortization-term", placeholder = "Amortization Term", ng_model = "amortizationTermToCompare" })
                                            @Html.ValidationMessageFor(m => m.Equipment.AmortizationTerm, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 initial-width">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Equipment.LoanDeferralType)
                                        @Html.DropDownListFor(m => loanDeferralTypes, loanDeferralTypes, new {@class = "form-control", ng_model = "deferralTypeToCompare"})
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" data-dismiss="modal"
                                onClick="$('.initial-standalone-calculator').addClass('compare-mode');"
                                ng-click="addCompareState()">
                            Add to Comparison
                        </button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts
{

    <script type="text/javascript">
        var taxRate = 0;
    </script>

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/loan-calculator.js")

    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.1/angular.min.js"></script>
    <script type="text/javascript">

        var app = angular.module("calculator", []);

        app.directive('recalculateTcp', function () {
            return {
                link: function ($scope, element, attrs) {
                    var watch = $scope.$watch(function () {
                        return element.children().length;
                    }, function () {
                        $scope.$evalAsync(function () {
                            recalculateTotalCashPrice();
                        });
                    });
                }
            };
        });
        app.directive('resetForm', function () {
            return {
                link: function ($scope, element, attrs) {
                    var watch = $scope.$watch(function () {
                        return element.children().length;
                    }, function () {
                        $scope.$evalAsync(function () {
                            var form = element.parent().closest('form');;
                            customizeSelect();
                            resetFormValidator(form);
                        });
                    });
                }
            };
        });
        app.controller("calculator", function ($scope) {
            var defaultEquipmentType = '@Model.EquipmentTypes.First().Type';
            var defaultDefferalType = '@loanDeferralTypes.First().Value';
            $scope.compareStates = [];
            $scope.activeDeferralType = defaultDefferalType;
            $scope.activeEquipment = [];
            $scope.addActiveEquipment = function () {
                $scope.activeEquipment.push({
                    type: defaultEquipmentType,
                    description: '',
                    cost: ''
                });
            }
            $scope.removeActiveEquipment = function (index) {
                $scope.activeEquipment.splice(index, 1);
            }
            $scope.addActiveEquipment();
            $scope.equipmentToCompare = [];
            $scope.addEquipmentToCompare = function() {
                $scope.equipmentToCompare.push({
                    type: defaultEquipmentType,
                    description: '',
                    cost: ''
                });
            }
            $scope.removeEquipmentToCompare = function (index) {
                $scope.equipmentToCompare.splice(index, 1);
            }
            $scope.addEquipmentToCompare();
            $scope.addCompareState = function () {
                $scope.compareStates.push({
                    equipment: $scope.equipmentToCompare,
                    adminFee: $scope.adminFeeToCompare,
                    downPayment: $scope.downPaymentToCompare,
                    customerRate: $scope.customerRateToCompare,
                    loanTerm: $scope.loanTermToCompare,
                    amortizationTerm: $scope.amortizationTermToCompare,
                    deferralType: $scope.deferralTypeToCompare
                });
            };
            $scope.tryCopyActiveToCompare = function () {
                var form = $('#activeForm');
                form.validate();
                if (!form.valid()) {
                    return;
                }
                $scope.equipmentToCompare = JSON.parse(JSON.stringify($scope.activeEquipment));
                $scope.adminFeeToCompare = $scope.activeAdminFee;
                $scope.downPaymentToCompare = $scope.activeDownPayment;
                $scope.customerRateToCompare = $scope.activeCustomerRate;
                $scope.loanTermToCompare = $scope.activeLoanTerm;
                $scope.amortizationTermToCompare = $scope.activeAmortizationTerm;
                $scope.deferralTypeToCompare = $scope.activeDeferralType;
                $('#calculator-modal').modal();
            };
        });
        $(document)
            .ready(function() {
                //$('#calculator-modal .dealnet-modal-section').html($('#compare-calculator-data').html());

                displayCompareCalcs();
                makeStickCalendar();
                $('#province-tax-rate').change();

                $(window).on('resize', function() {
                    displayCompareCalcs();
                    makeStickCalendar();
                }).on('scroll', function() {
                    makeStickCalendar();
                });

                $('.switch-calculators li a').on('click', function() {
                    var currLi = $(this).parent('li');
                    var currCalcNumber = $(this).attr('data-calc');
                    currLi.addClass('active').siblings().removeClass('active');
                    switchCalcs(currCalcNumber);
                    checkEmptyCalc();
                });

                $('#clearCalcBtn').on('click', function() {
                    var activeCalcNumber = $('.switch-calculators li.active a').attr('data-calc');
                    clearCalculator(activeCalcNumber)
                });

                $('.calculator-remove').on('click', function() {
                    var activeCalcNumber = $(this).parents('.calc-title').attr('data-calc');
                    clearCalculator(activeCalcNumber);
                });
            });

        function recalculateTotalCashPrice() {
            var sum;
            $(".equipment-cost").each(function () {
                var numberValue = parseFloat(this.value);
                if (!isNaN(numberValue)) {
                    if (!sum) { sum = 0; }
                    sum += numberValue;
                }
            });

            if (!sum) { return; }

            $("#equipment-cash-price").text(sum.toFixed(2));
            calculateLoanValues();
        }

        function resetFormValidator(formId) {
            var form = $(formId);
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(formId);
            form.find('.customer-rate').rules("add", "required");
            form.find('.amortization-term').rules("add", "required");
            form.find('.loan-term').rules("add", "required");
            form.find('.equipment-cost').each(function () {
                $(this).rules("add", "required");
            });
        }

        function assignTaxRate() {
            taxRate = this.value;
        }

        function displayCompareCalcs() {
            if ($(window).width() < 1023) {
                var activeCalcNumber = $('.switch-calculators li.active a').attr('data-calc');
                $('div[class*="calc-field-type"]').hide();
                $('.calc-field-type' + activeCalcNumber).show();
            } else {
                $('div[class*="calc-field-type"]').show();
            }
        }

        function makeStickCalendar() {
            if ($(document).height() > $(window).height()) {
                if ($('.compare-standalone-calculator').css('display') !== 'none') {
                    $('.calculators-hold').addClass('sticker');
                    if ($('.calculators-hold.sticker').length) {
                        $('.calculators-hold.sticker').each(function() {
                            stickySection($(this));
                        });
                    }
                }
                if ($('.initial-standalone-calculator').css('display') !== 'none') {
                    $('.equipment-calculator').addClass('sticker');
                    if ($('.equipment-calculator.sticker').length) {
                        $('.equipment-calculator.sticker').each(function() {
                            stickySection($(this));
                        });
                    }
                }
            } else {
                $('.calculators-hold').removeClass('sticker').removeClass('stick');
                $('.equipment-calculator').removeClass('sticker').removeClass('stick');
            }
        }

        function switchCalcs(calcNumber) {
            $('div[class*="calc-field-type"]').hide();
            $('.calc-field-type' + calcNumber).show();
        }

        function checkEmptyCalc() {
            if ($('.switch-calculators li.active a').hasClass('empty-calc')) {
                $('#clearCalcBtn').hide();
            } else {
                $('#clearCalcBtn').show();
            }
        }

        function clearCalculator(calculatorNumber) {
            $('.calc-field-type' + calculatorNumber)
                .not('.calc-title')
                .not('.calc-field-edit')
                .html('$ <span>-</span>');
            $('.calc-field-type' + calculatorNumber + '.calc-field-edit a').hide();

            $('.calc-field-type' + calculatorNumber + '.calc-title')
                .html('<a class="dealnet-section-edit-link add-calculator-btn">Add Type' + calculatorNumber + '</a>')
                .find('.calculator-remove').hide();
            $('.switch-calculators li a[data-calc="' + calculatorNumber + '"]').addClass('empty-calc').html('Add Type ' + calculatorNumber);

            $('.add-calculator-btn').on('click', function() {
                $('#calculator-modal').modal();
                return false;
            });

            if($('.empty-calc').length === 2){
                $('.initial-standalone-calculator').removeClass('compare-mode');
            }

            checkEmptyCalc();
        }
    </script>
}
