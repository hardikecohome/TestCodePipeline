@using DealnetPortal.Api.Models.Contract
@model DealnetPortal.Web.Models.EquipmentInformation.EquipmentInformationViewModel

@{
    if (Model?.ExistingEquipment != null && !Model.ExistingEquipment.Any())
    {
        Model.ExistingEquipment = null;
    }
    var yesNaming = Resources.Yes;
    var noNaming = Resources.No;
}

<div id="label-steps">
    <div class="dealnet-action-link">@Resources.NewApplication</div> >
</div>
<div class="dealnet-large-header">@Resources.EquipmentInformation</div>
<div id="steps-line"></div>
<div class="row" id="steps">
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        <a href="@Url.Action("BasicInfo", new { contractId = Model.ContractId })" data-warning="true" class="step-item">1</a>
    </div>
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        <a href="@Url.Action("CreditCheckConfirmation", new { contractId = Model.ContractId })" data-warning="true" id="step2" class="step-item">2</a>

        <div id="step3" class="step-item step-active">3</div>
    </div>
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        @if (Model.IsAllInfoCompleted)
        {
            <a href="@Url.Action("ContactAndPaymentInfo", new {contractId = Model.ContractId})" id="step4" class="step-item">4</a>
        }
        else
        {
            <div id="step4" class="step-item">4</div>
        }
    </div>
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        @if (Model.IsAllInfoCompleted)
        {
            <a href="@Url.Action("SummaryAndConfirmation", new {contractId = Model.ContractId})" id="step5" class="step-item">5</a>
        }
        else
        {
            <div id="step5" class="step-item">5</div>
        }
    </div>
</div>
<div class="form-container equipment-form-container">
<div class="form-section">
<div class="row">
    <div class="col-md-12">
        @if ((decimal?)TempData["MaxCreditAmount"] != null)
        {
            <p class="align-middle equipment-proceed-success">
                <svg aria-hidden="true" class="icon icon-success"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-success")"></use></svg>
                <span>@Resources.CreditCheckProcessedSuccessfully</span>
            </p>

            <p class="text-semibold preapproved-text">@Resources.PreApprovedFor $@((decimal?) TempData["MaxCreditAmount"] != null ? $"{TempData["MaxCreditAmount"]:0,00}" : $"{Model.CreditAmount:0,00}" )</p>
        }
    </div>
</div>


@using (Html.BeginForm("EquipmentInformation", "NewRental", null, FormMethod.Post, new { id = "equipment-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ContractId)

    <div class="equipment-editable-parent row">
        <div class="equipment-editable-section col-sm-6">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.AgreementType)
                        @Html.EnumDropDownListFor(m => m.AgreementType, null, new { @class = "form-control", id = "agreement-type" })
                    </div>
                </div>
            </div>

                @Html.HiddenFor(x => x.CreditAmount)


                <div id="new-equipments">
                    <h3 class="dealnet-middle-header">@Resources.NewEquipmentInformation</h3>

                    @if (Model?.NewEquipment != null)
                    {
                        for (var i = 0; i < Model.NewEquipment.Count; i++)
                        {
                            <div id="new-equipment-@(i)" class="new-equipment new-equipment-wrap">
                                <div class="dealnet-middle-header owner-info-label">
                                    <span class="equipment-number">№@(i + 1)</span>
                                    @if (i != 0)
                        {
                                        <div id="new-equipment-remove-@(i)" class="additional-remove" onclick="removeNewEquipment(@(i)); recalculateTotalMonthlyPayment(); recalculateTotalCashPrice();">
                                            <i class="glyphicon glyphicon-remove"></i>
                                        </div>
                                    }
                                </div>
                                <div class="row">
                                    <div class="col-xs-12 col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewEquipment[i].Type)
                                            @Html.DropDownListFor(m => m.NewEquipment[i].Type,
                        ((IList<EquipmentTypeDTO>)ViewBag.EquipmentTypes).Select(x => new SelectListItem { Value = x.Type, Text = x.Description, Selected = Model?.NewEquipment != null && Model.NewEquipment[i]?.Type == x.Type }),
                        new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewEquipment[i].Description)
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.NewEquipment[i].Description, new { @class = "form-control dealnet-input", placeholder = Resources.Description })
                                                @Html.ValidationMessageFor(m => m.NewEquipment[i].Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 equipment-cost-col">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewEquipment[i].Cost)
                                            <div class="control-group has-addon-left">
                                                <div class="control-group-addon">$</div>
                                                @Html.TextBoxFor(m => m.NewEquipment[i].Cost, new { @class = "form-control dealnet-input equipment-cost", placeholder = Resources.Cost, onchange = "recalculateTotalCashPrice();" })
                                                @Html.ValidationMessageFor(m => m.NewEquipment[i].Cost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4 monthly-cost-col">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewEquipment[i].MonthlyCost)
                                            <div class="control-group has-addon-left">
                                                <div class="control-group-addon">$</div>
                                                @Html.TextBoxFor(m => m.NewEquipment[i].MonthlyCost, new { @class = "form-control dealnet-input monthly-cost", placeholder = Resources.MonthlyCost, onchange = "recalculateTotalMonthlyPayment();" })
                                                @Html.ValidationMessageFor(m => m.NewEquipment[i].MonthlyCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewEquipment[i].EstimatedInstallationDate, new { @for = "estimated-installation-date-" + i })
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.NewEquipment[i].EstimatedInstallationDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "form-control dealnet-input date-input", id = "estimated-installation-date-" + i, placeholder = Resources.DateFormat, data_val_date = "" })
                                                @Html.ValidationMessageFor(m => m.NewEquipment[i].EstimatedInstallationDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="align-middle dealnet-info-link add-equip-link" onclick="addNewEquipment(); recalculateTotalMonthlyPayment();">
                            <svg aria-hidden="true" class="icon icon-add-app"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use></svg>
                            <span>@Resources.AddAdditionalEquipment</span>
                        </div>
                    </div>
                </div>
                <hr class="loan-element">
                <div class="row loan-element">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdminFee)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdminFee, new { @class = "form-control", placeholder = Resources.AdminFee, id = "admin-fee", onchange = "calculateLoanValues();" })
                                @Html.ValidationMessageFor(m => m.AdminFee, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.DownPayment)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.DownPayment, new { @class = "form-control", placeholder = Resources.DownPayment, id = "down-payment", onchange = "calculateLoanValues();" })
                                @Html.ValidationMessageFor(m => m.DownPayment, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CustomerRate)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.CustomerRate, new { @class = "form-control", placeholder = Resources.CustomerRatePercentage, id = "customer-rate", onchange = "calculateLoanValues();" })
                                @Html.ValidationMessageFor(m => m.CustomerRate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr>

                <div class="row rental-element">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.TotalMonthlyPayment)
                            <div class="control-group has-addon-left">
                                <div class="control-group-addon">$</div>
                                @Html.TextBoxFor(m => m.TotalMonthlyPayment, new { @class = "form-control dealnet-input", id = "total-monthly-payment", placeholder = Resources.TotalMonthlyPayment })
                                @Html.ValidationMessageFor(m => m.TotalMonthlyPayment, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>


                <h3 class="dealnet-middle-header">@Resources.TermAndRep</h3>

                <div class="row">
                    <div class="col-md-4 rental-element">
                        <div class="form-group">
                            @Html.LabelFor(m => m.RequestedTerm)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.RequestedTerm, new {@class = "form-control dealnet-input", placeholder = Resources.RequestedTerm, id = "requested-term"})
                                @Html.ValidationMessageFor(m => m.RequestedTerm, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 loan-element">
                        <div class="form-group">
                            @Html.LabelFor(m => m.LoanTerm)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.LoanTerm, new { @class = "form-control dealnet-input", placeholder = Resources.LoanTerm, id = "loan-term", onchange = "calculateLoanValues();" })
                                @Html.ValidationMessageFor(m => m.LoanTerm, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.SalesRep)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.SalesRep, new { @class = "form-control dealnet-input", placeholder = Resources.SalesRep })
                                @Html.ValidationMessageFor(m => m.SalesRep, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 loan-element">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AmortizationTerm)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AmortizationTerm, new { @class = "form-control dealnet-input", placeholder = Resources.AmortizationTerm, id = "amortization-term", onchange = "calculateLoanValues();" })
                                @Html.ValidationMessageFor(m => m.AmortizationTerm, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
        </div>
        <div class="col-md-6 col-sm-6">
            <div class="equipment-calculator sticker">
                <div class="loan-element">
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">@Resources.CashPriceOfEquipment</div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="equipment-cash-price">-</span></div>
                    </div>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">@Resources.GstHst</div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="hst">-</span></div>
                    </div>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">@Resources.TotalCashPrice</div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="total-cash-price">-</span></div>
                    </div>
                    <hr>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">@Resources.TotalAmountFinanced</div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="total-amount-financed">-</span></div>
                    </div>

                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">
                            @Resources.TotalMonthlyPayment
                        </div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">
                            $ <span id="loan-total-monthly-payment">-</span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">
                            @Resources.TotalAllMonthlyPayments
                        </div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">
                            $ <span id="loan-total-all-monthly-payments">-</span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">
                            @Resources.BalanceOwingEndOfPayments
                        </div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">
                            $ <span id="residual-balance">-</span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">
                            @Resources.TotalObligation
                        </div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">
                            $ <span id="total-obligation">-</span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-xs-8 col-sm-9">
                            @Resources.TotalCostOfBorrowing
                        </div>
                        <div class="col-xs-4 col-sm-3 text-right text-semibold">
                            $ <span id="total-borrowing-cost">-</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="equipment-editable-section col-sm-6">
            <div id="existing-equipments">
                <h3 class="dealnet-middle-header">@Resources.ExistingEquipmentInformation</h3>

                @if (Model?.ExistingEquipment != null)
                {
                for (var i = 0; i < Model.ExistingEquipment.Count; i++)
                {
                <div id="existing-equipment-@(i)">
                    <div class="dealnet-middle-header owner-info-label">
                        <span class="equipment-number">№@(i + 1)</span>
                        <div id="existing-equipment-remove-@(i)" class="additional-remove" onclick="removeExistingEquipment(@(i));">
                            <i class="glyphicon glyphicon-remove"></i>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4 col-md-2 col-lg-2">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].IsRental)
                                <div class="control-group">
                                    @Html.DropDownListFor(m => m.ExistingEquipment[i].IsRental, new SelectList(
                                        new[]
                                        {
                                            new {Value = "true", Text = yesNaming, Selected = Model?.ExistingEquipment != null && Model.ExistingEquipment[i].IsRental},
                                            new {Value = "false", Text = noNaming, Selected = Model?.ExistingEquipment != null && !Model.ExistingEquipment[i].IsRental},
                                        },
                                        "Value", "Text", Model?.ExistingEquipment != null ? Model.ExistingEquipment[i].IsRental : true), new {@class = "form-control"})
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-8 col-md-4 col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].RentalCompany)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.ExistingEquipment[i].RentalCompany, new { @class = "form-control dealnet-input", placeholder = Resources.RentalCompany })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].RentalCompany, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].EstimatedAge)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.ExistingEquipment[i].EstimatedAge, new { @class = "form-control dealnet-input", placeholder = Resources.Years })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].EstimatedAge, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].Make)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.ExistingEquipment[i].Make, new { @class = "form-control dealnet-input", placeholder = Resources.Make })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].Make, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].Model)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.ExistingEquipment[i].Model, new { @class = "form-control dealnet-input", placeholder = Resources.Model })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].Model, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].SerialNumber)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.ExistingEquipment[i].SerialNumber, new { @class = "form-control dealnet-input", placeholder = Resources.SerialNumber })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].SerialNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].GeneralCondition)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.ExistingEquipment[i].GeneralCondition, new { @class = "form-control dealnet-input", placeholder = Resources.GeneralCondition })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].GeneralCondition, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ExistingEquipment[i].Notes)
                                <div class="control-group">
                                    @Html.TextAreaFor(m => m.ExistingEquipment[i].Notes, new { @class = "form-control", placeholder = Resources.Notes })
                                    @Html.ValidationMessageFor(m => m.ExistingEquipment[i].Notes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                }
                }
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="align-middle dealnet-info-link add-equip-link" onclick="addExistingEquipment()">
                        <svg aria-hidden="true" class="icon icon-add-app"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use></svg>
                        <span>@Resources.AddAdditionalEquipment</span>
                    </div>
                </div>
            </div>
            <hr>

            <h3 class="dealnet-middle-header">@Resources.AdditionalContractInformation</h3>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Notes)
                        <div class="control-group">
                            @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", placeholder = Resources.ContractNotes })
                            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @Html.ValidationMessageFor(m => m.NewEquipment, "", new { @class = "text-danger", id = "new-equipment-validation-message" })

            <div class="row">
                <div class="col-md-12">
                    <div class="button-proceed">
                        <input type="submit" value="@Resources.SaveAndProceed" class="btn dealnet-button dealnet-success-button" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
</div>
</div>
@using (Html.BeginForm(null, null))
{
    <div class="hidden">
        <div id="new-equipment-base" class="new-equipment">
            <div class="dealnet-middle-header owner-info-label">
                <span class="equipment-number">№1</span>
                <div id="new-equipment-remove-0" class="additional-remove" onclick="removeNewEquipment(0); recalculateTotalMonthlyPayment(); recalculateTotalCashPrice();">
                    <i class="glyphicon glyphicon-remove"></i>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewEquipment[0].Type)
                        @Html.DropDownListFor(m => m.NewEquipment[0].Type,
                            ((IList<EquipmentTypeDTO>)ViewBag.EquipmentTypes).Select(x => new SelectListItem { Value = x.Type, Text = x.Description }),
                            new { @class = "form-control", @Value = 0 })
                    </div>
                </div>
                <div class="col-xs-12 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewEquipment[0].Description)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.NewEquipment[0].Description, new { @class = "form-control dealnet-input", placeholder = Resources.Description, @Value = "" })
                            @Html.ValidationMessageFor(m => m.NewEquipment[0].Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 equipment-cost-col">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewEquipment[0].Cost)
                        <div class="control-group has-addon-left">
                            <div class="control-group-addon">$</div>
                            @Html.TextBoxFor(m => m.NewEquipment[0].Cost, new { @class = "form-control dealnet-input equipment-cost", placeholder = Resources.Cost, onchange = "recalculateTotalCashPrice();", @Value = "" })
                            @Html.ValidationMessageFor(m => m.NewEquipment[0].Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 monthly-cost-col">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewEquipment[0].MonthlyCost)
                        <div class="control-group has-addon-left">
                            <div class="control-group-addon">$</div>
                            @Html.TextBoxFor(m => m.NewEquipment[0].MonthlyCost, new { @class = "form-control dealnet-input monthly-cost", placeholder = Resources.MonthlyCost, onchange = "recalculateTotalMonthlyPayment();", @Value = "" })
                            @Html.ValidationMessageFor(m => m.NewEquipment[0].MonthlyCost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewEquipment[0].EstimatedInstallationDate, new { @for = "estimated-installation-date-0" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.NewEquipment[0].EstimatedInstallationDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "form-control dealnet-input date-input", id = "estimated-installation-date-0", placeholder = Resources.DateFormat, data_val_date = "", @Value = "" })
                            @Html.ValidationMessageFor(m => m.NewEquipment[0].EstimatedInstallationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="hidden">
        <div id="existing-equipment-base">
            <div class="dealnet-middle-header owner-info-label">
                <span class="equipment-number">№1</span>
                <div id="existing-equipment-remove-0" class="additional-remove" onclick="removeExistingEquipment(0);">
                    <i class="glyphicon glyphicon-remove"></i>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 col-md-2 col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].IsRental)
                        <div class="control-group">
                            @Html.DropDownListFor(m => m.ExistingEquipment[0].IsRental, new SelectList(
                                new[]
                                {
                                    new {Value = "true", Text = yesNaming, Selected = Model?.ExistingEquipment != null && Model.ExistingEquipment[0].IsRental},
                                    new {Value = "false", Text = noNaming, Selected = Model?.ExistingEquipment != null && !Model.ExistingEquipment[0].IsRental},
                                },
                                "Value", "Text", true), new { @class = "form-control", id = "payment-type" })
                            @*"Value", "Text", Model), new {@class = "form-control", id = "payment-type"})*@
                        </div>
                    </div>
                </div>
                <div class="col-sm-8 col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].RentalCompany)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.ExistingEquipment[0].RentalCompany, new { @class = "form-control dealnet-input", placeholder = Resources.RentalCompany, @Value = "" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].RentalCompany, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-3 col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].EstimatedAge)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.ExistingEquipment[0].EstimatedAge, new { @class = "form-control dealnet-input", placeholder = Resources.Years, @Value = "" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].EstimatedAge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class=" col-sm-12 col-md-3 col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].Make)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.ExistingEquipment[0].Make, new { @class = "form-control dealnet-input", placeholder = Resources.Make, @Value = "" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].Make, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].Model)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.ExistingEquipment[0].Model, new { @class = "form-control dealnet-input", placeholder = Resources.Model, @Value = "" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].Model, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].SerialNumber)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.ExistingEquipment[0].SerialNumber, new { @class = "form-control dealnet-input", placeholder = Resources.SerialNumber, @Value = "" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].SerialNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].GeneralCondition)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.ExistingEquipment[0].GeneralCondition, new { @class = "form-control dealnet-input", placeholder = Resources.GeneralCondition, @Value = "" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].GeneralCondition, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExistingEquipment[0].Notes)
                        <div class="control-group">
                            @Html.TextAreaFor(m => m.ExistingEquipment[0].Notes, new { @class = "form-control", placeholder = Resources.Notes, id = "existing-notes-default" })
                            @Html.ValidationMessageFor(m => m.ExistingEquipment[0].Notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<link href="https://code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css" rel="stylesheet">

@section scripts
{
    <script type="text/javascript">
        var taxRate = @Model.ProvinceTaxRate;
        var creditAmount = @Model.CreditAmount;
    </script>

    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/equipment-information")

    <script type="text/javascript">
        $(document)
            .ready(function () {
                sessionStorage.newEquipmets = @(Model.NewEquipment == null || !Model.NewEquipment.Any() ? 0 : Model.NewEquipment.Count);
                sessionStorage.existingEquipmets = @(Model.ExistingEquipment == null || !Model.ExistingEquipment.Any() ? 0 : Model.ExistingEquipment.Count);
                if (sessionStorage.newEquipmets == 0) {
                    addNewEquipment();
                    $('#new-equipment-remove-0').remove();
                    sessionStorage.newEquipmets = 1;
                }
            });
    </script>
}
