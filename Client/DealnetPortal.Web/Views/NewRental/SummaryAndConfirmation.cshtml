@using DealnetPortal.Api.Models.Contract
@model DealnetPortal.Web.Models.SummaryAndConfirmationViewModel

<div id="label-steps">
    <div class="dealnet-action-link">New Application</div> >
</div>

<div class="dealnet-large-header" id="basic-info">Summary And Confirmation</div>

<div id="steps-line"></div>
<div class="row" id="steps">
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        <a href="@Url.Action("BasicInfo", new { contractId = Model.BasicInfo.ContractId })" class="step-item" onclick="$(this).click(navigateWithWarning(event));">1</a>
    </div>
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        <a href="@Url.Action("CreditCheckConfirmation", new { contractId = Model.BasicInfo.ContractId })" id="step2" class="step-item" onclick="$(this).click(navigateWithWarning(event));">2</a>

        <a href="@Url.Action("EquipmentInformation", new { contractId = Model.BasicInfo.ContractId })" id="step3" class="step-item">3</a>
    </div>
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        <a href="@Url.Action("ContactAndPaymentInfo", new { contractId = Model.BasicInfo.ContractId })" id="step4" class="step-item">4</a>
    </div>
    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
        <div id="step5" class="step-item step-active">5</div>
    </div>
</div>
<div class="form-container summary-info-hold">
    @using (Html.BeginForm("RentalAgreementSubmitSuccess", "NewRental", FormMethod.Post, new {id = "send-mails-form", @class = "clearfix"}))
    {
        @Html.HiddenFor(m => m.SendEmails.ContractId)
        @Html.HiddenFor(m => m.SendEmails.HomeOwnerFullName)
        @Html.AntiForgeryToken()
        <div class="well rental-summary-emails well-info">
            <p class="summary-emails-header">
                <svg aria-hidden="true" class="icon icon-email"><use xlink:href="~/Content/images/sprite/sprite.svg#icon-email"></use></svg>
                You can use digital signature platform to sign the application. Please enter emails of applicants below and click Send Emails.
            </p>
            <p class="summary-emails-header2">Invites for digital signing of the application will be sent to the following e-mails</p>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="homeOwnerEmail">Home Owner Email</label>
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.SendEmails.HomeOwnerEmail, new {id = "homeOwnerEmail", @class = "dealnet-input form-control", type = "email"})
                            @Html.ValidationMessageFor(m => m.SendEmails.HomeOwnerEmail, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                @if (Model?.BasicInfo?.AdditionalApplicants != null)
                {
                    for (var i = 0; i < Model.BasicInfo.AdditionalApplicants.Count; i++)
                    {
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="addApplicantEmail@(i)">Additional Applicant 1 Email</label>
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.SendEmails.AdditionalApplicantsEmails[i].Email, new {id = "addApplicantEmail" + i, @class = "dealnet-input form-control", type = "email"})
                                    @Html.ValidationMessageFor(m => m.SendEmails.AdditionalApplicantsEmails[i].Email, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>
                    }
                }
                <div class="col-md-4">
                    <div class="form-group btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button" onclick="submitAsync('@Url.Action("SendContractEmails", "NewRental")', $('#send-mails-form')); $('.sent-email-msg').show()">
                            Send Emails
                        </button>
                    </div>
                </div>
	            <div class="col-md-12">
		            <div class="sent-email-msg" style="display: none;">
			            Digital signature platform is preparing the document for signing. This can take up to 2 minutes. Invites will be sent to applicants' emails.
		            </div>
	            </div>
            </div>
        </div>
    }
	<div class="clearfix">
	<div class="row">
	<form id="basic-info-form">
	    @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.BasicInfo.ContractId)
        <div class="credit-check-info-hold">
			<div class="col-md-6">
			    <div class="dealnet-credit-check-section" id="home-owner-section">
			        <h3 class="dealnet-section-title">Home Owner Information</h3>
			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.HomeOwner.FirstName, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.FirstName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>

			        </div>
			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.HomeOwner.LastName, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.LastName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>

			        <div class="form-group">
			            <div class="row">
			                @Html.Label("", "Birth of Date", new { @class = "dealnet-field-caption col-xs-6" })
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group date-group">
			                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "dealnet-disabled-input", @readonly = "readonly", data_val_date = "Date must be in range 1900 - Today", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>
			    </div>
			</div>

			<div class="col-md-6">
			    <div class="dealnet-credit-check-section" id="address-section">
			        <h3 class="dealnet-section-title">Address Information <a href="#" onclick="copyFormData($('#address-section'), $('#address-section-modal'), false); $('#address-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
			        </h3>
			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.AddressInformation.InstallationAddress, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                    @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.InstallationAddress, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>

			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                    @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.UnitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>

			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                    @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.City, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>
			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                    @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.Province, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>
			        <div class="form-group">
			            <div class="row">
			                @Html.LabelFor(m => m.BasicInfo.AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6"})
			                <div class="dealnet-field-holder col-xs-6">
			                    <div class="control-group">
			                    @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
			                    </div>
			                </div>
			            </div>
			        </div>
			    </div>
			</div>
			@if (Model.BasicInfo.MailingAddressInformation != null)
			{
		    <div class="col-md-6">
		        <div class="dealnet-credit-check-section" id="mailing-address-section">
		            <h3 class="dealnet-section-title">Mailing Address <a href="#" onclick="copyFormData($('#mailing-address-section'), $('#mailing-address-section-modal'), false); $('#mailing-address-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
		            </h3>
		            <div class="form-group">
		                <div class="row">
		                    @Html.Label("", "Mailing Address", new { @class = "dealnet-field-caption col-xs-6" })
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group">
		                        @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.InstallationAddress, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
		                        </div>
		                    </div>
		                </div>
		            </div>
		            <div class="form-group">
		                <div class="row">
		                    @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6"})
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group">
		                        @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.UnitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
		                        </div>
		                    </div>
		                </div>

		            </div>
		            <div class="form-group">
		                <div class="row">
		                    @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6"})
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group">
		                        @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.City, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
		                        </div>
		                    </div>
		                </div>

		            </div>
		            <div class="form-group">
		                <div class="row">
		                    @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6"})
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group">
		                        @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.Province, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
		                        </div>
		                    </div>
		                </div>

		            </div>
		            <div class="form-group">
		                <div class="row">
		                    @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6"})
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group">
		                        @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
		                        </div>
		                    </div>
		                </div>
		            </div>
		        </div>
		    </div>
			}
		</div>
	</form>

	<form id="contact-info-form" class="credit-check-info-hold">
	    <div class="col-md-6">
	        @Html.AntiForgeryToken()
	        @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
	        <div class="dealnet-credit-check-section" id="contact-info-section">
	            @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
	            <h3 class="dealnet-section-title">
	                Contact Information <a href="#" onclick="copyFormData($('#contact-info-section'), $('#contact-info-section-modal'), false); $('#contact-info-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
	            </h3>
	            <div class="form-group">
	                <div class="row">
	                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@class = "dealnet-field-caption col-xs-6"})
	                    <div class="dealnet-field-holder col-xs-6">
	                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                    </div>
	                </div>
	            </div>

	            <div class="form-group">
	                <div class="row">
	                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@class = "dealnet-field-caption col-xs-6"})
	                    <div class="dealnet-field-holder col-xs-6">
	                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                    </div>
	                </div>
	            </div>

	            <div class="form-group">
	                <div class="row">
	                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@class = "dealnet-field-caption col-xs-6"})
	                    <div class="dealnet-field-holder col-xs-6">
	                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                    </div>
	                </div>
	            </div>
	            <div class="form-group">
	                <div class="row">
	                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "dealnet-field-caption col-xs-6"})
	                    <div class="dealnet-field-holder col-xs-6">
	                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "", type = "email"})
	                    </div>
	                </div>
	            </div>
	            <div class="form-group">
	                <div class="row">
	                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new {@class = "dealnet-field-caption col-xs-6"})
	                    <div class="dealnet-field-holder col-xs-6">
	                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                    </div>
	                </div>
	            </div>
	        </div>
	    </div>
	</form>

	</div>
	</div>
	<hr>
	<div class="clearfix">
		<div class="row">
			<div class="credit-check-info-hold">
				@if (Model.BasicInfo.AdditionalApplicants != null && Model.BasicInfo.AdditionalApplicants.Any())
				{
				for (var i = 0; i < Model.BasicInfo.AdditionalApplicants.Count; i++)
				{
				<div class="col-md-6">
					<div class="dealnet-credit-check-section" id="additional@(i + 1)-section">
					    <h3 class="dealnet-section-title">Additional Applicant</h3>
                        @Html.HiddenFor(m => m.BasicInfo.AdditionalApplicants[i].CustomerId)
						<div class="form-group">
							<div class="row">
								@Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new { @class = "dealnet-field-caption col-xs-6"})
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
									</div>
								</div>
							</div>
						</div>

						<div class="form-group">
							<div class="row">
								@Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new { @class = "dealnet-field-caption col-xs-6"})
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group">
										@Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
									</div>
								</div>
							</div>

						</div>
						<div class="form-group">
							<div class="row">
								@Html.Label("", "Birth of Date", new { @class = "dealnet-field-caption col-xs-6" })
								<div class="dealnet-field-holder col-xs-6">
									<div class="control-group date-group">
										@Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "dealnet-disabled-input", @readonly = "readonly", id = "", data_val_date = "Date must be in range 1900 - Today"})
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

				<div class="col-md-6">
				    <div class="dealnet-credit-check-section" id="contact-info-section">
				        @Html.HiddenFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo.FirstOrDefault(c => c.CustomerId == Model.BasicInfo.AdditionalApplicants[i].CustomerId).CustomerId)
				        <h3 class="dealnet-section-title">
				            Contact Information <a href="#" class="dealnet-section-edit-link pull-right">Edit</a>
				        </h3>
				        <div class="form-group">
				            <div class="row">
				                <label class="dealnet-field-caption col-xs-6">Home Phone</label>
				                <div class="dealnet-field-holder col-xs-6">
				                    <input type="text" class="dealnet-disabled-input" value="Home Phone" readonly="readonly">
				                </div>
				            </div>
				        </div>

				        <div class="form-group">
				            <div class="row">
				                <label class="dealnet-field-caption col-xs-6">Cell Phone</label>
				                <div class="dealnet-field-holder col-xs-6">
				                    <input type="text" class="dealnet-disabled-input" value="Cell Phone" readonly="readonly">
				                </div>
				            </div>
				        </div>

				        <div class="form-group">
				            <div class="row">
				                <label class="dealnet-field-caption col-xs-6">Business Phone</label>
				                <div class="dealnet-field-holder col-xs-6">
				                    <input type="text" class="dealnet-disabled-input" value="Business Phone" readonly="readonly">
				                </div>
				            </div>
				        </div>
				        <div class="form-group">
				            <div class="row">
				                <label class="dealnet-field-caption col-xs-6">Email Address</label>
				                <div class="dealnet-field-holder col-xs-6">
				                    <input type="email" class="dealnet-disabled-input" value="Email Address" readonly="readonly">
				                </div>
				            </div>
				        </div>
				    </div>
				</div>

                }
            }
			</div>
		</div>
	</div>

	<hr>
	<form id="new-equipment-info-form" class="clearfix">
	    @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
	    @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
	    @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
	    <h3 class="dealnet-section-title">
	        New Equipment <a href="#" onclick="copyFormData($('#new-equipment-info-section'), $('#new-equipment-info-section-modal'), false); $('#new-equipment-info-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
	    </h3>
	    <div id="new-equipment-info-section">
		    <div class="row credit-check-info-hold  equipment-info cols-no-titles">
	        @for (var i = 0; i < Model.EquipmentInfo.NewEquipment.Count; i++)
	        {
	            <div class="col-md-6">
	                <div class="dealnet-credit-check-section">
		                <div class="form-group">
			                <div class="row">
				                <div class="col-xs-12">
					                #@(i + 1)
				                </div>
			                </div>
		                </div>
	                    <div class="form-group">
	                        <div class="row">
		                        @Html.Label("", "Qty", new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Quantity, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
	                            </div>
	                        </div>
	                    </div>

	                    <div class="form-group">
	                        <div class="row">
		                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Type, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.DropDownListFor(m => m.EquipmentInfo.NewEquipment[i].Type,
                                                    ((IList<EquipmentTypeDTO>)ViewBag.EquipmentTypes).Select(x => new SelectListItem { Value = x.Description, Text = x.Description, Selected = Model?.EquipmentInfo?.NewEquipment != null && Model.EquipmentInfo.NewEquipment[i]?.Type == x.Description }),
                                                    new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
	                            </div>
	                        </div>
	                    </div>

	                    <div class="form-group">
	                        <div class="row">
	                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
                        @Html.HiddenFor(m => m.EquipmentInfo.NewEquipment[i].Cost)
                        @Html.HiddenFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost)
	                    @*<div class="form-group">
	                        <div class="row">
		                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
		                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
	                            </div>
	                        </div>
	                    </div>*@
	                    <div class="form-group">
	                        <div class="row">
		                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
	                            </div>
	                        </div>
	                    </div>
	                </div>
	            </div>
	        }
		    </div>
		    <p class="summary-tax-notification">** Before taxes. Payments are subject to change over the course of the term upon at least thirty (30) days written notice. See the attached Terms and Conditions.</p>
	    </div>
	    <div class="form-group summary-payment-info">
	        <div class="row">
		        <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
			        <div class="row">
				        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
					        MONTHLY PAYMENT
				        </div>
				        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
					        $@Html.TextBoxFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
				        </div>
				    </div>
		        </div>
		        <div class="col-md-2 col-lg-2 col-xs-12 summary-payment-info-item">
			        <div class="row">
				        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
					        SALES TAX
				        </div>
				        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
					        $@(Math.Round(Model.EquipmentInfo.TotalMonthlyPayment * Model.ProvinceTaxRate / 100, 2))
				        </div>
			        </div>
		        </div>
		        <div class="col-md-6 col-lg-7 col-xs-12 summary-payment-info-item">
			        <div class="row">
				        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
					        TOTAL MONTHLY PAYMENT (TAX INCL.)
				        </div>
			            <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                            $@(Math.Round(Model.EquipmentInfo.TotalMonthlyPayment + Model.EquipmentInfo.TotalMonthlyPayment * Model.ProvinceTaxRate / 100, 2))
			            </div>
				    </div>
		        </div>
	        </div>
	    </div>
	</form>
	<p>A one-time administration fee of $35.00 plus HST applies.</p>

	<form id="payment-info-form" class="clearfix">
	    @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
		<div class="row credit-check-info-hold">
			<div class="col-md-6">
				<div class="dealnet-credit-check-section" id="payment-info-section">
					<h3 class="dealnet-section-title">
						Payment Information <a href="#" onclick="copyFormData($('#payment-info-section'), $('#payment-info-section-modal'), false); $('#payment-info-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
					</h3>
					<div class="form-group">
						<div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption col-xs-6"})
						    <div class="dealnet-field-holder col-xs-6">
						        @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
						    </div>
						</div>
					</div>

					<div class="form-group">
						<div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new { @class = "dealnet-field-caption col-xs-6"})
							<div class="dealnet-field-holder col-xs-6">
								@Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

					<div class="form-group">
						<div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption col-xs-6"})
							<div class="dealnet-field-holder col-xs-6">
								@Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
					<div class="form-group">
						<div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption col-xs-6"})
							<div class="dealnet-field-holder col-xs-6">
								@Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
					<div class="form-group">
						<div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "dealnet-field-caption col-xs-6"})
							<div class="dealnet-field-holder col-xs-6">
								@Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>

					</div>
				    <div class="form-group">
				        <div class="row">
				            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "dealnet-field-caption col-xs-6"})
				            <div class="dealnet-field-holder col-xs-6">
				                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
				            </div>
				        </div>
				    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
	            </div>
	        </div>
	    </div>
	</form>
    @if (Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
    {
        <form id="existing-equipment-form" class="clearfix">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
            @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
            @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
            @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment)
            <div class="summary-return-equipment" id="existing-equipment-section">
                <h3 class="dealnet-section-title">
                    Return Equipment <a href="#" onclick="copyFormData($('#existing-equipment-section'), $('#existing-equipment-section-modal'), false); $('#existing-equipment-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
                </h3>
                @for (var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
                {
	            <div class="summury-return-quip-item">
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                                            new[]
                                                            {
                                                                new {Value = "true", Text = "Yes", Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                new {Value = "false", Text = "No", Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                            },
                                                            "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental), new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                <div class="dealnet-disabled-input">
                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>
		        </div>
                }
            </div>
        </form>
    }
            <div class="form-group btn-container-proceed">
                <a href="" class="print-link">
                    <svg aria-hidden="true" class="icon icon-printer"><use xlink:href="~/Content/images/sprite/sprite.svg#icon-printer"></use></svg>Print the contract
                </a>
                <button class="btn dealnet-button dealnet-success-button btn-finish" onclick="$('#send-mails-form').submit()">Finish</button>
            </div>
</div>

<div class="modal fade editor-modal" tabindex="-1" role="dialog" id="address-modal">
    <div class="row">
        <div class="col-xs-1 col-md-4 col-lg-4 col-sm-3"></div>
        <div class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="padding-left: 0">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">Address Information</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            <form id="address-section-modal">
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AddressInformation.InstallationAddress, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.InstallationAddress, new { @class = "form-control dealnet-input", id = "street" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.AddressInformation.InstallationAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.UnitNumber, new { @class = "form-control dealnet-input" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.AddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.City, new { @class = "form-control dealnet-input", id = "locality" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.AddressInformation.City, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.Province, new { @class = "form-control dealnet-input", id = "administrative_area_level_1" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.AddressInformation.Province, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.AddressInformation.PostalCode, new { @class = "form-control dealnet-input", id = "postal_code" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.AddressInformation.PostalCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div>
                            <button type="button" class="btn dealnet-button dealnet-green-button" onclick="if (saveChanges($('#address-section-modal'), $('#address-section'), '@Url.Action("UpdateBasicInfo", "NewRental")', $('#basic-info-form'))) { $('#address-modal').modal('hide'); }">Save changes</button>
                        </div>
                        <div>
                            <a href="#" data-dismiss="modal">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs1 col-md-4 col-lg-4 col-sm-3"></div>
    </div>

</div>

@if (Model.BasicInfo.MailingAddressInformation != null)
{
    <div class="modal fade editor-modal" tabindex="-1" role="dialog" id="mailing-address-modal">
        <div class="row">
            <div class="col-xs-1 col-md-4 col-lg-4 col-sm-3"></div>
            <div class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="padding-left: 0">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <div class="modal-title dealnet-large-header">Mailing Address</div>
                        </div>
                        <div class="modal-body">
                            <div class="dealnet-credit-check-section dealnet-modal-section">
                                <form id="mailing-address-section-modal">
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.Label("mailing_street", "Mailing Address", new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.InstallationAddress, new { @class = "form-control dealnet-input", id = "mailing_street" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.MailingAddressInformation.InstallationAddress, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.UnitNumber, new { @class = "form-control dealnet-input" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.MailingAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.City, new { @class = "form-control dealnet-input", id = "mailing_locality" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.MailingAddressInformation.City, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.Province, new { @class = "form-control dealnet-input", id = "mailing_administrative_area_level_1" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.MailingAddressInformation.Province, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.MailingAddressInformation.PostalCode, new { @class = "form-control dealnet-input", id = "mailing_postal_code" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.MailingAddressInformation.PostalCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </form>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div>
                                <button type="button" class="btn dealnet-button dealnet-green-button" onclick="if (saveChanges($('#mailing-address-section-modal'), $('#mailing-address-section'), '@Url.Action("UpdateBasicInfo", "NewRental")', $('#basic-info-form'))) { $('#mailing-address-modal').modal('hide'); }">Save changes</button>
                            </div>
                            <div>
                                <a href="#" data-dismiss="modal">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs1 col-md-4 col-lg-4 col-sm-3"></div>
        </div>

    </div>
}

<div class="modal fade editor-modal" tabindex="-1" role="dialog" id="contact-info-modal">
    <div class="row">
        <div class="col-xs-1 col-md-4 col-lg-4 col-sm-3"></div>
        <div class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="padding-left: 0">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">Contact Information</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            <form id="contact-info-section-modal">
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.ContractId)
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@class = "form-control dealnet-input", id = "home-phone"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@class = "form-control dealnet-input", id = "cell-phone" })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@class = "form-control dealnet-input", id = "locality"})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email"})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new {@class = "form-control dealnet-input", id = "postal_code"})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HouseSize, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div>
                            <button type="button" class="btn dealnet-button dealnet-green-button" onclick="if (saveChanges($('#contact-info-section-modal'), $('#contact-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#contact-info-form'))) { $('#contact-info-modal').modal('hide'); }">Save changes</button>
                        </div>
                        <div>
                            <a href="#" data-dismiss="modal">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs1 col-md-4 col-lg-4 col-sm-3"></div>
    </div>

</div>

<div class="modal fade editor-modal" tabindex="-1" role="dialog" id="new-equipment-info-modal">
    <div class="row">
        <div class="col-xs-1 col-md-4 col-lg-4 col-sm-3"></div>
        <div class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="padding-left: 0">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">New Equipment</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            <form id="new-equipment-info-section-modal">
                                @for (var i = 0; i < Model.EquipmentInfo.NewEquipment.Count; i++)
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.Label("", "Qty", new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Quantity, new {@class = "form-control dealnet-input", id = "street"})
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Quantity, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Type, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.DropDownListFor(m => m.EquipmentInfo.NewEquipment[i].Type,
                                                    ((IList<EquipmentTypeDTO>) ViewBag.EquipmentTypes).Select(x => new SelectListItem {Value = x.Description, Text = x.Description, Selected = Model?.EquipmentInfo?.NewEquipment != null && Model.EquipmentInfo.NewEquipment[i]?.Type == x.Description }),
                                                    new {@class = "form-control"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Description, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@class = "form-control dealnet-input", id = "locality"})
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Description, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@class = "form-control dealnet-input", id = "locality"})
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Cost, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@class = "form-control dealnet-input", id = "locality"})
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, new { @class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, new {@class = "form-control dealnet-input", id = "administrative_area_level_1"})
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </form>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div>
                            <button type="button" class="btn dealnet-button dealnet-green-button" onclick="if (saveChanges($('#new-equipment-info-section-modal'), $('#new-equipment-info-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#new-equipment-info-form'))) { $('#new-equipment-info-modal').modal('hide'); }">Save changes</button>
                        </div>
                        <div>
                            <a href="#" data-dismiss="modal">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs1 col-md-4 col-lg-4 col-sm-3"></div>
    </div>

</div>

<div class="modal fade editor-modal" tabindex="-1" role="dialog" id="payment-info-modal">
    <div class="row">
        <div class="col-xs-1 col-md-4 col-lg-4 col-sm-3"></div>
        <div class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="padding-left: 0">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">Payment Information</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            <form id="payment-info-section-modal">
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new {@class = "form-control"})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new {@class = "form-control"})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new {@class = "form-control dealnet-input", id = "locality"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new {@class = "form-control dealnet-input", id = "administrative_area_level_1"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@class = "form-control dealnet-input", id = "postal_code"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "dealnet-field-caption col-xs-6"})
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "form-control dealnet-input", id = "enbridge-gas-distribution-account"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "form-control dealnet-input", id = "meter-number" })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div>
                            <button type="button" class="btn dealnet-button dealnet-green-button" onclick="if (saveChanges($('#payment-info-section-modal'), $('#payment-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#payment-info-form'))) { $('#payment-info-modal').modal('hide'); }">Save changes</button>
                        </div>
                        <div>
                            <a href="#" data-dismiss="modal">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs1 col-md-4 col-lg-4 col-sm-3"></div>
    </div>

</div>

@if (Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
{
    <div class="modal fade editor-modal" tabindex="-1" role="dialog" id="existing-equipment-modal">
        <div class="row">
            <div class="col-xs-1 col-md-4 col-lg-4 col-sm-3"></div>
            <div class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="padding-left: 0">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <div class="modal-title dealnet-large-header">Return Equipment</div>
                        </div>
                        <div class="modal-body">
                            <div class="dealnet-credit-check-section dealnet-modal-section">
                                <form id="existing-equipment-section-modal">
                                    @for (var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                                            new[]
                                                            {
                                                                new {Value = "true", Text = "Yes", Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                new {Value = "false", Text = "No", Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                            },
                                                            "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental),
	                                                        new { @class = "form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @class = "form-control dealnet-input" })
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @class = "form-control dealnet-input" })
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @class = "form-control dealnet-input" })
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @class = "form-control dealnet-input" })
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new {@class = "form-control dealnet-input"})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new {@class = "form-control dealnet-input"})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @class = "form-control dealnet-input" })
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    }
                                </form>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div>
                                <button type="button" class="btn dealnet-button dealnet-green-button" onclick="if (saveChanges($('#existing-equipment-section-modal'), $('#existing-equipment-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#existing-equipment-form'))) { $('#existing-equipment-modal').modal('hide'); }">Save changes</button>
                            </div>
                            <div>
                                <a href="#" data-dismiss="modal">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs1 col-md-4 col-lg-4 col-sm-3"></div>
        </div>

    </div>
}

<link href="https://code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css" rel="stylesheet">
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaQqymsNuummVv7Yi9I2kgGl0lxDjZri4&libraries=places&callback=assignAutocompletes" async defer></script>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/summary-and-confirmation")
}