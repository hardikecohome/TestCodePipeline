@using System.Globalization
@using DealnetPortal.Api.Common.Helpers
@using DealnetPortal.Api.Core.Helpers
@using DealnetPortal.Api.Models.Contract
@using DealnetPortal.Web.Models.Enumeration
@model DealnetPortal.Web.Models.SummaryAndConfirmationViewModel

@{
    var yesNaming = Resources.Yes;
    var noNaming = Resources.No;
    var provinces = ViewBag.ProvinceTaxRates as IList<ProvinceTaxRateDTO>;

    Func<string, string> formatIncome = str =>
     {
         if(str.Contains('<'))
         {
             return str.Replace("<", Resources.LessThan + " $");
         }
         if(str.Contains('-'))
         {
             return "$" + str.Replace("-", " - $");
         }
         return "$" + str;
     };
}
<style>
    .pac-container {
        z-index: 100000 !important;
    }
</style>

<div class="dealnet-large-header" id="basic-info">@Resources.SummaryAndConfirmation</div>

<div id="steps-line"></div>
<div class="row" id="steps">
    <div class="col-xs-4">
        <a href="@Url.Action("BasicInfo", new {contractId = Model.BasicInfo.ContractId})" data-warning="true" id="step1" class="step-item">1</a>

    </div>
    <div class="col-xs-4">
        @if(Model.EquipmentInfo.IsApplicantsInfoEditAvailable)
        {
            <a href="@Url.Action("EquipmentInformation", new {contractId = Model.BasicInfo.ContractId})" id="step2" class="step-item">2</a>
        }
        else
        {
            <div id="step2" class="step-item">2</div>
        }
        <a href="@Url.Action("ContactAndPaymentInfo", new { contractId = Model.BasicInfo.ContractId })" id="step3" class="step-item">3</a>
    </div>
    <div class="col-xs-4">
        <div id="step4" class="step-item step-active">4</div>
    </div>
</div>

@*@if (Model.BasicInfo.ContractWasDeclined)
    {
        <!--Show/hide warning depend on status-deal-submitted-->
        <div class="well well-info position-well">
            <svg aria-hidden="true" class="icon icon-info-well"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use></svg>
            @Resources.YouCantEditBecauseSubmittedYouCanAddAdditional
        </div>
    }*@

<div class="form-container summary-info-hold">
    <div class="form-section">
        <div class="clearfix">
            <div class="row">

                @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "basic-info-form", @class = "grid-parent" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.BasicInfo.ContractId)
                    @Html.HiddenFor(m => m.BasicInfo.HomeOwner.CustomerId)
                    @Html.HiddenFor(m => m.ContactAndPaymentInfo.IsAllPaymentTypesAvailable, new { id = "payment-info-available" })
                    @Html.HiddenFor(m => m.RateCardValid)
                    @Html.HiddenFor(m => m.IsClarityDealer, new { id = "clarity-dealer" })
                    @Html.HiddenFor(m => m.IsOldClarityDeal, new { id = "old-clarity-deal" })
                    if(Model.BasicInfo.SubDealers?.Any() ?? false)
                    {
                        <div class="credit-check-info-hold">
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
                                    <div class="dealnet-section-title">@Resources.SubDealer</div>
                                    <div class="form-group">
                                        <div class="row">
                                            <label class="dealnet-field-caption col-xs-6">@Resources.DealerName</label>
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @(Model.BasicInfo.SubDealers.FirstOrDefault(x => x.Id == Model.BasicInfo.SubmittingDealerId)?.DisplayName)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="credit-check-info-hold fit-to-next-grid">
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section" id="home-owner-section">
                                <h3 class="dealnet-section-title">
                                    @Resources.BorrowerInformation
                                    @*<a href="@Url.Action("BasicInfo", new {contractId = Model.BasicInfo.ContractId})" data-warning="true" id="step1" class="step-item dealnet-section-edit-link pull-right">@Resources.Edit</a>*@
                                    <a href="@Url.Action("BasicInfo", "NewRental", new {contractId = Model.BasicInfo.ContractId})" class="dealnet-section-edit-link pull-right editToStep1" @*onclick="copyFormData($('#contact-info-section'), $('#contact-info-section-modal'), false); $('#contact-info-modal').modal();"*@>@Resources.Edit</a>
                                </h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.FirstName, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.FirstName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.LastName, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.LastName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.BirthDate, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group date-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "dealnet-disabled-input", @readonly = "readonly", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group hidden">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.IsHomeOwner, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.HiddenFor(m => m.BasicInfo.HomeOwner.IsHomeOwner)
                                                <input type="text" readonly="readonly" class="dealnet-disabled-input" value=@(Model.BasicInfo.HomeOwner.IsHomeOwner ? Resources.Yes : Resources.No )>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section" id="address-section">
                                <h3 class="dealnet-section-title">
                                    @Resources.InstallationAddressInformation
                                    @if(Model.EquipmentInfo.IsEditAvailable && !Model.BasicInfo.ContractWasDeclined)
                                    {
                                        <a href="@Url.Action("BasicInfo", "NewRental", new {contractId = Model.BasicInfo.ContractId})" class="dealnet-section-edit-link pull-right editToStep1">@Resources.Edit</a>

                                    }
                                </h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if(Model.BasicInfo.HomeOwner.PreviousAddressInformation != null)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="prev-address-section">
                                    <h3 class="dealnet-section-title">
                                        @Resources.PreviousAddressInformation
                                        @if(Model.EquipmentInfo.IsEditAvailable && !Model.BasicInfo.ContractWasDeclined)
                                        {
                                            <a href="#" onclick="copyFormData($('#prev-address-section'), $('#prev-address-section-modal'), false); $('#prev-address-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                        }
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if(Model.BasicInfo.HomeOwner.MailingAddressInformation != null)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="mailing-address-section">
                                    <h3 class="dealnet-section-title">
                                        @Resources.MailingAddress
                                        @if(Model.EquipmentInfo.IsEditAvailable && !Model.BasicInfo.ContractWasDeclined)
                                        {
                                            <a href="#" onclick="copyFormData($('#mailing-address-section'), $('#mailing-address-section-modal'), false); $('#mailing-address-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                        }
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                <div class="credit-check-info-hold fit-to-next-grid">
                    <div class="col-md-6 grid-column">
                        @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "contact-info-form", @class = "" }))
                        {

                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
                            <div class="dealnet-credit-check-section" id="contact-info-section">
                                @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                                <h3 class="dealnet-section-title">
                                    @Resources.ContactInformation <a href="#" onclick="copyFormData($('#contact-info-section'), $('#contact-info-section-modal'), false); $('#contact-info-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                </h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "", type = "email" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </div>
                @if(Model.BasicInfo.HomeOwner.EmploymentInformation != null)
                {
                    <div class="credit-check-info-hold fit-to-next-grid">
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">
                                    @Resources.BorrowerEmploymentInformation
                                    <a href="@Url.Action("BasicInfo", "NewRental", new {contractId = Model.BasicInfo.ContractId})" class="dealnet-section-edit-link pull-right editToStep1">@Resources.Edit</a>
                                </h3>
                                <div class="form-group">
                                    <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            <div class="control-group">
                                                <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus)" name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus)" value="@Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus.GetEnumDescription()" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if(Model.BasicInfo.HomeOwner.EmploymentInformation.IncomeType.HasValue)
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.IncomeType, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.IncomeType)" name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.IncomeType)" value="@Model.BasicInfo.HomeOwner.EmploymentInformation.IncomeType.GetEnumDescription()" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary))
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <input readonly="readonly" class="dealnet-disabled-input"
                                                           id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary)"
                                                           name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary)"
                                                           value="@formatIncome(Model.BasicInfo.HomeOwner.EmploymentInformation.AnnualSalary)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate))
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <input readonly="readonly" class="dealnet-disabled-input"
                                                           id="@Html.IdFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate)"
                                                           name="@Html.NameFor(m=>m.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate)"
                                                           value="@formatIncome(Model.BasicInfo.HomeOwner.EmploymentInformation.HourlyRate)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            <label class="dealnet-field-caption col-xs-6">@Resources.LengthOfEmployment</label>
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    <div class="dealnet-disabled-input">
                                                        <span>@Model.BasicInfo.HomeOwner.EmploymentInformation.YearsOfEmployment @(Model.BasicInfo.HomeOwner.EmploymentInformation.YearsOfEmployment == "1" ? Resources.Year : Resources.Years)</span>
                                                        @if(!string.IsNullOrEmpty(Model?.BasicInfo.HomeOwner?.EmploymentInformation?.MonthsOfEmployment))
                                                        {
                                                            <span>@Model.BasicInfo.HomeOwner.EmploymentInformation.MonthsOfEmployment @(Model.BasicInfo.HomeOwner.EmploymentInformation.MonthsOfEmployment == "1" ? Resources.Month : Resources.Months)</span>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
                                    <h3 class="dealnet-section-title">
                                        &nbsp;
                                        <a href="@Url.Action("BasicInfo", "NewRental", new {contractId = Model.BasicInfo.ContractId})" class="dealnet-section-edit-link pull-right editToStep1">@Resources.Edit</a>
                                    </h3>
                                    @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed)
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        <input readonly="readonly" class="dealnet-disabled-input" id="@Html.IdFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType)" name="@Html.NameFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType)" value="@Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentType.GetEnumDescription()" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.JobTitle))
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.JobTitle, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.JobTitle, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.CompanyName))
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyName, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyName, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if(!string.IsNullOrWhiteSpace(Model.BasicInfo.HomeOwner.EmploymentInformation.CompanyPhone))
                                    {
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        @if(Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.Employed || Model.BasicInfo.HomeOwner.EmploymentInformation.EmploymentStatus == EmploymentStatus.SelfEmployed)
                        {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section">
                                    <h3 class="dealnet-section-title">
                                        @Resources.CompanyAddress
                                        <a href="@Url.Action("BasicInfo", "NewRental", new {contractId = Model.BasicInfo.ContractId})" class="dealnet-section-edit-link pull-right editToStep1">@Resources.Edit</a>
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.City, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        @if(Model.ContactAndPaymentInfo.CoBorrowersContactInfo != null && Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Any())
        {
            @Html.Partial("SummaryAndConfirmation/_AdditionalApplicants", Model)
        }
    </div>
    <hr>
    <div class="form-section">

        @Html.Partial("SummaryAndConfirmation/_EquipmentInformation", Model)

        <hr>
        @using(Html.BeginForm(null, null, FormMethod.Post, new { @class = "clearfix", id = "payment-info-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section" id="payment-info-section">
                        <h3 class="dealnet-section-title">
                            @Resources.PaymentInformation <a href="#" onclick="copyFormData($('#payment-info-section'), $('#payment-info-section-modal'), false); $('#payment-type').change(); $('#payment-info-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                        </h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "payment-type-form" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group pap-payment-form">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>

                        <div class="pap-payment-form">
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="enbridge-payment-form">
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                    <div class="dealnet-field-holder col-xs-6">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if(Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
        {
            using(Html.BeginForm(null, null, FormMethod.Post, new { id = "existing-equipment-form", @class = "clearfix" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
                @Html.HiddenFor(m => m.EquipmentInfo.AgreementType)
                @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
                @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
                @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
                @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @class = "total-monthly-payment" })
                @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
                @Html.HiddenFor(m => m.EquipmentInfo.LoanDeferralType)
                @Html.HiddenFor(m => m.EquipmentInfo.RentalDeferralType)
                @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
                @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
                @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)
                <div class="" id="existing-equipment-section">
                    <div class="row credit-check-info-hold">
                        <div class="col-md-6 grid-column">
                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">
                                    @Resources.ExistingEquipmentInformation <a href="#" onclick="copyFormData($('#existing-equipment-section'), $('#existing-equipment-section-modal'), false); $('#existing-equipment-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                </h3>
                                @for(var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
                                {
                                    <div class="summury-return-equip-item">
                                        @Html.HiddenFor(m => m.EquipmentInfo.ExistingEquipment[i].Id)
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                                                                  new[]
                                                                                  {
                                                                                                                                                                                                                        new {Value = "true", Text = yesNaming, Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                                                                                                                                                                        new {Value = "false", Text = noNaming, Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                                  },
                                                                                  "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental), new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="dealnet-field-caption col-xs-6">
                                                    @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes)
                                                </div>
                                                <div class="dealnet-field-holder col-xs-6">
                                                    @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @readonly = "readonly", @class = "form-control dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        <hr>
        <div class="clearfix">
            <div class="row">
                <div class="credit-check-info-hold">
                    <div class="col-md-6 grid-column" id="edit-add-contract-section">
                        @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "contract-notes-form", @class = "credit-check-info-hold" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
                            @Html.HiddenFor(m => m.EquipmentInfo.AgreementType)
                            @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
                            @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @class = "total-monthly-payment" })
                            @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.LoanDeferralType)
                            @Html.HiddenFor(m => m.EquipmentInfo.RentalDeferralType)
                            @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
                            @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
                            @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)

                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">
                                    @Resources.AdditionalContractInformation
                                </h3>
                                @if(Model.AdditionalInfo.CustomerComments != null && Model.AdditionalInfo.CustomerComments.Any())
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.AdditionalInfo.CustomerComments, new { @class = "text-semibold text-md-sm col-xs-12" })
                                            <div class="dealnet-field-holder col-xs-12">
                                                <div class="control-group">
                                                    <div class="text-left">
                                                        @foreach(var comment in Model.AdditionalInfo.CustomerComments)
                                                        {
                                                            @comment
                                                            <br />
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    <div class="row">
                                        <div class="editable-label">
                                            @Html.LabelFor(m => m.EquipmentInfo.Notes, new { @class = "text-semibold text-md-sm col-xs-9" })
                                            <div class="col-xs-3">
                                                <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#edit-add-contract-section'), $('#edit-add-contract-section-modal'), false); $('#edit-add-contract-modal').modal();">@Resources.Edit</a>
                                            </div>
                                        </div>
                                        <div class="dealnet-field-holder col-xs-12">
                                            <div class="control-group">
                                                @Html.TextAreaFor(m => m.EquipmentInfo.Notes, new { @class = "dealnet-disabled-input dealnet-disabled-textarea", @cols = "30", @rows = "2", id = "contract-notes" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                <div class="form-group btn-container-proceed">
                    <a class="btn dealnet-button dealnet-success-button btn-finish" href="@Url.Action("SubmitDeal", "NewRental", new {contractId = Model.BasicInfo.ContractId})" id="submitBtn">
                        @Resources.SubmitDeal
                    </a>
                </div>
            </div>
            <div class="col-md-9">
                <div class="form-group hidden" id="expired-rate-card-warning">
                    <div class="control-group">
                        <div class="well danger-well">
                            <svg aria-hidden="true" class="icon icon-error">
                                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use>
                            </svg>
                            @Resources.FinProgramUnavailable
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="address-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.InstallationAddressInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "address-section-modal" }))
                    {
                        <div class="row">
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "form-control dealnet-input", id = "street", placeholder = Resources.StreetPlaceholder })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", placeholder = "12345" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "form-control dealnet-input", id = "locality", placeholder = Resources.City })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.DropDownListFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province,
                                                                        (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                                        new { @class = "form-control dealnet-input", id = "administrative_area_level_1" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "postal_code", placeholder = "12345" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation, "", new { @class = "text-danger", id = "address-info-validation-message" })
                    }
                </div>
                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#address-section-modal'), $('#address-section'), '@Url.Action("UpdateApplicants", "NewRental")', $('#basic-info-form'), applyProvinceChange @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication) { <text>, checkProvince</text> })) { $('#address-modal').modal('hide'); }">@Resources.SaveChanges</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                </div>
            </div>
        </div>
    </div>

</div>

@if(Model.BasicInfo.HomeOwner.MailingAddressInformation != null)
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="mailing-address-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.MailingAddress</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "mailing-address-section-modal" }))
                        {
                            <div class="row">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @class = "form-control dealnet-input", id = "mailing_street", placeholder = Resources.StreetPlaceholder })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", placeholder = "12345" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @class = "form-control dealnet-input", id = "mailing_locality", placeholder = Resources.City })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.DropDownListFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province,
                                                                            (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                                            new { @class = "form-control dealnet-input", id = "mailing_administrative_area_level_1" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "mailing_postal_code", placeholder = "12345" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#mailing-address-section-modal'), $('#mailing-address-section'), '@Url.Action("UpdateApplicants", "NewRental")', $('#basic-info-form'))) { $('#mailing-address-modal').modal('hide'); }">@Resources.SaveChanges</button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="contact-info-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.ContactInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "contact-info-section-modal" }))
                    {
                        <div class="mandatory-phones">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "form-control dealnet-input home-phone", type = "text", placeholder = Resources.HomePhone })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "form-control dealnet-input cell-phone", type = "text", placeholder = Resources.CellPhone })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "form-control dealnet-input", type = "text", id = "locality", placeholder = Resources.BusinessPhone })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new { @class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email", placeholder = Resources.EmailAddress })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "form-control dealnet-input", type = "text", placeholder = Resources.HouseSizeSquareFeet })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HouseSize, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#contact-info-section-modal'), $('#contact-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#contact-info-form'))) { $('#contact-info-modal').modal('hide'); }">@Resources.SaveChanges</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="payment-info-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.PaymentInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "payment-info-section-modal" }))
                    {
                        <div class="row">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new { @class = "form-control", id = "payment-type" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6 pap-payment">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="enbridge-payment">
                                <div class="col-sm-12 col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new { @class = "form-control dealnet-input", type = "text", id = "enbridge-gas-distribution-account", placeholder = Resources.TwelveDigitsNumber })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="enbridge-payment row">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new { @class = "form-control dealnet-input", type = "text", id = "meter-number", placeholder = Resources.SevenDigitsNumber })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row pap-payment">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new
                                            {
                                                @class = "form-control dealnet-input",
                                                type = "text",
                                                id = "account-number",
                                                placeholder = Resources.AccountNumber
                                            })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "form-control dealnet-input", type = "text", id = "transit-number", placeholder = Resources.TransitNumber })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row pap-payment">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "form-control dealnet-input", id = "bank-number", type = "text", placeholder = Resources.BlankNumber })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#payment-info-section-modal'), $('#payment-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#payment-info-form'))) { $('#payment-info-modal').modal('hide'); $('#payment-type-form').change(); }">@Resources.SaveChanges</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@if(Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="existing-equipment-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.ExistingEquipmentInformation</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "existing-equipment-section-modal" }))
                        {
                            for(var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
                            {
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                                                                new[]
                                                                                {
                                                                                                                                                                                            new {Value = "true", Text = yesNaming, Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                                                                                                                                            new {Value = "false", Text = noNaming, Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                                },
                                                                                "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental),
                                                                                new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @class = "form-control dealnet-input", placeholder = Resources.RentalCompany })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @class = "form-control dealnet-input", type = "text", placeholder = Resources.Years })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @class = "form-control dealnet-input", placeholder = Resources.Make })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new { @class = "form-control dealnet-input", placeholder = Resources.Model })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new { @class = "form-control dealnet-input", placeholder = Resources.SerialNumber })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @class = "form-control dealnet-input", placeholder = Resources.GeneralCondition })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @class = "form-control dealnet-input", placeholder = Resources.Notes })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                if(i < Model.EquipmentInfo.ExistingEquipment.Count - 1)
                                {
                                    <hr>
                                }

                            }
                        }
                    </div>

                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#existing-equipment-section-modal'), $('#existing-equipment-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#existing-equipment-form'))) { $('#existing-equipment-modal').modal('hide'); }">@Resources.SaveChanges</button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@if(Model.ContactAndPaymentInfo.CoBorrowersContactInfo != null && Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Any())
{
    for(var i = 0; i < Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
    {
        <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="contact-info-coborrower@(i + 1)-modal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.ContactInformation</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "contact-info-section" + (i + 1) + "-coborrower-modal" }))
                            {

                                <div class="mandatory-phones">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.HiddenFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CustomerId)
                                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new { @class = "dealnet-field-caption col-xs-12" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new { @class = "form-control dealnet-input home-phone", placeholder = Resources.HomePhone })
                                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new { @class = "dealnet-field-caption col-xs-12" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new { @class = "form-control dealnet-input cell-phone", placeholder = Resources.CellPhone })
                                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new { @class = "dealnet-field-caption col-xs-12" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new { @class = "form-control dealnet-input", id = "locality", placeholder = Resources.BusinessPhone })
                                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <div class="row">
                                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new { @class = "dealnet-field-caption col-xs-12" })
                                                    <div class="dealnet-field-holder col-xs-6">
                                                        <div class="control-group">
                                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new { @class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email", placeholder = Resources.EmailAddress })
                                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="btn-container">
                            <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#contact-info-section@(i + 1)-coborrower-modal'), $('#contact-info-section@(i + 1)-coborrower'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#contact-info-coborrowers-form-@(i + 1)'))) { $('#contact-info-coborrower@(i + 1)-modal').modal('hide'); }">@Resources.SaveChanges</button>
                            <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        if(Model.BasicInfo.AdditionalApplicants[i].AddressInformation != null)
        {
            <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="additional-mailing-address-modal-@(i + 1)">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.AdditionalApplicantAddressInfo</div>
                        </div>
                        <div class="modal-body">
                            <div class="dealnet-credit-check-section dealnet-modal-section">
                                @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "additional-mailing-address-section-modal-" + (i + 1) }))
                                {
                                    <div class="row">
                                        <div class="col-md-9">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Street, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Street, new { @class = "form-control dealnet-input", id = "additional-street-" + (i + 1), placeholder = Resources.StreetPlaceholder })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Street, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.UnitNumber, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.UnitNumber, new { @class = "form-control dealnet-input", id = "additional-unit_number-" + (i + 1), placeholder = "12345" })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.City, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.City, new { @class = "form-control dealnet-input", id = "additional-locality-" + (i + 1), placeholder = Resources.City })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.City, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Province, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.DropDownListFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Province,
                                                                                    (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province, Selected = Model.BasicInfo.AdditionalApplicants[i]?.AddressInformation?.Province == x.Province }), "",
                                                                                    new { @class = "form-control dealnet-input", id = "additional-administrative_area_level_1-" + (i + 1) })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.Province, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.PostalCode, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "additional-postal_code-" + (i + 1), placeholder = "12345" })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.PostalCode, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="btn-container">
                                <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#additional-mailing-address-section-modal-@(i + 1)'), $('#additional-mailing-address-section-@(i + 1)'), '@Url.Action("UpdateApplicants", "NewRental")', $('#additional-basic-info-form-@(i + 1)'))) { $('#additional-mailing-address-modal-@(i + 1)').modal('hide'); }">@Resources.SaveChanges</button>
                                <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        if(Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation != null)
        {
            <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="additional-prev-address-modal-@(i + 1)">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.PreviousAddressInformation</div>
                        </div>
                        <div class="modal-body">
                            <div class="dealnet-credit-check-section dealnet-modal-section">
                                @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "additional-prev-address-section-modal-" + (i + 1) }))
                                {
                                    <div class="row">
                                        <div class="col-md-9">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @class = "form-control dealnet-input", id = "additional-previous-street-" + (i + 1), placeholder = Resources.StreetPlaceholder })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @class = "form-control dealnet-input", id = "additional-previous-unit_number-" + (i + 1), type = "text", placeholder = "12345" })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new { @class = "form-control dealnet-input", id = "additional-previous-locality-" + (i + 1), placeholder = Resources.City })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.DropDownListFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province,
                                                                                    (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                                                    new { @class = "form-control dealnet-input", id = "additional-previous-administrative_area_level_1-" + (i + 1) })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption" })
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "additional-previous-postal_code-" + (i + 1), placeholder = "12345" })
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="btn-container">
                                <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#additional-prev-address-section-modal-@(i + 1)'), $('#additional-prev-address-section-@(i + 1)'), '@Url.Action("UpdateApplicants", "NewRental")', $('#additional-basic-info-form-@(i + 1)'))) { $('#additional-prev-address-modal-@(i + 1)').modal('hide'); }">@Resources.SaveChanges</button>
                                <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
    }
}
<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="edit-add-contract-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.AdditionalContractInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "edit-add-contract-section-modal" }))
                    {
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.Notes, new { @class = "col-xs-12" })
                                <div class="dealnet-field-holder col-xs-12">
                                    <div class="control-group">
                                        @Html.TextAreaFor(m => m.EquipmentInfo.Notes, new { @class = "form-control", id = "contract-notes", placeholder = Resources.ContractNotes })
                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.Notes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#edit-add-contract-section-modal'), $('#edit-add-contract-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#contract-notes-form'))) { $('#edit-add-contract-modal').modal('hide'); }">@Resources.SaveChanges</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
@if(Model.BasicInfo.HomeOwner.PreviousAddressInformation != null)
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="prev-address-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.PreviousAddressInformation</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using(Html.BeginForm(null, null, FormMethod.Post, new { id = "prev-address-section-modal" }))
                        {
                            <div class="row">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new { @class = "form-control dealnet-input", id = "previous_street", placeholder = Resources.StreetPlaceholder })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", placeholder = "12345" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new { @class = "form-control dealnet-input", id = "previous_locality", placeholder = Resources.City })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.DropDownListFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province,
                                                                            (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                                            new { @class = "form-control dealnet-input", id = "previous_administrative_area_level_1" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "previous_postal_code", placeholder = "12345" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#prev-address-section-modal'), $('#prev-address-section'), '@Url.Action("UpdateApplicants", "NewRental")', $('#basic-info-form'))) { $('#prev-address-modal').modal('hide'); }">@Resources.SaveChanges</button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@section Translations
{
    translations['ErrorWhileUpdatingData'] = "@Resources.ErrorWhileUpdatingData";
    translations['Tax'] = "@Resources.Tax";
    translations['TotalMonthlyPaymentMustBeGreaterZero'] = "@Html.Raw(Resources.TotalMonthlyPaymentMustBeGreaterZero)";
    translations['AfterProvinceChangeTotalMustBeGreater'] = "@Resources.AfterProvinceChangeTotalMustBeGreater";
    @*translations['TotalCostGreaterThanAmount'] = "@Resources.TotalCostGreaterThanAmount";*@
}

@section scripts
{
    <script type="text/javascript">
        var taxRate = @(Model.ProvinceTaxRate?.Rate.ToString(CultureInfo.InvariantCulture) ?? "0");
        var agreementType = @((int)Model.EquipmentInfo.AgreementType);
        @{
            var provinceTaxRates = ViewBag.ProvinceTaxRates as IList<ProvinceTaxRateDTO>;
            if (provinceTaxRates != null)
            {
                @: var provinceTaxRates = [];
                        foreach (var ptr in provinceTaxRates)
                {
                    @: provinceTaxRates["@ptr.Province"] = {rate:@ptr.Rate.ToString(CultureInfo.InvariantCulture), description:"@ptr.Description"};
                        }
            }
        }
        @*var creditAmount = @Model.EquipmentInfo.CreditAmount;*@
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/localization")
    @Scripts.Render("~/bundles/summary-and-confirmation")
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@(System.Configuration.ConfigurationManager.AppSettings["PlacesAutocompleteKey"])&language=@(CultureHelper.CurrentCultureType == CultureType.English ? "en" : "fr")&region=CA&libraries=places&callback=assignAutocompletes" async defer></script>

    <script type="text/javascript">
        $(document).ready(function() {
            @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
            {
                <text>
            $(".equipment-cost").each(function() {
                $(this).rules("add", "required");
            });
            </text>
            }
            else
            {
                <text>
            $(".monthly-cost").each(function() {
                $(this).rules("add", "required");
            });
            </text>
            }
        });
    </script>

    @if(Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
    {
        <script>
            var recalculateTotalCash = true;
            var taxRate = @(Model.ProvinceTaxRate?.Rate.ToString(CultureInfo.InvariantCulture) ?? "0");
        </script>
    }
    else
    {
        <script>
            var recalculateTotalCash = false;
        </script>
    }
}
