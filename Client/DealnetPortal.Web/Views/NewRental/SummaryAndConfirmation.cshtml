@using System.Globalization
@using DealnetPortal.Api.Models.Contract
@using DealnetPortal.Web.Models.Enumeration
@model DealnetPortal.Web.Models.SummaryAndConfirmationViewModel

@{
    var yesNaming = Resources.Yes;
    var noNaming = Resources.No;
    var provinces = ViewBag.ProvinceTaxRates as IList<ProvinceTaxRateDTO>;
}
<style>
  .pac-container {
    z-index: 100000 !important;
  }
</style>

<div id="label-steps">
    <div class="dealnet-action-link">@Resources.NewApplication</div> >
</div>

<div class="dealnet-large-header" id="basic-info">@Resources.SummaryAndConfirmation</div>

<div id="steps-line"></div>
<div class="row" id="steps">
    <div class="col-xs-4">
        @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable)
        {
            <a href="@Url.Action("BasicInfo", new {contractId = Model.BasicInfo.ContractId})" data-warning="true" id="step1" class="step-item">1</a>
        }
        else
        {
            <div id="step1" class="step-item">1</div>
        }
    </div>
    <div class="col-xs-4">
        @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable)
        {
            <a href="@Url.Action("EquipmentInformation", new {contractId = Model.BasicInfo.ContractId})"  id="step2" class="step-item">2</a>
        }
        else
        {
            <div id="step2" class="step-item">2</div>
        }
      <a href="@Url.Action("ContactAndPaymentInfo", new { contractId = Model.BasicInfo.ContractId })" id="step3" class="step-item">3</a>
    </div>
    <div class="col-xs-4">
        <div id="step4" class="step-item step-active">4</div>
    </div>
</div>

@if (Model.BasicInfo.ContractWasDeclined)
{
    <!--Show/hide warning depend on status-deal-submitted-->
    <div class="well well-info position-well">
        <svg aria-hidden="true" class="icon icon-info-well"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use></svg>
        @Resources.YouCantEditBecauseSubmittedYouCanAddAdditional
    </div>
}

<div class="form-container summary-info-hold">
<div class="form-section">
<div class="clearfix">
<div class="row">

@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "basic-info-form", @class = "grid-parent"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.BasicInfo.ContractId)
    @Html.HiddenFor(m => m.BasicInfo.HomeOwner.CustomerId)
    @Html.HiddenFor(m => m.BasicInfo.SubmittingDealerId)
    if (Model.BasicInfo.SubDealers?.Any() ?? false)
    {
        <div class="credit-check-info-hold">
            <div class="col-md-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <div class="dealnet-section-title">@Resources.SubDealer</div>
                    <div class="form-group">
                        <div class="row">
                            <label for="" class="dealnet-field-caption col-xs-6">@Resources.DealerName</label>
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @(Model.BasicInfo.SubDealers.FirstOrDefault(x => x.Id == Model.BasicInfo.SubmittingDealerId)?.DisplayName)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="credit-check-info-hold fit-to-next-grid">
    <div class="col-md-6 grid-column">
        <div class="dealnet-credit-check-section" id="home-owner-section">
            <h3 class="dealnet-section-title">@Resources.BorrowerInformation</h3>
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.FirstName, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.FirstName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>

            </div>
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.LastName, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.LastName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.BirthDate, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group date-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "dealnet-disabled-input", @readonly = "readonly", data_val_date = "", id = ""})
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.IsHomeOwner, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.HiddenFor(m => m.BasicInfo.HomeOwner.IsHomeOwner)
                            <input type="text" readonly="readonly" class="dealnet-disabled-input" value=@(Model.BasicInfo.HomeOwner.IsHomeOwner ? Resources.Yes : Resources.No )>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 grid-column">
        <div class="dealnet-credit-check-section" id="address-section">
            <h3 class="dealnet-section-title">
                @Resources.InstallationAddressInformation
                @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable && !Model.BasicInfo.ContractWasDeclined)
                {
                    <a href="#" onclick="copyFormData($('#address-section'), $('#address-section-modal'), false); $('#address-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                }
            </h3>
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new {@class = "dealnet-field-caption col-xs-6"})
                    <div class="dealnet-field-holder col-xs-6">
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = ""})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (Model.BasicInfo.HomeOwner.PreviousAddressInformation != null)
    {
        <div class="col-md-6 grid-column">
            <div class="dealnet-credit-check-section" id="prev-address-section">
                <h3 class="dealnet-section-title">@Resources.PreviousAddressInformation
                    @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable && !Model.BasicInfo.ContractWasDeclined)
                    {
                        <a href="#" onclick="copyFormData($('#prev-address-section'), $('#prev-address-section-modal'), false); $('#prev-address-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                    }
                </h3>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.BasicInfo.HomeOwner.MailingAddressInformation != null)
    {
        <div class="col-md-6 grid-column">
            <div class="dealnet-credit-check-section" id="mailing-address-section">
                <h3 class="dealnet-section-title">
                    @Resources.MailingAddress
                    @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable && !Model.BasicInfo.ContractWasDeclined)
                    {
                        <a href="#" onclick="copyFormData($('#mailing-address-section'), $('#mailing-address-section-modal'), false); $('#mailing-address-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                    }
                </h3>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    </div>
}
<div class="credit-check-info-hold">
    <div class="col-md-6 grid-column">
        @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "contact-info-form", @class = ""}))
        {

            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
            <div class="dealnet-credit-check-section" id="contact-info-section">
                @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                <h3 class="dealnet-section-title">
                    @Resources.ContactInformation <a href="#" onclick="copyFormData($('#contact-info-section'), $('#contact-info-section-modal'), false); $('#contact-info-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                </h3>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "", type = "email"})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>
</div>
</div>

@if (Model.ContactAndPaymentInfo.CoBorrowersContactInfo != null && Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Any())
{

    <div class="clearfix">
        <div class="row">
                @for (var i = 0; i < Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
                {
                    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "additional-basic-info-form-" + (i + 1), @class = "grid-parent" }))
                    {
                        <hr style="clear: both">
                        <input type="hidden" name="BasicInfo.AdditionalApplicants.Index" value="@i" />
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.BasicInfo.ContractId)
                        @Html.HiddenFor(m => m.BasicInfo.AdditionalApplicants[i].CustomerId)
                        @Html.HiddenFor(m => m.BasicInfo.SubmittingDealerId)
                        <div class="credit-check-info-hold fit-to-next-grid">
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="additional@(i + 1)-section">
                                <h3 class="dealnet-section-title">@Resources.AdditionalApplicant</h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new {@class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new {@class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].BirthDate, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group date-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "dealnet-disabled-input", @readonly = "readonly", id = "", data_val_date = ""})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].IsHomeOwner, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.HiddenFor(m => m.BasicInfo.AdditionalApplicants[i].IsHomeOwner)
                                                    <input type="text" readonly="readonly" class="dealnet-disabled-input" value=@(Model.BasicInfo.AdditionalApplicants[i].IsHomeOwner ? Resources.Yes : Resources.No )>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation != null)
                            {
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="additional-prev-address-section-@(i+1)">
                                    <h3 class="dealnet-section-title">@Resources.PreviousAddressInformation
                                    @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable && !(Model.BasicInfo.ContractWasDeclined && (Model.BasicInfo.AdditionalApplicants[i]?.IsInitialCustomer ?? false)))
                                    {
                                        <a href="#" onclick="copyFormData($('#additional-prev-address-section-@(i + 1)'), $('#additional-prev-address-section-modal-@(i + 1)'), false); $('#additional-prev-address-modal-@(i + 1)').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                    }
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            }
                            @if (Model.BasicInfo.AdditionalApplicants[i].MailingAddressInformation != null)
                            {
                                <div class="col-md-6 grid-column">
                                    <div class="dealnet-credit-check-section" id="additional-mailing-address-section-@(i + 1)">
                                        <h3 class="dealnet-section-title">
                                        @Resources.MailingAddress
                                            @if (Model.EquipmentInfo.IsApplicantsInfoEditAvailable && !(Model.BasicInfo.ContractWasDeclined && (Model.BasicInfo.AdditionalApplicants[i]?.IsInitialCustomer ?? false)))
                                            {
                                            <a href="#" onclick="copyFormData($('#additional-mailing-address-section-@(i + 1)'), $('#additional-mailing-address-section-modal-@(i + 1)'), false); $('#additional-mailing-address-modal-@(i + 1)').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                            }
                                        </h3>
                                        <div class="form-group">
                                            <div class="row">
                                        @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = ""})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }

                    <div class="credit-check-info-hold">
                        <div class="col-md-6 grid-column">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "contact-info-coborrowers-form-" + (i + 1), @class = "" }))
                            {
                            <input type="hidden" name="ContactAndPaymentInfo.CoBorrowersContactInfo.Index" value="@i" />
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)

                            <div class="dealnet-credit-check-section" id="contact-info-section@(i + 1)-coborrower">
                                @Html.HiddenFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CustomerId)
                                <h3 class="dealnet-section-title">
                                @Resources.ContactInformation <a href="#" onclick="copyFormData($('#contact-info-section@(i + 1)-coborrower'), $('#contact-info-section@(i + 1)-coborrower-modal'), false); $('#contact-info-coborrower@(i + 1)-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                                </h3>
                                <div class="form-group">
                                    <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone,
                                            new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone,
                                            new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone,
                                            new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new { @class = "dealnet-field-caption col-xs-6" })
                                        <div class="dealnet-field-holder col-xs-6">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress,
                                            new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            }
                        </div>
                    </div>
            }
        </div>
    </div>
}
	</div>
	<hr>
	<div class="form-section">

@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "new-equipment-info-form", @class = "clearfix"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
    @Html.HiddenFor(m => m.EquipmentInfo.AgreementType, new { id = "agreement-type"})
    @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
    @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm, new { id = "requested-term" })
    @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm, new { id = "loan-term" })
    @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm, new { id = "amortization-term" })
    @Html.HiddenFor(m => m.EquipmentInfo.LoanDeferralType)
    @Html.HiddenFor(m => m.EquipmentInfo.RentalDeferralType)
    @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate, new { id = "customer-rate" })
    @Html.HiddenFor(m => m.EquipmentInfo.AdminFee, new { id= "admin-fee" })
    @Html.HiddenFor(m => m.EquipmentInfo.DownPayment, new { id = "down-payment" })
    @Html.HiddenFor(m => m.EquipmentInfo.CreditAmount)

    <div class="row credit-check-info-hold">
        <div class="col-md-6 grid-column">
            <div class="dealnet-credit-check-section">

                <h3 class="dealnet-section-title">
                    @Resources.NewEquipment <a href="#" onclick="copyFormData($('#new-equipment-info-section'), $('#new-equipment-info-section-modal'), false); $('#new-equipment-info-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                </h3>

            </div>
        </div>
    </div>
    <div id="new-equipment-info-section">
        <div class="row credit-check-info-hold  equipment-info cols-no-titles no-top-margin">
            @for (var i = 0; i < Model.EquipmentInfo.NewEquipment.Count; i++)
            {
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        @Html.HiddenFor(m => m.EquipmentInfo.NewEquipment[i].Id)
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-12">
                                    #@(i + 1)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Type, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
                                <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                    @Html.DropDownListFor(m => m.EquipmentInfo.NewEquipment[i].Type,
                                        ((IList<EquipmentTypeDTO>) ViewBag.EquipmentTypes).Select(x => new SelectListItem {Value = x.Type, Text = x.Description, Selected = Model?.EquipmentInfo?.NewEquipment != null && Model.EquipmentInfo.NewEquipment[i]?.Type == x.Type}),
                                        new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
                                <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                    @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                </div>
                            </div>
                        </div>
                        @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
                                    <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                       @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@readonly = "readonly", @class = "dealnet-disabled-input has-cost-sign", id = ""})
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
                                    <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                        @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="row credit-check-info-hold equipment-info">
            <div class="col-md-6 grid-column">
                <div class="dealnet-credit-check-section">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.EquipmentInfo.EstimatedInstallationDate, new { @class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5" })
                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                @Html.TextBoxFor(m => m.EquipmentInfo.EstimatedInstallationDate, @"{0:MM'/'dd'/'yyyy}", new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <p class="summary-tax-notification">@Resources.BeforeTaxesPaymentsAreSubject</p>
    </div>
    <div class="form-group summary-payment-info">
        @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
        {
            <div class="row credit-check-info-hold no-top-margin">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">@Resources.CashPriceOfEquipment</div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="equipment-cash-price">-</span></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9"><span id="tax-label">@(Model.ProvinceTaxRate?.Description ?? @Resources.Tax)</span></div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="hst">-</span></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">@Resources.TotalCashPrice</div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="total-cash-price">-</span></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">@Resources.TotalAmountFinanced</div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">$ <span id="total-amount-financed">-</span></div>
                        </div>

                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">
                                @Resources.TotalMonthlyPayment
                            </div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">
                                $ <span id="loan-total-monthly-payment">-</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">
                                @Resources.TotalAllMonthlyPayments
                            </div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">
                                $ <span id="loan-total-all-monthly-payments">-</span>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">
                                @Resources.BalanceOwingEndOfPayments
                            </div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">
                                $ <span id="residual-balance">-</span>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">
                                @Resources.TotalObligation
                            </div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">
                                $ <span id="total-obligation">-</span>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-xs-8 col-sm-9">
                                @Resources.TotalCostOfBorrowing
                            </div>
                            <div class="col-xs-4 col-sm-3 text-right text-semibold">
                                $ <span id="total-borrowing-cost">-</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
                    <div class="row">
                        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
                            @Resources.MonthlyPayment
                        </div>
                        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                            <div class="inline-children">
                                <span>$</span>
                                @Html.TextBoxFor(m => m.EquipmentInfo.TotalMonthlyPayment, @"{0:0.00}", new {@readonly = "readonly", @class = "dealnet-disabled-input total-monthly-payment"})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-lg-2 col-xs-12 summary-payment-info-item">
                    <div class="row">
                        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
                            <span id="tax-label">@(Model.ProvinceTaxRate?.Description ?? @Resources.Tax)</span>
                        </div>
                        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                            $<span id="salex-tax">@($"{((Model.EquipmentInfo.TotalMonthlyPayment ?? 0) * (Model.ProvinceTaxRate?.Rate ?? 0) / 100):0.00}")</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-7 col-xs-12 summary-payment-info-item">
                    <div class="row">
                        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
                            @Resources.TotalMonthlyPaymentWithTaxes
                        </div>
                        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
                            $<span id="total-monthly-payment-wtaxes">@($"{((Model.EquipmentInfo.TotalMonthlyPayment ?? 0) + (Model.EquipmentInfo.TotalMonthlyPayment ?? 0) * (Model.ProvinceTaxRate?.Rate ?? 0) / 100):0.00}")</span>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
<hr>
@using (Html.BeginForm(null, null, FormMethod.Post, new {@class = "clearfix", id = "payment-info-form"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
    <div class="row credit-check-info-hold">
        <div class="col-md-6 grid-column">
            <div class="dealnet-credit-check-section" id="payment-info-section">
                <h3 class="dealnet-section-title">
                    @Resources.PaymentInformation <a href="#" onclick="copyFormData($('#payment-info-section'), $('#payment-info-section-modal'), false); $('#payment-type').change(); $('#payment-info-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                </h3>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "payment-type-form"})
                        </div>
                    </div>
                </div>

                <div class="form-group pap-payment-form">
                    <div class="row">
                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new {@class = "dealnet-field-caption col-xs-6"})
                        <div class="dealnet-field-holder col-xs-6">
                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                        </div>
                    </div>
                </div>

                <div class="pap-payment-form">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new {@class = "dealnet-field-caption col-xs-6"})
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new {@class = "dealnet-field-caption col-xs-6"})
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@class = "dealnet-field-caption col-xs-6"})
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>

                <div class="enbridge-payment-form">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "dealnet-field-caption col-xs-6"})
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@class = "dealnet-field-caption col-xs-6"})
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@if (Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
{
    using (Html.BeginForm(null, null, FormMethod.Post, new {id = "existing-equipment-form", @class = "clearfix"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
        @Html.HiddenFor(m => m.EquipmentInfo.AgreementType)
        @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
        @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
        @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
        @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @class = "total-monthly-payment" })
        @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
        @Html.HiddenFor(m => m.EquipmentInfo.LoanDeferralType)
        @Html.HiddenFor(m => m.EquipmentInfo.RentalDeferralType)
        @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
        @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
        @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)
        <div class="summary-return-equipment" id="existing-equipment-section">
            <div class="row credit-check-info-hold">
                <div class="col-md-6 grid-column">
                    <div class="dealnet-credit-check-section">

                        <h3 class="dealnet-section-title">
                            @Resources.ExistingEquipmentInformation <a href="#" onclick="copyFormData($('#existing-equipment-section'), $('#existing-equipment-section-modal'), false); $('#existing-equipment-modal').modal();" class="dealnet-section-edit-link pull-right">@Resources.Edit</a>
                        </h3>

                    </div>
                </div>
            </div>
            @for (var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
            {
                <div class="summury-return-equip-item">
                    @Html.HiddenFor(m => m.EquipmentInfo.ExistingEquipment[i].Id)
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                    new[]
                                    {
                                        new {Value = "true", Text = yesNaming, Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                        new {Value = "false", Text = noNaming, Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                    },
                                    "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental), new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes)
                            </div>
                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
                                @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new {@readonly = "readonly", @class = "form-control dealnet-disabled-input", id = ""})
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
}
        <hr>
        <div class="clearfix">
            <div class="row">
                <div class="credit-check-info-hold">
                    <div class="col-md-6 grid-column" id="edit-add-contract-section">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "contract-notes-form", @class = "credit-check-info-hold" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
                            @Html.HiddenFor(m => m.EquipmentInfo.AgreementType)
                            @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
                            @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @class = "total-monthly-payment" })
                            @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.LoanDeferralType)
                            @Html.HiddenFor(m => m.EquipmentInfo.RentalDeferralType)
                            @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
                            @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
                            @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)

                            <div class="dealnet-credit-check-section">
                              <h3 class="dealnet-section-title">
                                @Resources.AdditionalContractInformation
                              </h3>
                              @if (Model.CustomerComment != null)
                              {
                                <div class="form-group">
                                  <div class="row">
                                    @Html.LabelFor(m => m.CustomerComment, new { @class = "dealnet-field-caption col-xs-12" })
                                    <div class="dealnet-field-holder col-xs-12">
                                      <div class="control-group">
                                        @Html.TextBoxFor(m => m.CustomerComment, new { @class = "dealnet-disabled-input dealnet-disabled-textarea", @cols = "30", @rows = "2", })
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              }
                                <div class="form-group">
                                  <div class="row">
                                    <div class="editable-label">
                                      @Html.LabelFor(m => m.EquipmentInfo.Notes, new {@class = "dealnet-field-caption col-xs-9"})
                                        <div class="col-xs-3">
                                            <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#edit-add-contract-section'), $('#edit-add-contract-section-modal'), false);$('#edit-add-contract-modal').modal()">@Resources.Edit</a>
                                        </div>
                                    </div>
                                    <div class="dealnet-field-holder col-xs-12">
                                      <div class="control-group">
                                        @Html.TextAreaFor(m => m.EquipmentInfo.Notes, new {@class = "dealnet-disabled-input dealnet-disabled-textarea", @cols = "30", @rows = "2", id = "contract-notes"})
                                      </div>
                                    </div>
                                  </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

	<div class="form-group btn-container-proceed">
	    <a class="btn dealnet-button dealnet-success-button btn-finish" href="@Url.Action("SubmitDeal", "NewRental", new {contractId = Model.BasicInfo.ContractId})">
	        @Resources.SubmitDeal
	    </a>
	</div>
</div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="address-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.InstallationAddressInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "address-section-modal" }))
                    {
                            <div class="row">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new {@class = "form-control dealnet-input", id = "street", placeholder=Resources.StreetPlaceholder })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new {@class = "form-control dealnet-input", type="text", placeholder="12345"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new {@class = "form-control dealnet-input", id = "locality", placeholder= Resources.City})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.DropDownListFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province,
                                                        (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                               new { @class = "form-control dealnet-input", id = "administrative_area_level_1" })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                             <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "postal_code", placeholder="12345"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation, "", new { @class = "text-danger", id = "address-info-validation-message" })
                    }
                </div>
	            <div class="btn-container">
		            <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#address-section-modal'), $('#address-section'), '@Url.Action("UpdateApplicants", "NewRental")', $('#basic-info-form'), applyProvinceChange @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication) { <text>, checkProvince</text> })) { $('#address-modal').modal('hide'); }">@Resources.SaveChanges</button>
		            <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
	            </div>
            </div>
        </div>
    </div>

</div>

@if (Model.BasicInfo.HomeOwner.MailingAddressInformation != null)
                                                {
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="mailing-address-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.MailingAddress</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "mailing-address-section-modal" }))
                        {
                                <div class="row">
                                    <div class="col-md-9">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new {@class = "form-control dealnet-input", id = "mailing_street", placeholder= Resources.StreetPlaceholder })
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, "", new {@class = "text-danger"})
                                               </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new {@class = "form-control dealnet-input", type="text", placeholder="12345"})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new {@class = "form-control dealnet-input", id = "mailing_locality", placeholder= Resources.City })
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.DropDownListFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province,
                                                        (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                   new { @class = "form-control dealnet-input", id = "mailing_administrative_area_level_1"})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "mailing_postal_code", placeholder="12345"})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        }
                    </div>
	                <div class="btn-container">
		                <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#mailing-address-section-modal'), $('#mailing-address-section'), '@Url.Action("UpdateApplicants", "NewRental")', $('#basic-info-form'))) { $('#mailing-address-modal').modal('hide'); }">@Resources.SaveChanges</button>
		                <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
	                </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="contact-info-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.ContactInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "contact-info-section-modal" }))
                    {
                            <div class="mandatory-phones">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new {@class = "form-control dealnet-input home-phone", type="text", placeholder= Resources.HomePhone })
                                                    @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new {@class = "form-control dealnet-input cell-phone", type="text", placeholder= Resources.CellPhone })
                                                    @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new {@class = "form-control dealnet-input", type="text", id = "locality", placeholder= Resources.BusinessPhone })
                                                    @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email", placeholder= Resources.EmailAddress })
                                                    @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new {@class = "form-control dealnet-input", type="text", placeholder= Resources.HouseSizeSquareFeet})
                                                    @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HouseSize, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                    }
                </div>

                <div class="btn-container">
		            <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button"  onclick="if (saveChanges($('#contact-info-section-modal'), $('#contact-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#contact-info-form'))) { $('#contact-info-modal').modal('hide'); }">@Resources.SaveChanges</button>
		            <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
	            </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="new-equipment-info-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.NewEquipment</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "new-equipment-info-section-modal"}))
                    {
                        for (var i = 0; i < Model.EquipmentInfo.NewEquipment.Count; i++)
                         {
                             <div class="dealnet-middle-header">
                                 №@(i + 1)
                             </div>
                             <div class="row">
                                 <div class="col-sm-12 col-md-6">
                                     <div class="form-group">
                                         @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Type, new {@class = "dealnet-field-caption"})
                                         <div class="dealnet-field-holder">
                                             <div class="control-group">
                                                 @Html.DropDownListFor(m => m.EquipmentInfo.NewEquipment[i].Type,
                                                     ((IList<EquipmentTypeDTO>) ViewBag.EquipmentTypes).Select(x => new SelectListItem {Value = x.Type, Text = x.Description, Selected = Model?.EquipmentInfo?.NewEquipment != null && Model.EquipmentInfo.NewEquipment[i]?.Type == x.Type}),
                                                     new {@class = "form-control"})
                                             </div>
                                         </div>
                                     </div>
                                 </div>
                                 <div class="col-sm-12 col-md-6">
                                     <div class="form-group">
                                         @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@class = "dealnet-field-caption"})
                                         <div class="dealnet-field-holder">
                                             <div class="control-group">
                                                 @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@class = "form-control dealnet-input", placeholder= Resources.Description})
                                                 @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Description, "", new {@class = "text-danger"})
                                             </div>
                                         </div>
                                     </div>
                                 </div>
                             </div>
                            <div class="row">
                                 @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
                                                    {
                                     <div class="col-sm-12 col-md-6">
                                         <div class="form-group">
                                             @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@class = "dealnet-field-caption"})
                                             <div class="dealnet-field-holder">
                                                 <div class="control-group">
                                                     @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@class = "form-control dealnet-input equipment-cost", type="text", id="", placeholder= Resources.Cost })
                                                     @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Cost, "", new {@class = "text-danger"})
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                 }
                                 else
                                 {
                                     <div class="col-md-12">
                                         <div class="form-group">
                                             @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@class = "dealnet-field-caption"})
                                             <div class="dealnet-field-holder">
                                                 <div class="control-group">
                                                     @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@class = "form-control dealnet-input monthly-cost", id = "", type="text", placeholder= Resources.MonthlyCost })
                                                     @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, "", new {@class = "text-danger"})
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                 }
                             </div>
                        }
                    <hr>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.EquipmentInfo.EstimatedInstallationDate, new { @class = "dealnet-field-caption" })
                                <div class="dealnet-field-holder">
                                    <div class="control-group date-group">
                                        @Html.TextBoxFor(m => m.EquipmentInfo.EstimatedInstallationDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "form-control dealnet-input date-input", placeholder = Resources.DateFormat })
                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.EstimatedInstallationDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                        @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment, "", new { @class = "text-danger", id = "new-equipment-validation-message" })
                    }
                </div>


                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#new-equipment-info-section-modal'), $('#new-equipment-info-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#new-equipment-info-form'), @(Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication ? "recalculateTotalCashPrice" : "recalculateTotalMonthlyPayment") @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication) { <text>,checkTotalMonthlyPayment</text> })) { $('#new-equipment-info-modal').modal('hide'); }">@Resources.SaveChanges</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="payment-info-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.PaymentInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "payment-info-section-modal" }))
                    {
                        <div class="row">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new {@class = "form-control", id = "payment-type"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-4 col-sm-5">
                                <div class="form-group">
                                    <div class="dealnet-label dealnet-field-caption">Photo of Void Cheque</div>
                                    <div class="equip-photo-group" style="position: relative;">
                                        <div class="equip-photo-hold">
                                            <div class="photo-pic">
                                                <img src="" alt="">
                                            </div>
                                        </div>
                                        <a href="#" class="remove-link"><i class="glyphicon glyphicon-remove"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 col-sm-7">
                                <div class="form-group">
                                    <div class="file-upload btn dealnet-button dealnet-success-button">
                                        <svg aria-hidden="true" class="icon icon-scan-licence"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-scan-licence")"></use></svg>
                                        <span>Add New Photo</span>
                                        <input type="file" accept="image/*" class="upload" id="upload-new-photo"/>
                                    </div>
                                </div>
                            </div>*@
                            <div class="col-sm-12 col-md-6 pap-payment">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new {@class = "form-control"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="enbridge-payment">
                                <div class="col-sm-12 col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "form-control dealnet-input", type="text", id = "enbridge-gas-distribution-account", placeholder = Resources.TwelveDigitsNumber })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="enbridge-payment row">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@class = "form-control dealnet-input", type="text", id = "meter-number", placeholder = Resources.SevenDigitsNumber})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row pap-payment">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new {@class = "form-control dealnet-input", type="text", id = "account-number",
                                            placeholder = Resources.AccountNumber })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new {@class = "form-control dealnet-input", type="text", id = "transit-number", placeholder = Resources.TransitNumber})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row pap-payment">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@class = "form-control dealnet-input", id = "bank-number", type="text", placeholder = Resources.BlankNumber})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

	            <div class="btn-container">
		            <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#payment-info-section-modal'), $('#payment-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#payment-info-form'))) { $('#payment-info-modal').modal('hide'); $('#payment-type-form').change(); }">@Resources.SaveChanges</button>
		            <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
	            </div>
	        </div>
        </div>
    </div>
</div>

@if (Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="existing-equipment-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.ExistingEquipmentInformation</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "existing-equipment-section-modal" }))
                        {
                                for (var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
                                {
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                                            new[]
                                                            {
                                                                new {Value = "true", Text = yesNaming, Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                                new {Value = "false", Text = noNaming, Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                            },
                                                            "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental),
                                                            new {@class = "form-control"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new {@class = "form-control dealnet-input", placeholder = Resources.RentalCompany})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new {@class = "form-control dealnet-input", type="text", placeholder = Resources.Years })
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new {@class = "form-control dealnet-input", placeholder = Resources.Make})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new {@class = "form-control dealnet-input", placeholder = Resources.Model})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new {@class = "form-control dealnet-input", placeholder = Resources.SerialNumber})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new {@class = "form-control dealnet-input", placeholder = Resources.GeneralCondition})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new {@class = "form-control dealnet-input", placeholder = Resources.Notes})
                                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    if(i < Model.EquipmentInfo.ExistingEquipment.Count-1){
                                    <hr>
                                    }

                                }
                        }
                    </div>

	                <div class="btn-container">
		                <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#existing-equipment-section-modal'), $('#existing-equipment-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#existing-equipment-form'))) { $('#existing-equipment-modal').modal('hide'); }">@Resources.SaveChanges</button>
		                <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
	                </div>
                </div>
            </div>
        </div>

    </div>
}

@if (Model.ContactAndPaymentInfo.CoBorrowersContactInfo != null && Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Any())
{
    for (var i = 0; i < Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
    {
        <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="contact-info-coborrower@(i + 1)-modal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.ContactInformation</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "contact-info-section"+ (i + 1)+ "-coborrower-modal" }))
                            {

                                    <div class="mandatory-phones">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <div class="row">
                                                        @Html.HiddenFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CustomerId)
                                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new {@class = "dealnet-field-caption col-xs-12"})
                                                        <div class="dealnet-field-holder col-xs-6">
                                                            <div class="control-group">
                                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new {@class = "form-control dealnet-input home-phone", placeholder = Resources.HomePhone})
                                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, "", new {@class = "text-danger"})
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <div class="row">
                                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new {@class = "dealnet-field-caption col-xs-12"})
                                                        <div class="dealnet-field-holder col-xs-6">
                                                            <div class="control-group">
                                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new {@class = "form-control dealnet-input cell-phone", placeholder = Resources.CellPhone})
                                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, "", new {@class = "text-danger"})
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <div class="row">
                                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new {@class = "dealnet-field-caption col-xs-12"})
                                                        <div class="dealnet-field-holder col-xs-6">
                                                            <div class="control-group">
                                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new {@class = "form-control dealnet-input", id = "locality", placeholder = Resources.BusinessPhone})
                                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, "", new {@class = "text-danger"})
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <div class="row">
                                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new {@class = "dealnet-field-caption col-xs-12"})
                                                        <div class="dealnet-field-holder col-xs-6">
                                                            <div class="control-group">
                                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new {@class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email", placeholder = Resources.EmailAddress})
                                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, "", new {@class = "text-danger"})
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                            }
                        </div>
                        <div class="btn-container">
                            <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#contact-info-section@(i + 1)-coborrower-modal'), $('#contact-info-section@(i + 1)-coborrower'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#contact-info-coborrowers-form-@(i + 1)'))) { $('#contact-info-coborrower@(i + 1)-modal').modal('hide'); }">@Resources.SaveChanges</button>
                            <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
         if (Model.BasicInfo.AdditionalApplicants[i].MailingAddressInformation != null)
         {
             <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="additional-mailing-address-modal-@(i + 1)">
                 <div class="modal-dialog" role="document">
                     <div class="modal-content">
                         <div class="modal-header">
                             <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                             <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.MailingAddress</div>
                         </div>
                         <div class="modal-body">
                             <div class="dealnet-credit-check-section dealnet-modal-section">
                                 @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "additional-mailing-address-section-modal-" + (i + 1)}))
                                 {
                                     <div class="row">
                                         <div class="col-md-9">
                                             <div class="form-group">
                                                 @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new {@class = "dealnet-field-caption"})
                                                 <div class="dealnet-field-holder">
                                                     <div class="control-group">
                                                         @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new {@class = "form-control dealnet-input", id = "additional-street-" + (i + 1), placeholder=Resources.StreetPlaceholder})
                                                         @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, "", new {@class = "text-danger"})
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="col-md-3">
                                             <div class="form-group">
                                                 @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                                 <div class="dealnet-field-holder">
                                                     <div class="control-group">
                                                         @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@class = "form-control dealnet-input", id = "additional-unit_number-" + (i + 1), placeholder="12345"})
                                                         @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                     <div class="row">
                                         <div class="col-md-6">
                                             <div class="form-group">
                                                 @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new {@class = "dealnet-field-caption"})
                                                 <div class="dealnet-field-holder">
                                                     <div class="control-group">
                                                         @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new {@class = "form-control dealnet-input", id = "additional-locality-" + (i + 1), placeholder=Resources.City})
                                                         @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, "", new {@class = "text-danger"})
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="col-md-6">
                                             <div class="form-group">
                                                 @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new {@class = "dealnet-field-caption"})
                                                 <div class="dealnet-field-holder">
                                                     <div class="control-group">
                                                         @Html.DropDownListFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province,
                                                        (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                        new { @class = "form-control dealnet-input", id = "additional-administrative_area_level_1-" + (i + 1)})
                                                         @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, "", new {@class = "text-danger"})
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                     <div class="row">
                                         <div class="col-md-6">
                                             <div class="form-group">
                                                 @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                                 <div class="dealnet-field-holder">
                                                     <div class="control-group">
                                                         @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "additional-postal_code-" + (i + 1), placeholder="12345"})
                                                         @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, "", new {@class = "text-danger"})
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                 }
                             </div>
                             <div class="btn-container">
                                 <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#additional-mailing-address-section-modal-@(i + 1)'), $('#additional-mailing-address-section-@(i + 1)'), '@Url.Action("UpdateApplicants", "NewRental")', $('#additional-basic-info-form-@(i + 1)'))) { $('#additional-mailing-address-modal-@(i + 1)').modal('hide'); }">@Resources.SaveChanges</button>
                                 <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                             </div>
                         </div>
                     </div>
                 </div>
             </div>
        }
        if (Model.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation != null)
        {
            <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="additional-prev-address-modal-@(i + 1)">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.PreviousAddressInformation</div>
                        </div>
                        <div class="modal-body">
                            <div class="dealnet-credit-check-section dealnet-modal-section">
                                @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "additional-prev-address-section-modal-" + (i + 1)}))
                                {
                                    <div class="row">
                                        <div class="col-md-9">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, new {@class = "form-control dealnet-input", id = "additional-previous-street-" + (i + 1), placeholder=Resources.StreetPlaceholder})
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Street, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new {@class = "form-control dealnet-input", id = "additional-previous-unit_number-" + (i + 1), type = "text", placeholder = "12345"})
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, new {@class = "form-control dealnet-input", id = "additional-previous-locality-" + (i + 1), placeholder=Resources.City})
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.City, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.DropDownListFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province,
                                                        (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                                       new { @class = "form-control dealnet-input", id = "additional-previous-administrative_area_level_1-" + (i + 1)})
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.Province, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                                <div class="dealnet-field-holder">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "additional-previous-postal_code-" + (i + 1), placeholder = "12345"})
                                                        @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="btn-container">
                                <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#additional-prev-address-section-modal-@(i + 1)'), $('#additional-prev-address-section-@(i + 1)'), '@Url.Action("UpdateApplicants", "NewRental")', $('#additional-basic-info-form-@(i + 1)'))) { $('#additional-prev-address-modal-@(i + 1)').modal('hide'); }">@Resources.SaveChanges</button>
                                <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
    }
    }
<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="edit-add-contract-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.AdditionalContractInformation</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "edit-add-contract-section-modal"}))
                    {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.EquipmentInfo.Notes, new { @class = "col-xs-12" })
                                    <div class="dealnet-field-holder col-xs-12">
                                        <div class="control-group">
                                            @Html.TextAreaFor(m => m.EquipmentInfo.Notes, new {@class = "form-control", id = "contract-notes", placeholder = Resources.ContractNotes})
                                            @Html.ValidationMessageFor(m => m.EquipmentInfo.Notes, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                    }
                </div>
                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#edit-add-contract-section-modal'), $('#edit-add-contract-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#contract-notes-form'))) { $('#edit-add-contract-modal').modal('hide'); }">@Resources.SaveChanges</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.BasicInfo.HomeOwner.PreviousAddressInformation != null)
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="prev-address-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">@Resources.Editing @Resources.PreviousAddressInformation</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "prev-address-section-modal" }))
                        {
                            <div class="row">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, new {@class = "form-control dealnet-input", id = "previous_street", placeholder = Resources.StreetPlaceholder })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Street, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, new {@class = "form-control dealnet-input", type = "text", placeholder = "12345"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, new {@class = "form-control dealnet-input", id = "previous_locality", placeholder = Resources.City })
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.City, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.DropDownListFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province,
                                                        (provinces).Select(x => new SelectListItem { Value = x.Province, Text = x.Province }), "",
                                               new { @class = "form-control dealnet-input", id = "previous_administrative_area_level_1"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.Province, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "previous_postal_code", placeholder = "12345"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.PreviousAddressInformation.PostalCode, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#prev-address-section-modal'), $('#prev-address-section'), '@Url.Action("UpdateApplicants", "NewRental")', $('#basic-info-form'))) { $('#prev-address-modal').modal('hide'); }">@Resources.SaveChanges</button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">@Resources.Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@section Translations
{
    translations['ErrorWhileUpdatingData'] = "@Resources.ErrorWhileUpdatingData";
    translations['Tax'] = "@Resources.Tax";
    translations['TotalMonthlyPaymentMustBeGreaterZero'] = "@Html.Raw(Resources.TotalMonthlyPaymentMustBeGreaterZero)";
    translations['AfterProvinceChangeTotalMustBeGreater'] = "@Resources.AfterProvinceChangeTotalMustBeGreater";
    @*translations['TotalCostGreaterThanAmount'] = "@Resources.TotalCostGreaterThanAmount";*@
}

@section scripts
{
    <script type="text/javascript">
        var taxRate = @(Model.ProvinceTaxRate?.Rate.ToString(CultureInfo.InvariantCulture) ?? "0");
        var agreementType = @((int)Model.EquipmentInfo.AgreementType);
        @{
            var provinceTaxRates = ViewBag.ProvinceTaxRates as IList<ProvinceTaxRateDTO>;
            if (provinceTaxRates != null)
            {
                @: var provinceTaxRates = [];
                foreach (var ptr in provinceTaxRates)
                {
                    @: provinceTaxRates["@ptr.Province"] = {rate:@ptr.Rate.ToString(CultureInfo.InvariantCulture), description:"@ptr.Description"};
                }
            }
        }
        @*var creditAmount = @Model.EquipmentInfo.CreditAmount;*@
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/localization")
    @Scripts.Render("~/bundles/summary-and-confirmation")
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@(System.Configuration.ConfigurationManager.AppSettings["PlacesAutocompleteKey"])&libraries=places&callback=assignAutocompletes" async defer></script>

    <script type="text/javascript">
        $(document).ready(function() {
            @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
            {
                <text>
                    $(".equipment-cost").each(function() {
                        $(this).rules("add", "required");
                    });
                </text>
            }
            else
            {
                <text>
                    $(".monthly-cost").each(function() {
                        $(this).rules("add", "required");
                    });
                </text>
            }
        });
    </script>

    @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
    {
        <script>
            var recalculateTotalCash = true;
        </script>
    }
    else
    {
        <script>
            var recalculateTotalCash = false;
        </script>
    }
}