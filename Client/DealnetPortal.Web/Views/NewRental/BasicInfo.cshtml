﻿@Styles.Render("~/Content/basic-info.css")

@Html.ActionLink("New Rental", "BasicInfo", null, new {@class = "dealnet-action-link"}) >

<div class="dealnet-large-header" id="basic-info">Basic Info</div>

<div class="row" id="steps">
    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
        <div class="dealnet-empty-circle">
            <div class="dealnet-green-circle">1</div>
        </div>
    </div>
    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
        <div class="step-centered">
            <div class="dealnet-empty-circle">2</div>
        </div>
    </div>
    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
        <div class="step-centered">
            <div class="dealnet-empty-circle">3</div>
        </div>
    </div>
    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
        <div class="step-centered">
            <div class="dealnet-empty-circle">4</div>
        </div>
    </div>
    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
        <div id="step5">
            <div class="dealnet-empty-circle">5</div>
        </div>
    </div>
</div>

<form>
    <div class="dealnet-middle-header" id="owner-info-label">Home Owner Information</div>

    <div class="row" id="scanlicense-button">
        <div class="col-md-3 col-lg-3">
            <div type="button" id="scan-btn" class="btn dealnet-button dealnet-green-button col-lg-12 col-md-12" data-toggle="modal" data-target="#camera-modal">
                <p class="dealnet-green-button-text">
                    <img src="~/content/images/scan-license.png">Scan License
                </p>
            </div>
        </div>
    </div>

    <div class="modal fade" id="camera-modal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="dealnet-middle-header">Scan License</div>
                    <div class="dealnet-middle-header-2" id="you-want">How do you want to do this?</div>

                    <ul class="nav nav-tabs" role="tablist">
                        <li id="foldit" role="presentation" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Use Camera</a></li>
                        <li id="foldit" role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Upload</a></li>
                    </ul>

                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane fade in active" id="home">
                            <div id="capture-area">
                                <video autoplay class="capture-frame" id="video"></video>
                                <canvas id="capture-canvas" class="capture-frame"></canvas>
                                <canvas id="big-capture-canvas"></canvas>
                                <div id="capture-buttons">
                                    <input type="button" class="btn dealnet-button dealnet-green-button big-green-button" id="capture-buttons-1" value="Capture" onclick="takePhoto()" />
                                    <div id="capture-buttons-2">
                                        <input type="button" class="btn dealnet-button dealnet-green-button big-green-button" value="Save" onclick="uploadCaptured()" />
                                        <div id="retake" onclick="retakePhoto()">Retake</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane fade" id="profile">
                            <div id="upload-area">
                                <div id="upload-buttons">
                                    <div class="file-upload btn dealnet-button dealnet-green-button">
                                        <p class="dealnet-green-button-text">
                                            <img src="~/content/images/upload.png">Upload Photo
                                        </p>
                                        <input type="file" class="upload" id="upload-file" onchange="submitUpload()" />
                                    </div>
                                </div>
                            </div>
                        </div>                       
                    </div>
                </div>
            </div>
        </div>
    </div>    

    <div class="row" id="owner-info">
        <div class="col-md-4 col-lg-4">
            First Name
            <input type="text" class="form-control dealnet-input" placeholder="First Name"/>
        </div>
        <div class="col-md-4 col-lg-4">
            Last Name
            <input type="text" class="form-control dealnet-input" placeholder="Last Name"/>
        </div>
        <div class="col-md-4 col-lg-4">
            Date of Birth
            <input type="date" class="form-control dealnet-input" placeholder="mm/dd/yyyy"/>
        </div>
    </div>

    <div id="add-additional-applicant" onclick="">
        <p><img src="~/Content/images/add-app.png"/>Add additional applicant</p>
    </div>

    <p id="address-info-label" class="dealnet-middle-header">Adress Information</p>

    <div class="row">
        <div class="col-md-3 col-lg-3">
            <div class="btn dealnet-button dealnet-green-button col-lg-12 col-md-12" onclick="autodetectAddress()">
                <p class="dealnet-green-button-text"><img src="~/content/images/get-location.png">Get My Location</p>
            </div>
        </div>
    </div>

    <div class="row" id="address-info1">
        <div class="col-md-6 col-lg-6">
            Installation Adress
            <input type="text" class="form-control dealnet-input" id="address-input1" placeholder="St."/>
        </div>
        <div class="col-md-2 col-lg-2">
            Unit #
            <input type="text" class="form-control dealnet-input" id="address-input2" placeholder="12345"/>
        </div>
        <div class="col-md-4 col-lg-4">
            City
            <input type="text" class="form-control dealnet-input" id="locality" placeholder="Ottawa"/>
        </div>
    </div>

    <div class="row" id="address-info2">
        <div class="col-md-4 col-lg-4">
            Province
            <input type="text" class="form-control dealnet-input" id="administrative_area_level_1" placeholder="Nepean"/>
        </div>
        <div class="col-md-4 col-lg-4">
            Postal Code
            <input type="text" class="form-control dealnet-input" id="postal_code" placeholder="12345"/>
        </div>
        <div class="col-md-4 col-lg-4 dealnet-disabled-text clear-address" id="clear-address">
            <p>
                <div class="dealnet-gray-circle">x</div>
                Clear Address
            </p>
        </div>
    </div>

    <p id="mailing-adress-different"><input type="checkbox" class="dealnet-checkbox" id="mailing-adress-checkbox"/>Mailing adress is different</p>

    <div id="mailing-adress">
        <div class="row" id="mailing-adress1">
            <div class="col-md-6 col-lg-6">
                Mailing Adress
                <input type="text" class="form-control dealnet-input" id="mailing-address-input1" placeholder="St."/>
            </div>
            <div class="col-md-2 col-lg-2">
                Unit #
                <input type="text" class="form-control dealnet-input" id="mailing-address-input2" placeholder="12345"/>
            </div>
            <div class="col-md-4 col-lg-4">
                City
                <input type="text" class="form-control dealnet-input" id="mailing-address-input3" placeholder="Ottawa"/>
            </div>
        </div>

        <div class="row" id="mailing-adress2">
            <div class="col-md-4 col-lg-4">
                Province
                <input type="text" class="form-control dealnet-input" id="mailing-address-input4" placeholder="Nepean"/>
            </div>
            <div class="col-md-4 col-lg-4">
                Postal Code
                <input type="text" class="form-control dealnet-input" id="mailing-address-input5" placeholder="12345"/>
            </div>
            <div class="col-md-4 col-lg-4 dealnet-disabled-text clear-address" id="clear-mailing-address">
                <p>
                    <div class="dealnet-gray-circle">x</div>
                    Clear Address
                </p>
            </div>
        </div>
    </div>

    <div class="row" id="saveproceed-button">
        <div class="col-md-3 col-lg-3">
            <button class="btn dealnet-button dealnet-green-button col-lg-12 col-md-12">
                <p class="dealnet-green-button-text">Save and Proceed</p>
            </button>
        </div>
    </div>
</form>

<script type="text/javascript">
    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });
    $("#mailing-adress").hide();   
    $("#mailing-adress-checkbox").click(function() {
        if ($(this).is(":checked")) {
            $("#mailing-adress").show(300);
        } else {
            $("#mailing-adress").hide(200);
        }
    });
    $("#clear-address").click(function() {
        document.getElementById('address-input1').value = '';
        document.getElementById('address-input2').value = '';
        document.getElementById('locality').value = '';
        document.getElementById('administrative_area_level_1').value = '';
        document.getElementById('postal_code').value = '';
    });
    $("#clear-mailing-address").click(function() {
        document.getElementById('mailing-address-input1').value = '';
        document.getElementById('mailing-address-input2').value = '';
        document.getElementById('mailing-address-input3').value = '';
        document.getElementById('mailing-address-input4').value = '';
        document.getElementById('mailing-address-input5').value = '';
    });
</script>

@section scripts
{
    <script>
        $("#capture-canvas").hide();
        $("#capture-buttons-2").hide();
        var localMediaStream = null;
        var video = document.querySelector('video');
        var canvas = document.getElementById('capture-canvas');
        var bigCanvas = document.getElementById('big-capture-canvas');

        function takePhoto() {
            if (localMediaStream) {
                canvas.width = video.offsetWidth;
                canvas.height = video.offsetHeight;
                bigCanvas.height = video.videoHeight;
                bigCanvas.width = video.videoWidth;
                var ctx = bigCanvas.getContext('2d');
                ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);
                ctx = canvas.getContext('2d');
                $("#capture-buttons-1").hide();
                ctx.drawImage(video, 0, 0, video.offsetWidth, video.offsetHeight);
                $("#video").hide();
                $("#capture-canvas").show();
                $("#capture-buttons-2").show();
            }
        }

        function retakePhoto() {
            $("#capture-canvas").hide();
            $("#capture-buttons-2").hide();
            $("#video").show();
            $("#capture-buttons-1").show();
        }

        $('#camera-modal').on('shown.bs.modal', function() {
            var constraints = {
                audio: false,
                video: {
                    width: 9999,
                    height: 9999,
                    optional: [
                        { minWidth: 320 },
                        { minWidth: 640 },
                        { minWidth: 800 },
                        { minWidth: 900 },
                        { minWidth: 1024 },
                        { minWidth: 1280 },
                        { minWidth: 1920 },
                        { minWidth: 2560 }
                    ]
                }
            };
            navigator.getUserMedia(constraints, function(stream) {
                video.src = window.URL.createObjectURL(stream);
                localMediaStream = stream;
            }, function(e) {
                console.log(e);
            });
        });

        $('#camera-modal').on('hidden.bs.modal', function() {
            video.pause();
            localMediaStream.stop();
        });

        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
        window.URL = window.URL || window.webkitURL;

        function uploadCaptured() {
            var dataUrl = bigCanvas.toDataURL();
            $.ajax({
                type: "POST",
                url: "@Url.Content("TestScanPosting")/",
                data: {
                    imgBase64: dataUrl
                }
            }).done(function(o) {
                window.location.href = "TestLicenseScanning";
            });
        }

        function submitUpload() {
            var files = document.getElementById('upload-file').files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("UploadDriverLicensePhoto", "NewRental")',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function(json) {
                            if (json.isRedirect) {
                                window.location.href = json.redirectUrl;
                            }
                        },
                        error: function(xhr, status, p3) {
                            alert(xhr.responseText);
                        }
                    });
                } else {
                    alert("Browser doesn't support HTML5 file upload!");
                }
            }
        }
    </script>

    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDaQqymsNuummVv7Yi9I2kgGl0lxDjZri4&libraries=places&callback=initGoogleServices" async defer></script>

    <script type="text/javascript">
        var placeSearch, autocomplete, geocoder;
        var addressForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'long_name',
            postal_code: 'short_name'
        };
        function initGoogleServices() {
            geocoder = new google.maps.Geocoder;

            var streetsOptions = {
                types: ['geocode'],
                componentRestrictions: { country: "ca" }
            };
            var citiesOptions = {
                types: ['(cities)'],
                componentRestrictions: { country: "ca" }
            };
            var provencesOptions = {
                types: ['(regions)'],
                componentRestrictions: { country: "ca" }
            };
            var streetAutocomplete1 = new google.maps.places.Autocomplete(document.getElementById('address-input1'), streetsOptions);
            var cityAutocomplete1 = new google.maps.places.Autocomplete(document.getElementById('locality'), citiesOptions);
            var provenceAutocomplete1 = new google.maps.places.Autocomplete(document.getElementById('administrative_area_level_1'), provencesOptions);
            var streetAutocomplete2 = new google.maps.places.Autocomplete(document.getElementById('mailing-address-input1'), streetsOptions);
            var cityAutocomplete2 = new google.maps.places.Autocomplete(document.getElementById('mailing-address-input3'), citiesOptions);
            var provenceAutocomplete2 = new google.maps.places.Autocomplete(document.getElementById('mailing-address-input4'), provencesOptions);
            google.maps.event.addListener(cityAutocomplete1, 'place_changed', function() {
                var place = cityAutocomplete1.getPlace();
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (addressType == 'locality') {
                        document.getElementById('locality').value = place.address_components[i][addressForm[addressType]];
                        break;
                    }
                }
            });
            google.maps.event.addListener(cityAutocomplete2, 'place_changed', function () {
                var place = cityAutocomplete2.getPlace();
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (addressType == 'locality') {
                        document.getElementById('mailing-address-input3').value = place.address_components[i][addressForm[addressType]];
                        break;
                    }
                }
            });
            google.maps.event.addListener(provenceAutocomplete1, 'place_changed', function () {
                var place = provenceAutocomplete1.getPlace();
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (addressType == 'administrative_area_level_1') {
                        document.getElementById('administrative_area_level_1').value = place.address_components[i][addressForm[addressType]];
                        break;
                    }
                }
            });
            google.maps.event.addListener(provenceAutocomplete2, 'place_changed', function () {
                var place = provenceAutocomplete2.getPlace();
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (addressType == 'administrative_area_level_1') {
                        document.getElementById('mailing-address-input4').value = place.address_components[i][addressForm[addressType]];
                        break;
                    }
                }
            });
            google.maps.event.addListener(streetAutocomplete1, 'place_changed', function () {
                var place = streetAutocomplete1.getPlace();
                var street;
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (addressForm[addressType]) {
                        var val = place.address_components[i][addressForm[addressType]];
                        if (addressType == 'street_number') {
                            if (!street) {
                                street = val;
                            } else {
                                street = val + " " + street;
                            }
                            continue;
                        }
                        if (addressType == 'route') {
                            if (!street) {
                                street = val;
                            } else {
                                street += " " + val;
                            }
                            continue;
                        }
                    }
                }
                if (street) {
                    document.getElementById('address-input1').value = street;
                } else {
                    document.getElementById('address-input1').value = '';
                }
            });
            google.maps.event.addListener(streetAutocomplete2, 'place_changed', function () {
                var place = streetAutocomplete2.getPlace();
                var street;
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (addressForm[addressType]) {
                        var val = place.address_components[i][addressForm[addressType]];
                        if (addressType == 'street_number') {
                            if (!street) {
                                street = val;
                            } else {
                                street = val + " " + street;
                            }
                            continue;
                        }
                        if (addressType == 'route') {
                            if (!street) {
                                street = val;
                            } else {
                                street += " " + val;
                            }
                            continue;
                        }
                    }
                }
                if (street) {
                    document.getElementById('mailing-address-input1').value = street;
                } else {
                    document.getElementById('mailing-address-input1').value = '';
                }
            });
        }
        function autodetectAddress() {
            if (geocoder) {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                        geocoder.geocode({
                            'latLng': latlng
                        }, function (results, status) {
                            if (status === google.maps.GeocoderStatus.OK) {
                                if (results[0]) {
                                    var street;
                                    for (var i = 0; i < results[0].address_components.length; i++) {
                                        var addressType = results[0].address_components[i].types[0];
                                        if (addressForm[addressType]) {
                                            var val = results[0].address_components[i][addressForm[addressType]];
                                            if (addressType == 'street_number') {
                                                if (!street) {
                                                    street = val;
                                                } else {
                                                    street = val + " " + street;
                                                }
                                                continue;
                                            }
                                            if (addressType == 'route') {
                                                if (!street) {
                                                    street = val;
                                                } else {
                                                    street += " " + val;
                                                }
                                                continue;
                                            }
                                            document.getElementById(addressType).value = val;
                                        }
                                    }
                                    if (street) {
                                        document.getElementById('address-input1').value = street;
                                    }
                                } else {
                                    console.log('No results by Location service');
                                }
                            } else {
                                console.log('Geocoder failed due to: ' + status);
                            }
                        });
                    });
                }
            }
        }
    </script>
}

