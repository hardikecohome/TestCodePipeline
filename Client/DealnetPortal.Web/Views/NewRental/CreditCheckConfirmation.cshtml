@model DealnetPortal.Web.Models.BasicInfoViewModel

@TempData["CreditCheckErrorMessage"]
<div id="label-steps">
	<div class="dealnet-action-link">New Application</div> >
</div>

@using (Html.BeginForm("CreditCheckConfirmation", "NewRental", FormMethod.Post, new { id = "credit-check-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ContractId)
    @Html.HiddenFor(m => m.SubmittingDealerId)
<div class="dealnet-large-header" id="basic-info">Credit check confirmation</div>

<div id="steps-line"></div>
<div class="row" id="steps">
	<div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
		<a href="@Url.Action("BasicInfo", new { contractId = Model.ContractId })" class="step-item">1</a>
	</div>
	<div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
		<div id="step2" class="step-item step-active">2</div>

		<div id="step3" class="step-item">3</div>
	</div>
	<div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
		<div id="step4" class="step-item">4</div>
	</div>
	<div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
		<div id="step5" class="step-item">5</div>
	</div>
</div>
<div class="well danger-well error-descr">
	<svg aria-hidden="true" class="icon icon-error"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-error")"></use></svg>
	Lorem ipsum dolor sit amet.
</div>
<div class="form-container">
	<div class="form-section">
	<div class="row credit-check-info-hold">
		<div class="col-md-6">
			<div class="dealnet-credit-check-section" id="home-owner-section">
			    <h3 class="dealnet-section-title">Home Owner Information<a href="#" onclick="copyFormData($('#home-owner-section'), $('#home-owner-section-modal'), false); $('#home-owner-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
			    </h3>
                @Html.HiddenFor(m => m.HomeOwner.CustomerId)
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.HomeOwner.FirstName, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.HomeOwner.FirstName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id="" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.HomeOwner.LastName, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.HomeOwner.LastName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>

				<div class="form-group">
					<div class="row">
						@Html.Label("HomeOwner_BirthDate", "Date of Birth", new { @class = "dealnet-field-caption col-xs-6" })
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group date-group">
								@Html.TextBoxFor(m => Model.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "dealnet-disabled-input", @readonly = "readonly", data_val_date = "Date must be in range 1900 - Today", id = "" })
							</div>
						</div>
					</div>
				</div>

				<div class="dealnet-agrees form-group">
					<label class="align-middle custom-checkbox">
						@Html.CheckBox("home-owner-agrees", new { id = "home-owner-agrees" })
						<span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
						<span>Agrees to send his/her personal data to credit check</span>
					</label>
				</div>
			</div>


		</div>

		@if (Model.AdditionalApplicants != null && Model.AdditionalApplicants.Count > 0)
		{
		    for (int i = 0; i < Model.AdditionalApplicants.Count; i++)
		    {

		        <div class="col-md-6">
		            <div class="dealnet-credit-check-section" id="additional@(i+1)-section">
		                <h3 class="dealnet-section-title">Additional Applicant #@(i + 1) <a href="#" onclick="copyFormData($('#additional@(i+1)-section'), $('#additional1-section-modal'), false); $('#additional@(i+1)-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
		                </h3>
		                @Html.HiddenFor(m => m.AdditionalApplicants[i].CustomerId)
		                <div class="form-group">
		                    <div class="row">
		                        @Html.LabelFor(m => Model.AdditionalApplicants[i].FirstName, new {@class = "dealnet-field-caption col-xs-6"})
		                        <div class="dealnet-field-holder col-xs-6">
		                            <div class="control-group">
		                                @Html.TextBoxFor(m => Model.AdditionalApplicants[i].FirstName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
		                            </div>
		                        </div>
		                    </div>
		                </div>

		                <div class="form-group">
		                    <div class="row">
		                        @Html.LabelFor(m => Model.AdditionalApplicants[i].LastName, new {@class = "dealnet-field-caption col-xs-6"})
		                        <div class="dealnet-field-holder col-xs-6">
		                            <div class="control-group">
		                                @Html.TextBoxFor(m => Model.AdditionalApplicants[i].LastName, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
		                            </div>
		                        </div>
		                    </div>

		                </div>
		                <div class="form-group">
		                    <div class="row">
		                        @Html.Label("additional-birth-date-@(i+1)", "Date of Birth", new {@class = "dealnet-field-caption col-xs-6"})
		                        <div class="dealnet-field-holder col-xs-6">
		                            <div class="control-group date-group">
		                                @Html.TextBoxFor(m => Model.AdditionalApplicants[i].BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "dealnet-disabled-input", @readonly = "readonly", id = "", data_val_date = "Date must be in range 1900 - Today"})
		                            </div>
		                        </div>
		                    </div>
		                </div>

		                <div class="dealnet-agrees form-group">
		                    <label class="align-middle custom-checkbox">
		                        @Html.CheckBox("additional" + (i + 1) + "-agrees", new {id = "additional" + (i + 1) + "-agrees" })
		                        <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
		                        <span>Agrees to send his/her personal data to credit check</span>
		                    </label>
		                </div>
		            </div>
		        </div>
		    }
		}

		@*@if (Model.AdditionalApplicants != null && Model.AdditionalApplicants.Count > 1)
		{
		<div class="col-md-6">
			<div class="dealnet-credit-check-section">
			    <h3 class="dealnet-section-title">Additional Applicant #2 <a href="#" onclick="copyFormData($('#additional2-section'), $('#additional2-section-modal'), false); $('#additional2-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
			    </h3>
                @Html.HiddenFor(m => m.AdditionalApplicants[1].CustomerId)
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AdditionalApplicants[1].FirstName, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AdditionalApplicants[1].FirstName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AdditionalApplicants[1].LastName, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AdditionalApplicants[1].LastName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.Label("additional-birth-date-2", "Date of Birth", new { @class = "dealnet-field-caption col-xs-6" })
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group date-group">
								@Html.TextBoxFor(m => Model.AdditionalApplicants[1].BirthDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "dealnet-disabled-input", @readonly = "readonly", id = "", data_val_date = "Date must be in range 1900 - Today" })
							</div>
						</div>
					</div>
				</div>

				<div class="dealnet-agrees form-group">
					<label class="align-midle custom-checkbox">
						@Html.CheckBox("additional2-agrees", new { id = "additional2-agrees" })
						<span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
						<span>Agrees to send his/her personal data to credit check</span>
					</label>
				</div>
			</div>
		</div>
		}

		@if (Model.AdditionalApplicants != null && Model.AdditionalApplicants.Count > 2)
		{
		<div class="col-md-6">
			<div class="dealnet-credit-check-section">
			    <h3 class="dealnet-section-title">Additional Applicant #3 <a href="#" onclick="copyFormData($('#additional2-section'), $('#additional2-section-modal'), false); $('#additional2-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
			    </h3>
                @Html.HiddenFor(m => m.AdditionalApplicants[2].CustomerId)
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AdditionalApplicants[2].FirstName, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AdditionalApplicants[2].FirstName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AdditionalApplicants[2].LastName, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AdditionalApplicants[2].LastName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>

				<div class="form-group">
					<div class="row">
						@Html.Label("additional-birth-date-3", "Date of Birth", new { @class = "dealnet-field-caption col-xs-6" })
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group date-group">
								@Html.TextBoxFor(m => Model.AdditionalApplicants[2].BirthDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "dealnet-disabled-input", @readonly = "readonly", id = "", data_val_date = "Date must be in range 1900 - Today" })
							</div>
						</div>
					</div>

				</div>
				<div class="dealnet-agrees form-group">
					<label class="align-middle custom-checkbox">
						@Html.CheckBox("additional3-agrees", new { id = "additional3-agrees" })
						<span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
						<span>Agrees to send his/her personal data to credit check</span>
					</label>
				</div>
			</div>
		</div>
		}*@
		<div class="col-md-6">
			<div class="dealnet-credit-check-section" id="address-section">
				<h3 class="dealnet-section-title">Address Information <a href="#" onclick="copyFormData($('#address-section'), $('#address-section-modal'), false); $('#address-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a></h3>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AddressInformation.InstallationAddress, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AddressInformation.InstallationAddress, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>

				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>

				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.AddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.AddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		@if (Model.MailingAddressInformation != null)
		{

		<div class="col-md-6">
			<div class="dealnet-credit-check-section" id="mailing-address-section">
				<h3 class="dealnet-section-title">Mailing Address <a href="#" onclick="copyFormData($('#mailing-address-section'), $('#mailing-address-section-modal'), false); $('#mailing-address-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a></h3>
				<div class="form-group">
					<div class="row">
						@Html.Label("", "Mailing Address", new { @class = "dealnet-field-caption col-xs-6" })
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.MailingAddressInformation.InstallationAddress, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.MailingAddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.MailingAddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.MailingAddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							</div>
						</div>
					</div>

				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => Model.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6"})
						<div class="dealnet-field-holder col-xs-6">
							<div class="control-group">
								@Html.TextBoxFor(m => Model.MailingAddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		}
	</div>

	<div class="row" id="saveproceed-button">
		<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			<div class="text-danger proceed-error-message" id="proceed-error-message" style="display: none;">
				<svg aria-hidden="true" class="icon icon-error"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-error")"></use></svg>
				You can't proceed until all applicants agree to send their personal data to credit check
			</div>
		    <button class="btn dealnet-button dealnet-success-button" id="check-credit-button">
		        Check Credit
		    </button>
		</div>
	</div>
</div>
</div>
}

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="home-owner-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Home Owner Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
					<form id="home-owner-section-modal">
					    <div class="row">
					        @Html.HiddenFor(m => m.HomeOwner.CustomerId)
					        <div class="col-md-6">
					            <div class="form-group">
				                    @Html.LabelFor(m => Model.HomeOwner.FirstName, new {@class = "dealnet-field-caption"})
				                    <div class="dealnet-field-holder">
				                        <div class="control-group">
				                            @Html.TextBoxFor(m => Model.HomeOwner.FirstName, new {@class = "form-control dealnet-input"})
				                            @Html.ValidationMessageFor(m => m.HomeOwner.FirstName, "", new {@class = "text-danger"})
				                        </div>
				                    </div>
					            </div>
					        </div>
					        <div class="col-md-6">
					            <div class="form-group">
				                    @Html.LabelFor(m => Model.HomeOwner.LastName, new {@class = "dealnet-field-caption"})
				                    <div class="dealnet-field-holder">
				                        <div class="control-group">
				                            @Html.TextBoxFor(m => Model.HomeOwner.LastName, new {@class = "form-control dealnet-input"})
				                            @Html.ValidationMessageFor(m => m.HomeOwner.LastName, "", new {@class = "text-danger"})
				                        </div>
				                    </div>
					            </div>
					        </div>
					        <div class="col-md-6">
					            <div class="form-group">
				                    @Html.Label("birth-date", "Date of Birth", new {@class = "dealnet-field-caption"})
				                    <div class="dealnet-field-holder">
				                        <div class="control-group date-group">
				                            @Html.TextBoxFor(m => Model.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "form-control dealnet-input", id = "birth-date", data_val_date = "Date must be in range 1900 - Today"})
				                            @Html.ValidationMessageFor(m => m.HomeOwner.BirthDate, "", new {@class = "text-danger"})
				                        </div>
				                    </div>
					            </div>
					        </div>
					    </div>
					</form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#home-owner-section-modal'), $('#home-owner-section'), '@Url.Action("UpdateBasicInfo", "NewRental")', $('#credit-check-form'))) { $('#home-owner-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>
@if (Model.AdditionalApplicants != null && Model.AdditionalApplicants.Any())
{
for (var i = 0; i < Model.AdditionalApplicants.Count; i++)
{
<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="additional@(i+1)-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Additional Applicant #@(i + 1)</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
					<form id="additional@(i+1)-section-modal">
					    <div class="row">
					        @Html.HiddenFor(m => m.AdditionalApplicants[i].CustomerId)
					        <div class="col-md-6">
					            <div class="form-group">
				                    @Html.LabelFor(m => m.AdditionalApplicants[i].FirstName, new {@class = "dealnet-field-caption"})
				                    <div class="dealnet-field-holder">
				                        <div class="control-group">
				                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].FirstName, new {@class = "form-control dealnet-input"})
				                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].FirstName, "", new {@class = "text-danger"})
				                        </div>
				                    </div>
					            </div>
					        </div>
					        <div class="col-md-6">
					            <div class="form-group">
				                    @Html.LabelFor(m => m.AdditionalApplicants[i].LastName, new {@class = "dealnet-field-caption"})
				                    <div class="dealnet-field-holder">
				                        <div class="control-group">
				                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].LastName, new {@class = "form-control dealnet-input"})
				                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].LastName, "", new {@class = "text-danger"})
				                        </div>
				                    </div>
					            </div>
					        </div>
					        <div class="col-md-6">
					            <div class="form-group">
				                    @Html.Label("additional" + (i + 1) + "-birth-date", "Date of Birth", new {@class = "dealnet-field-caption"})
				                    <div class="dealnet-field-holder">
				                        <div class="control-group date-group">
				                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "form-control dealnet-input", id = "additional" + (i + 1) + "-birth-date", data_val_date = "Date must be in range 1900 - Today"})
				                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].BirthDate, "", new {@class = "text-danger"})
				                        </div>
				                    </div>
					            </div>
					        </div>
					    </div>
					</form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#additional@(i+1)-section-modal'), $('#additional@(i+1)-section'), '@Url.Action("UpdateBasicInfo", "NewRental")', $('#credit-check-form'))) { $('#additional@(i+1)-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>
}
}

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="address-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Address Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
					<form id="address-section-modal">
						<div class="row">
							<div class="col-md-9">
								<div class="form-group">
									@Html.LabelFor(m => m.AddressInformation.InstallationAddress, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.AddressInformation.InstallationAddress, new { @class = "form-control dealnet-input", id = "street" })
											@Html.ValidationMessageFor(m => m.AddressInformation.InstallationAddress, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-3">
								<div class="form-group">
									@Html.LabelFor(m => m.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.AddressInformation.UnitNumber, new { @class = "form-control dealnet-input" })
											@Html.ValidationMessageFor(m => m.AddressInformation.UnitNumber, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.AddressInformation.City, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.AddressInformation.City, new { @class = "form-control dealnet-input", id = "locality" })
											@Html.ValidationMessageFor(m => m.AddressInformation.City, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.AddressInformation.Province, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.AddressInformation.Province, new { @class = "form-control dealnet-input", id = "administrative_area_level_1" })
											@Html.ValidationMessageFor(m => m.AddressInformation.Province, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.AddressInformation.PostalCode, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.AddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "postal_code" })
											@Html.ValidationMessageFor(m => m.AddressInformation.PostalCode, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
						</div>
					</form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#address-section-modal'), $('#address-section'), '@Url.Action("UpdateBasicInfo", "NewRental")', $('#credit-check-form'))) { $('#address-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>

</div>

@if (Model.MailingAddressInformation != null)
{
<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="mailing-address-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Mailing Address</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
					<form id="mailing-address-section-modal">
						<div class="row">
							<div class="col-md-9">
								<div class="form-group">
									@Html.Label("mailing_street", "Mailing Address", new { @class = "dealnet-field-caption" })
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.MailingAddressInformation.InstallationAddress, new { @class = "form-control dealnet-input", id = "mailing_street" })
											@Html.ValidationMessageFor(m => m.MailingAddressInformation.InstallationAddress, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-3">
								<div class="form-group">
									@Html.LabelFor(m => m.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.MailingAddressInformation.UnitNumber, new { @class = "form-control dealnet-input" })
											@Html.ValidationMessageFor(m => m.MailingAddressInformation.UnitNumber, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.MailingAddressInformation.City, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.MailingAddressInformation.City, new { @class = "form-control dealnet-input", id = "mailing_locality" })
											@Html.ValidationMessageFor(m => m.MailingAddressInformation.City, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.MailingAddressInformation.Province, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.MailingAddressInformation.Province, new { @class = "form-control dealnet-input", id = "mailing_administrative_area_level_1" })
											@Html.ValidationMessageFor(m => m.MailingAddressInformation.Province, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption"})
									<div class="dealnet-field-holder">
										<div class="control-group">
											@Html.TextBoxFor(m => m.MailingAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "mailing_postal_code" })
											@Html.ValidationMessageFor(m => m.MailingAddressInformation.PostalCode, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
							</div>
						</div>
					</form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#mailing-address-section-modal'), $('#mailing-address-section'), '@Url.Action("UpdateBasicInfo", "NewRental")', $('#credit-check-form'))) { $('#mailing-address-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>
}

<link href="https://code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css" rel="stylesheet">
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaQqymsNuummVv7Yi9I2kgGl0lxDjZri4&libraries=places&callback=assignAutocompletes" async defer></script>

@section scripts
{
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/credit-check")
}
