@using DealnetPortal.Api.Common.Enumeration
@model DealnetPortal.Web.Models.SendEmailsViewModel

<div class="rental-successful-page">
    <div class="row">
        <div class="col-xs-12">
            <div class="message-header text-center">@(Model.AgreementType == AgreementType.LoanApplication ? Resources.Loan : Resources.Rental) @Resources.AgreementSubmittedSuccessfully</div>
            <div class="links-container">
                <a href="@Url.Action("ContractEdit", "MyDeals", new {@id = Model.ContractId})" class="dealnet-info-link">
                    @Resources.SeeContractDetails
                </a>
                @*<a href="@Url.Action("PrintContract", "NewRental", new {@contractId = Model.ContractId})" class="dealnet-info-link">*@
                <a href="#" onclick="checkPrintedContract('@Url.Action("CheckContractAgreement", "NewRental", new {@contractId = Model.ContractId})', '@Url.Action("PrintContract", "NewRental", new {@contractId = Model.ContractId})');"
                   class="dealnet-info-link">
                    <svg aria-hidden="true" class="icon icon-printer"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-printer")"></use></svg>@Resources.PrintTheContract
                </a>

                <div class="well danger-well error-descr" style="display: none;">
                    <svg aria-hidden="true" class="icon icon-error"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-error")"></use></svg>
                    @Resources.CannotGetAgreementForPrint
                </div>
            </div>
            @if (ViewBag.IsEsignatureEnabled)
            {
                <div class="sent-contract-section">
                    <h2 class="dealnet-large-header">@Resources.SendContractForEsignature</h2>
                    @using (Html.BeginForm("SummaryAndConfirmation", "NewRental", FormMethod.Post, new {id = "send-mails-form", @class = "clearfix"}))
                    {
                        @Html.HiddenFor(m => m.ContractId)
                        @Html.HiddenFor(m => m.HomeOwnerId)
                        @Html.HiddenFor(m => m.HomeOwnerFullName)
                        @Html.AntiForgeryToken()
                        <div class="well rental-summary-emails well-info">
                            <p class="summary-emails-header">
                                <svg aria-hidden="true" class="icon icon-email"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-email")"></use></svg>
                                @Resources.PleaseEnterEmailsAndClickSend
                            </p>
                            <p>@Resources.InvitesForSigningWillBeSent</p>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.HomeOwnerEmail)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.HomeOwnerEmail, new {@class = "dealnet-input form-control", type = "email"})
                                            @Html.ValidationMessageFor(m => m.HomeOwnerEmail, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                                @if (Model.AdditionalApplicantsEmails != null)
                                {
                                    for (var i = 0; i < Model.AdditionalApplicantsEmails.Length; i++)
                                    {
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="addApplicantEmail@(i)">@Resources.AdditionalApplicant #@(i + 1) @Resources.Email</label>
                                                <div class="control-group">
                                                    @Html.HiddenFor(m => m.AdditionalApplicantsEmails[i].CustomerId)
                                                    @Html.TextBoxFor(m => m.AdditionalApplicantsEmails[i].Email, new {id = "addApplicantEmail" + i, @class = "dealnet-input form-control", type = "email"})
                                                    @Html.ValidationMessageFor(m => m.AdditionalApplicantsEmails[i].Email, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SalesRepEmail)
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.SalesRepEmail, new {id = "salesRepEmail", @class = "dealnet-input form-control", type = "email"})
                                            @Html.ValidationMessageFor(m => m.SalesRepEmail, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group btn-container">
                                        <button type="button" class="btn dealnet-button dealnet-success-button" id="send-email-button" onclick="submitEmailsAsync('@Url.Action("SendContractEmails", "NewRental")', $('#send-mails-form'));">
                                            @Resources.SendEmails
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="sent-email-msg text-center" style="display: none;">
                                        <h4 class="align-middle"><svg aria-hidden="true" class="icon icon-success"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-success")"></use></svg>@Resources.InvitesWereSentToEmails</h4>
                                        @Resources.PlatformIsPreparingCheck
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }

            <div class="message-desc">@(string.Format(Resources.ThankYouForCompleting, Model.HomeOwnerFullName, Model.AgreementType == AgreementType.LoanApplication ? Resources.Loan : Resources.Rental))
                @if (!string.IsNullOrEmpty(Model.HomeOwnerEmail))
                {
                    @:@Resources.WillReceiveEmailShortly <a href="mailto:@Model.HomeOwnerEmail">@Model.HomeOwnerEmail</a> @Resources.ContainingCopyOfAgreement
                }
            </div>

            <div class="text-center">
                <a href="@Url.Action("CreateNewApplication", new {contractId = Model.ContractId})" class="btn dealnet-button dealnet-success-button wide-button">
                    @Resources.CreateAnotherApplicationForThis
                </a>
            </div>
        </div>
    </div>
</div>

@section Translations
{
    translations['ResendEmails'] = "@Resources.ResendEmails";
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/agreement-submit-success")    
}