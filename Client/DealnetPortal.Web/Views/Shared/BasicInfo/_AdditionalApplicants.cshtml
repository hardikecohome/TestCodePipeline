@model DealnetPortal.Web.Models.BasicInfoViewModel

@for(var i = 0; i < 1; i++)
{
    <div id="additional@(i + 1)-section" @if(Model?.AdditionalApplicants != null && Model.AdditionalApplicants.Count > 0 && Model.AdditionalApplicants[i]?.FirstName != null) { <text> data-initialized="true" </text>  @* if (Model.ContractWasDeclined && (Model.AdditionalApplicants[i]?.IsInitialCustomer ?? false)) { <text>class="hidden"</text> } *@ }>
        <div class="personal-info-section">
            <div class="dealnet-middle-header owner-info-label">
                @Resources.AdditionalApplicantInformation
                <div id="additional@(i + 1)-remove" class="additional-remove">
                    <i class="glyphicon glyphicon-remove"></i>
                </div>
            </div>
            <input type="hidden" name="AdditionalApplicants.Index" value="@i" />

            @if(!ViewBag.IsMobileRequest)
            {
                <div class="row scanlicence-button">
                    <div class="col-md-12">
                        <div class="scanlicence-hold">
                            <button type="button" class="btn btn-green col-md-3" id="additional@(i + 1)-scan-button" data-toggle="modal" data-target="#camera-modal">
                                <svg aria-hidden="true" class="icon icon-scan-licence"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-scan-licence")"></use></svg>
                                <span>@Resources.ScanLicense</span>
                            </button>
                            <a href="#" class="scanlicence-info-link">
                                <svg aria-hidden="true" class="icon icon-info-grey"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-grey")"></use></svg>
                            </a>
                            <div class="scanlicence-info-text well well-info clear-border">
                                @Resources.TurnLicenseOver
                            </div>
                        </div>
                        <span class="scanlicence-notify">@Resources.ScanAndFillAutomatically</span>
                    </div>
                </div>
            }
            else
            {
                <div class="row scanlicence-button">
                    <div class="col-md-12">
                        <div class="scanlicence-hold">
                            <div class="file-upload btn btn-green col-md-3">
                                <svg aria-hidden="true" class="icon icon-scan-licence">
                                    <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-scan-licence")"></use>
                                </svg>
                                <span>@Resources.ScanLicense</span>
                                <input type="file" accept="image/*" class="upload" onchange="submitUpload(this, '@Url.Action("RecognizeDriverLicensePhoto", "NewRental")', 'additional-first-name-@(i + 1)', 'additional-last-name-@(i + 1)', 'additional-birth-date-@(i + 1)', 'additional-dl-number-@(i + 1)', 'additional-street-@(i + 1)', 'additional-locality-@(i + 1)', 'additional-administrative_area_level_1-@(i + 1)', 'additional-postal_code-@(i + 1)')" />
                            </div>
                            <a href="#" class="scanlicence-info-link">
                                <svg aria-hidden="true" class="icon icon-info-grey"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-grey")"></use></svg>
                            </a>
                            <div class="scanlicence-info-text well well-info clear-border">
                                @Resources.TurnLicenseOver
                            </div>
                        </div>
                        <span class="scanlicence-notify">@Resources.ScanAndFillAutomatically</span>
                    </div>
                </div>
            }

            <div class="owner-info">
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].FirstName, new { @for = "additional-first-name-" + (i + 1) })
                            <div class="control-group">
                                @Html.HiddenFor(m => m.AdditionalApplicants[i].CustomerId, new { @class = "form-control dealnet-input", id = "additional-id-" + (i + 1), disabled = "disabled" })
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].FirstName, new { @class = "form-control dealnet-input", id = "additional-first-name-" + (i + 1), placeholder = Resources.FirstName, disabled = "disabled" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].LastName, new { @for = "additional-last-name-" + (i + 1) })
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].LastName, new { @class = "form-control dealnet-input", id = "additional-last-name-" + (i + 1), placeholder = Resources.LastName, disabled = "disabled" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].BirthDate, new { @for = "additional-birth-date-" + (i + 1) })
                            <div class="control-group dob-group">

                                <div class="dob-input-hold">
                                    @Html.TextBoxFor(m => m.AdditionalApplicants[i].BirthDate, @"{0:MM/dd/yyyy}", new { @class = "check-age dob-input", id = "additional-birth-date-" + (i + 1), placeholder = Resources.DateFormat })
                                </div>
                                @{
                                    var day = 0;
                                    var month = 0;
                                    var year = 0;
                                    if(Model.AdditionalApplicants[i] != null && Model.AdditionalApplicants[i].BirthDate.HasValue)
                                    {
                                        day = Model.AdditionalApplicants[i].BirthDate.Value.Day;
                                        month = Model.AdditionalApplicants[i].BirthDate.Value.Month;
                                        year = Model.AdditionalApplicants[i].BirthDate.Value.Year;
                                    }
                                    else
                                    {
                                        month = 0;
                                        day = 0;
                                        year = 0;
                                    }
                                }
                                <div class="dealnet-input no-border">
                                    <div class="custom-select">
                                        <select class="form-control dealnet-input dob-month">
                                            <option value="">mm</option>
                                            @for(var j = 1; j < 13; j++)
                                            {
                                                <option value="@j" @( month == j ? "selected=selected" : "" )>@j</option>
                                            }
                                        </select>
                                        <span class="caret"></span>
                                    </div>
                                    <div class="custom-select">
                                        <select class="form-control dealnet-input dob-day">
                                            <option value="">dd</option>
                                            @for(var j = 1; j < 32; j++)
                                            {
                                                <option value="@j" @( day == j ? "selected=selected" : "" )>@j</option>
                                            }
                                        </select>
                                        <span class="caret"></span>
                                    </div>
                                    <div class="custom-select last">
                                        <select class="form-control dealnet-input dob-year">
                                            <option value="">yyyy</option>
                                            @{ var yearLess18 = DateTime.Now.Year - 18;}
                                            @for(var j = yearLess18; j >= 1900; j--)
                                            {
                                                <option value="@j" @( year == j ? "selected=selected" : "" )>@j</option>
                                            }
                                        </select>
                                        <span class="caret"></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].BirthDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-lg-4 hidden">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].DriverLicenseNumber, new { @for = "additional-dl-number-" + (i + 1) })
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].DriverLicenseNumber, new { @class = "form-control dealnet-input", id = "additional-dl-number-" + (i + 1), placeholder = Resources.DriverLicenseNumber })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].DriverLicenseNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <!--New Code to map new contract-->
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].VerificationIdName, new { @for = "additional-verification-id" + (i + 1) })
                            <div class="control-group">
                                @Html.DropDownListFor(m => m.AdditionalApplicants[i].VerificationIdName, (Model.VarificationIds).Select(x => new SelectListItem { Value = x.VerificationIdName, Text = x.VerificationIdName, Selected = Model.AdditionalApplicants?[i]?.VerificationIdName == x.VerificationIdName }), "", new { @class = "form-control dealnet-input", id = "additional-verification-id" + (i + 1), Required = "required" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].VerificationIdName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].DealerInitial, new { @for = "additional-dealer-initial" + (i + 1) })
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].DealerInitial, new { @class = "form-control dealnet-input", id = "additional-dealer-initial" + (i + 1), placeholder = Resources.DealerInitial, Required = "required" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].DealerInitial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <!-- Additional Applicant Home Address-->
        <div id="mailing-address-different-add-app@(i+1)" class="form-group">
            <label for="mailing-address-checkbox-add-app@(i+1)" class="align-middle custom-checkbox">
                <input type="checkbox" class="dealnet-checkbox address-checkbox" id="mailing-address-checkbox-add-app@(i+1)" @if(Model?.AdditionalApplicants?[i]?.AddressInformation != null) { <text> checked</text> } data-section="mailing-address-add-app@(i+1)" />
                <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
                <span>@Resources.AdditionalApplicantAddressNotSameAsBorrower</span>
            </label>
        </div>
        <div id="mailing-address-add-app@(i+1)" style="display: none;">

            <h2 class="dealnet-middle-header no-margin-top">@Resources.AdditionalApplicantAddressInfo</h2>
            <!-- <div class="owner-info">
                                <a class="dealnet-info-link" onclick="useHomeOwnerAddress(@(i+1));">Use Home Owner address information</a>
                            </div>
            -->
            <div class="row address-info1">
                <div class="col-md-6 col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].AddressInformation.Street, new { @for = "additional-street-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].AddressInformation.Street, new { @class = "form-control dealnet-input", id = "additional-street-" + (i + 1), placeholder = Resources.StreetPlaceholder })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].AddressInformation.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].AddressInformation.UnitNumber, new { @for = "additional-unit_number-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].AddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", id = "additional-unit_number-" + (i + 1), placeholder = "12345" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].AddressInformation.UnitNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].AddressInformation.City, new { @for = "additional-locality-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].AddressInformation.City, new { @class = "form-control dealnet-input", id = "additional-locality-" + (i + 1), placeholder = Resources.Ottawa })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].AddressInformation.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row address-info2">
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].AddressInformation.Province, new { @for = "additional-administrative_area_level_1-" + (i + 1) })
                        <div class="control-group">
                            @Html.DropDownListFor(m => m.AdditionalApplicants[i].AddressInformation.Province,
                                                                                           (Model.ProvinceTaxRates).Select(x => new SelectListItem
                                                                                           {
                                                                                               Value = x.Province,
                                                                                               Text = x.Province,
                                                                                               Selected = Model.AdditionalApplicants?[i]?.AddressInformation?.Province == x.Province
                                                                                           }), "",
                                                                                           new { @class = "form-control dealnet-input", id = "additional-administrative_area_level_1-" + (i + 1) })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].AddressInformation.Province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].AddressInformation.PostalCode, new { @for = "additional-postal_code-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].AddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "additional-postal_code-" + (i + 1), placeholder = "12345" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].AddressInformation.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        <label>&nbsp;</label>
                        <div class="control-group">
                            <a href="#" class="action-link grey clear-address">
                                <svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg><span>@Resources.ClearAddress</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--End Additional Applicant Home Address-->
        <!--Living time-->
        <div id="living-time-add-app@(i+1)" class="form-group">
            <label for="living-time-checkbox-add-app@(i+1)" class="align-middle custom-checkbox">
                <input type="checkbox" class="dealnet-checkbox address-checkbox" id="living-time-checkbox-add-app@(i+1)" @if(Model?.AdditionalApplicants?[i]?.PreviousAddressInformation != null) { <text> checked</text> } data-section="previous-address-add-app@(i+1)" />
                <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
                <span>@Resources.LivedAtCurrentLessThan</span>
            </label>
        </div>
        <div id="previous-address-add-app@(i+1)">
            <h2 class="dealnet-middle-header address-info-label no-margin-top">@Resources.AdditionalApplicantPreviousAddressInformation</h2>
            <div class="row address-info1">
                <div class="col-md-6 col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @for = "additional-previous-street-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.Street, new { @class = "form-control dealnet-input", id = "additional-previous-street-" + (i + 1), placeholder = Resources.StreetPlaceholder })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @for = "additional-previous-unit_number-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", id = "additional-previous-unit_number-" + (i + 1), placeholder = "12345" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.City, new { @for = "additional-previous-locality-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.City, new { @class = "form-control dealnet-input", id = "additional-previous-locality-" + (i + 1), placeholder = Resources.Ottawa })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row address-info2">
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.Province, new { @for = "additional-previous-administrative_area_level_1-" + (i + 1) })
                        <div class="control-group">
                            @Html.DropDownListFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.Province,
                                                                                           (Model.ProvinceTaxRates).Select(x => new SelectListItem { Value = x.Province, Text = x.Province, Selected = Model.AdditionalApplicants?[i]?.PreviousAddressInformation?.Province == x.Province }), "",
                                                                                           new { @class = "form-control dealnet-input", id = "additional-previous-administrative_area_level_1-" + (i + 1) })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.Province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @for = "additional-previous-postal_code-" + (i + 1) })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "additional-previous-postal_code-" + (i + 1), placeholder = "12345" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].PreviousAddressInformation.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="form-group">
                        <label>&nbsp;</label>
                        <div class="control-group">
                            <a href="#" class="action-link grey clear-address">
                                <svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg><span>@Resources.ClearAddress</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--End Living time-->
        <!--Additional Applicant Information-->
        <div id="add-applicant-is-homeowner@(i+1)" class="form-group personal-info-section">
            <label for="add-applicant-checkbox@(i+1)" class="align-middle custom-checkbox">
                @Html.CheckBoxFor(m => m.AdditionalApplicants[i].IsHomeOwner, new { @class = "dealnet-checkbox check-homeowner", id = "add-applicant-checkbox" + (i + 1) })
                @*<input type="checkbox" class="dealnet-checkbox" id="add-applicant-checkbox@(i+1)" checked="checked"/>*@
                <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
                <span>@Resources.AdditionalIsHomeOwner</span>
            </label>
        </div>

        <!--Borrower Employment Information-->
        <div id="add@(i+1)-employment-info"
             @(Model.HomeOwner?.AddressInformation?.Province.ToUpper() != "QC" ? "class=hidden" : "") class="personal-info-section">

            <h2 class="dealnet-middle-header address-info-label no-margin-top">@Resources.AdditionalApplicant @Resources.EmploymentInformation</h2>
            <div class="row">
                <div class="col-md-2 col-sm-6 form-group">
                    @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus, new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-status" })
                        @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.EmploymentStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-6 form-group">
                    @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.IncomeType)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.AdditionalApplicants[i].EmploymentInformation.IncomeType, new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-income-type" })
                        @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.IncomeType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-12 form-group">
                    @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.AnnualSalary)
                    <div class="control-group">
                        <select class="form-control dealnet-input" name="@Html.NameFor(m => m.AdditionalApplicants[i].EmploymentInformation.AnnualSalary)" id="add@(i+1)-employment-annual">
                            <option value=""></option>
                            <option value="<20000" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.AnnualSalary == "<20000" ? "selected" : "")>@Resources.LessThan $20,000</option>
                            @for(var j = 20000; j < 200000; j += 15000)
                            {
                                var val = $"{j}-{j + 15000}";
                                <option value="@val" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.AnnualSalary == val ? "selected" : "")>$@($"{j:n0}") - $@($"{j + 15000:n0}")</option>
                            }
                            <option value="200000+" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.AnnualSalary == "200000+" ? "selected" : "")>$200,000+</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.AnnualSalary, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-12 form-group">
                    @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.HourlyRate)
                    <div class="control-group">
                        <select class="form-control dealnet-input" name="@Html.NameFor(m => m.AdditionalApplicants[i].EmploymentInformation.HourlyRate)" id="add@(i+1)-employment-hourly">
                            <option value=""></option>
                            <option value="<10" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.HourlyRate == "<10" ? "selected" : "")>@Resources.LessThan $10</option>
                            @for(var j = 10; j < 80; j += 5)
                            {
                                var val = $"{j}-{j + 5}";
                                <option value="@val" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.HourlyRate == val ? "selected" : "")>$@j - $@(j + 5)</option>
                            }
                            <option value="80+" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.HourlyRate == "80+" ? "selected" : "")>$80+</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.HourlyRate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-12 form-group">
                    <label>@Resources.LengthOfEmployment</label>
                    <div class="row control-group">
                        <div class="col-md-6 col-sm-6 col-xs-6">
                            <select name="@Html.NameFor(m => m.AdditionalApplicants[i].EmploymentInformation.YearsOfEmployment)" class="form-control dealnet-input" id="add@(i+1)-employment-years">
                                <option value="" @(string.IsNullOrEmpty(Model.AdditionalApplicants[i]?.EmploymentInformation?.YearsOfEmployment) ? "selected" : "")>@Resources.Year_s_</option>
                                @for(int j = 0; j < 10; j++)
                                {
                                    <option value="@j" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.YearsOfEmployment == j.ToString() ? "selected" : "")>@j</option>
                                }
                                <option value="10+" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.YearsOfEmployment == "10+" ? "selected" : "")>10+</option>
                            </select>
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.YearsOfEmployment, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-6">
                            <select name="@Html.NameFor(m => m.AdditionalApplicants[i].EmploymentInformation.MonthsOfEmployment)" class="form-control dealnet-input" id="add@(i+1)-employment-months" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.YearsOfEmployment == "10+" ? "disabled=disabled" : "")>
                                <option value="" @(string.IsNullOrEmpty(Model.AdditionalApplicants[i]?.EmploymentInformation?.MonthsOfEmployment) ? "selected" : "")>@Resources.Month_s_</option>
                                @for(int j = 0; j < 12; j++)
                                {
                                    <option value="@j" @(Model.AdditionalApplicants[i]?.EmploymentInformation?.MonthsOfEmployment == j.ToString() ? "selected" : "")>@j</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.MonthsOfEmployment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-6 form-group">
                    @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.EmploymentType)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.AdditionalApplicants[i].EmploymentInformation.EmploymentType, new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-emp-type" })
                        @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.EmploymentType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row" id="add@(i+1)-company-info-hold">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.JobTitle)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.JobTitle, new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-job-title" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.JobTitle, "", new { @class = "text-danger", data_bind = "validationMessage: jobTitle" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyName)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyName, new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-company-name" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyPhone)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyPhone, new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-company-phone" })
                            @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <div id="add@(i+1)-company-address-hold">
                <h3 class="dealnet-middle-header-2">@Resources.CompanyAddress</h3>
                <div class="row address-info1">
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Street)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Street, new { @class = "form-control dealnet-input", placeholder = Resources.StreetPlaceholder, id = $"add{i + 1}-employment-street", autocomplete = $"add{i + 1}-employment street-address" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Street, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2 col-lg-2">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.UnitNumber)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.UnitNumber, new { @class = "form-control dealnet-input", type = "text", placeholder = "12345", id = $"add{i + 1}-employment-unit" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.UnitNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.City)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.City, new { @class = "form-control dealnet-input", placeholder = Resources.Ottawa, id = $"add{i + 1}-employment-city", autocomplete = $"add{i + 1}-employment address-level2" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row address-info2">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Province)
                            <div class="control-group">
                                @Html.DropDownListFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Province, (Model.ProvinceTaxRates).Select(x => new SelectListItem
                                {
                                    Value = x.Province,
                                    Text = x.Province,
                                    Selected = Model.AdditionalApplicants[i]?.EmploymentInformation?.CompanyAddress?.Province == x.Province
                                }), "", new { @class = "form-control dealnet-input", id = $"add{i + 1}-employment-province", autocomplete = $"add{i + 1}-employment address-level1" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.Province, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.PostalCode)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.PostalCode, new { @class = "form-control dealnet-input postal-code", placeholder = "12345", id = $"add{i + 1}-employment-postal-code", autocomplete = $"add{i + 1}-employment postal-code" })
                                @Html.ValidationMessageFor(m => m.AdditionalApplicants[i].EmploymentInformation.CompanyAddress.PostalCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label>&nbsp;</label>
                            <div class="control-group">
                                <a href="#" class="action-link grey clear-address">
                                    <svg aria-hidden="true" class="icon icon-remove">
                                        <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use>
                                    </svg>
                                    <span>@Resources.ClearAddress</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--End Employment Information-->
        <!--Agreement section-->
        <div class="consents-checkbox-hold" id="agreement-checkbox1">
            <div class="dealnet-agrees form-group">
                <label class="align-middle custom-checkbox">
                    @Html.CheckBox("additional-owner-agrees", new { id = "additional-owner-agrees" })
                    <span class="checkbox-icon">
                        <svg aria-hidden="true" class="icon icon-checked">
                            <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use>
                        </svg>
                    </span>
                    <span class="mandatory-field">@Resources.AcknowledgeAndAgreementObtainCreditReport</span>
                </label>
                <div class="consents-links">
                    <a href="" class="action-link blue j-personal-data-used-modal">@Resources.HowIsMyPersonalDataUsed</a>
                    @Html.ActionLink(@Resources.PrivacyPolicy, "PrivacyPolicy", "Info", null, new { @class = "action-link blue", target = "_blank" })
                </div>
            </div>
        </div>
        <!--Agreement section-->
    </div>
}