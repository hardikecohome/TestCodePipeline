@model DealnetPortal.Web.Models.BasicInfoViewModel


<!--Borrower Information-->
<h2 class="dealnet-middle-header address-info-label">@Resources.BorrowerInformation</h2>
<!--scanlicence-button-->
@if(!ViewBag.IsMobileRequest)
{
    <div class="row scanlicence-button">
        <div class="col-md-12">
            <div class="scanlicence-hold">
                <button type="button" class="btn dealnet-button dealnet-success-button" id="owner-scan-button" data-toggle="modal" data-target="#camera-modal">
                    <svg aria-hidden="true" class="icon icon-scan-licence"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-scan-licence")"></use></svg>
                    <span>@Resources.ScanLicense</span>
                </button>
                <a href="#" class="scanlicence-info-link">
                    <svg aria-hidden="true" class="icon icon-info-grey"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-grey")"></use></svg>
                </a>
                <div class="scanlicence-info-text well well-info">
                    @Resources.TurnLicenseOver
                </div>
            </div>
            <span class="scanlicence-notify">@Resources.ScanAndFillAutomatically</span>
        </div>
    </div>
}
else
{
    <div class="row scanlicence-button">
        <div class="col-md-12">
            <div class="scanlicence-hold">
                <div class="file-upload btn dealnet-button dealnet-success-button" id="owner-scan-button">
                    <svg aria-hidden="true" class="icon icon-scan-licence"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-scan-licence")"></use></svg>
                    <span>@Resources.ScanLicense</span>
                    <input type="file" accept="image/*" class="upload" id="owner-upload-file" onchange="submitUpload(this, '@Url.Action("RecognizeDriverLicensePhoto", "NewRental")', 'first-name', 'last-name', 'birth-date', 'dl-number', 'street', 'locality', 'administrative_area_level_1', 'postal_code')" />
                </div>
                <a href="#" class="scanlicence-info-link">
                    <svg aria-hidden="true" class="icon icon-info-grey"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-grey")"></use></svg>
                </a>
                <div class="scanlicence-info-text well well-info">
                    @Resources.TurnLicenseOver
                </div>
            </div>
            <span class="scanlicence-notify">@Resources.ScanAndFillAutomatically</span>
        </div>
    </div>
}
<!--END scanlicence-button-->
<div class="owner-info">
    <div class="row">
        @Html.HiddenFor(m => m.HomeOwner.CustomerId)
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.FirstName, new { @for = "first-name" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.FirstName, new { @class = "form-control dealnet-input", id = "first-name", placeholder = Resources.FirstName })
                    @Html.ValidationMessageFor(m => m.HomeOwner.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.LastName, new { @for = "last-name" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.LastName, new { @class = "form-control dealnet-input", id = "last-name", placeholder = Resources.LastName })
                    @Html.ValidationMessageFor(m => m.HomeOwner.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.BirthDate, new { @for = "birth-date" })
                <div class="control-group dob-group">
                    <div class="dob-input-hold">
                        @Html.TextBoxFor(m => m.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "check-age dob-input", id = "birth-date", placeholder = Resources.DateFormat, data_val_over18 = "" })
                    </div>
                    @{
                        int month = 0;
                        int day = 0;
                        int year = 0;
                        if(Model.HomeOwner != null && Model.HomeOwner.BirthDate.HasValue)
                        {
                            day = Model.HomeOwner.BirthDate.Value.Day;
                            month = Model.HomeOwner.BirthDate.Value.Month;
                            year = Model.HomeOwner.BirthDate.Value.Year;
                        }
                    }
                    <div class="dealnet-input no-border">
                        <div class="custom-select">
                            <select class="form-control dealnet-input dob-month" required="required">
                                <option value="">mm</option>
                                @for(var i = 1; i < 13; i++)
                                {
                                    <option value="@i" @(month == i ? "selected=selected" : "" )>@i</option>
                                }
                            </select>
                            <span class="caret"></span>
                        </div>
                        <div class="custom-select">
                            <select class="form-control dealnet-input dob-day" required="required">
                                <option value="">dd</option>
                                @for(var i = 1; i < 32; i++)
                                {
                                    <option value="@i" @(day == i ? "selected=selected" : "" )>@i</option>
                                }
                            </select>
                            <span class="caret"></span>
                        </div>
                        <div class="custom-select last">
                            <select class="form-control dealnet-input dob-year" required="required">
                                <option value="">yyyy</option>
                                @{ var yearLess18 = DateTime.Now.Year - 18;}
                                @for(var i = yearLess18; i >= 1900; i--)
                                {
                                    <option value="@i" @(year == i ? "selected=selected" : "" )>@i</option>
                                }
                            </select>
                            <span class="caret"></span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(m => m.HomeOwner.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-lg-4 hidden">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.DriverLicenseNumber, new { @for = "dl-number" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.DriverLicenseNumber, new { @class = "form-control dealnet-input", id = "dl-number", placeholder = Resources.DriverLicenseNumber })
                    @Html.ValidationMessageFor(m => m.HomeOwner.DriverLicenseNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <!--New Code to map new contract-->
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.VerificationIdName, new { @for = "verification-id" })
                <div class="control-group">
                    @Html.DropDownListFor(m => m.HomeOwner.VerificationIdName, (Model.VarificationIds).Select(x => new SelectListItem { Value = x.VerificationIdName, Text = x.VerificationIdName }), "", new { @class = "form-control dealnet-input", id = "verification-id", Required = "required" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.VerificationIdName, "", new { @class = "text-danger" })
                </div>

            </div>

        </div>

        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.DealerInitial, new { @for = "dealer-initial" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.DealerInitial, new { @class = "form-control dealnet-input", id = "dealer-initial", placeholder = Resources.DealerInitial, Required = "required" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.DealerInitial, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>
<!--END Borrower Information-->
<!--Instalation Address-->
<h2 class="dealnet-middle-header">@Resources.InstallationAddressInformation</h2>
<div class="row">
    <div class="col-md-12 get-location-section">
        <div class="btn dealnet-button dealnet-success-button" onclick="autodetectAddress()">
            <svg aria-hidden="true" class="icon icon-get-location"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-get-location")"></use></svg>
            <span>@Resources.GetMyLocation</span>
        </div>
    </div>
</div>
<div class="row address-info1">
    <div class="col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.HomeOwner.AddressInformation.Street)
            <div class="control-group">
                @Html.TextBoxFor(m => m.HomeOwner.AddressInformation.Street, new { @class = "form-control dealnet-input", id = "street", placeholder = Resources.StreetPlaceholder, data_bind = "value: installationAddress.street" })
                @Html.ValidationMessageFor(m => m.HomeOwner.AddressInformation.Street, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-2 col-lg-2">
        <div class="form-group">
            @Html.LabelFor(m => m.HomeOwner.AddressInformation.UnitNumber)
            <div class="control-group">
                @Html.TextBoxFor(m => m.HomeOwner.AddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", id = "unit_number", placeholder = "12345", data_bind = "value: installationAddress.unit" })
                @Html.ValidationMessageFor(m => m.HomeOwner.AddressInformation.UnitNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-4">
        <div class="form-group">
            @Html.LabelFor(m => m.HomeOwner.AddressInformation.City)
            <div class="control-group">
                @Html.TextBoxFor(m => m.HomeOwner.AddressInformation.City, new { @class = "form-control dealnet-input", id = "locality", placeholder = Resources.Ottawa, data_bind = "value: installationAddress.city" })
                @Html.ValidationMessageFor(m => m.HomeOwner.AddressInformation.City, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
<div class="row address-info2">
    <div class="col-md-4 col-lg-4">
        <div class="form-group">
            @Html.LabelFor(m => m.HomeOwner.AddressInformation.Province)
            @Html.DropDownListFor(m => m.HomeOwner.AddressInformation.Province, (Model.ProvinceTaxRates).Select(x => new SelectListItem { Value = x.Province, Text = x.Province, Selected = Model.HomeOwner?.AddressInformation?.Province == x.Province }), "",
                                                                                              new { @class = "form-control dealnet-input", id = "administrative_area_level_1", data_bind = "value: installationAddress.province" })
            @Html.ValidationMessageFor(m => m.HomeOwner.AddressInformation.Province, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-4 col-lg-4">
        <div class="form-group">
            @Html.LabelFor(m => m.HomeOwner.AddressInformation.PostalCode)
            <div class="control-group">
                @Html.TextBoxFor(m => m.HomeOwner.AddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "postal_code", placeholder = "12345", data_bind = "value: installationAddress.postalCode" })
                @Html.ValidationMessageFor(m => m.HomeOwner.AddressInformation.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-4">
        <a href="#" class="dealnet-disabled-text clear-address" data-bind="click: installationAddress.clearAddress">
            <svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg><span>@Resources.ClearAddress</span>
        </a>
    </div>
</div>
<!--END Instalation Address-->
<!--Living time-->
<div id="living-time" class="form-group">
    <label for="living-time-checkbox" class="align-middle custom-checkbox">
        <input type="checkbox" class="dealnet-checkbox address-checkbox" id="living-time-checkbox" @if(Model?.HomeOwner?.PreviousAddressInformation != null) { <text> checked</text> } data-section="previous-address" />
        <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
        <span>@Resources.LivedAtCurrentLessThan</span>
    </label>
</div>
<div id="previous-address">

    <h2 class="dealnet-middle-header address-info-label no-margin-top">@Resources.PreviousAddressInformation</h2>
    <div class="row address-info1">
        <div class="col-md-6 col-lg-6">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.PreviousAddressInformation.Street, new { @for = "previous_street" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.PreviousAddressInformation.Street, new { @class = "form-control dealnet-input", id = "previous_street", placeholder = Resources.StreetPlaceholder, disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.PreviousAddressInformation.Street, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-2 col-lg-2">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.PreviousAddressInformation.UnitNumber, new { @for = "previous_unit_number" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.PreviousAddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", id = "previous_unit_number", placeholder = "12345", disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.PreviousAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.PreviousAddressInformation.City, new { @for = "previous_locality" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.PreviousAddressInformation.City, new { @class = "form-control dealnet-input", id = "previous_locality", placeholder = Resources.Ottawa, disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.PreviousAddressInformation.City, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row address-info2">
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.PreviousAddressInformation.Province, new { @for = "previous_administrative_area_level_1" })
                <div class="control-group">
                    @Html.DropDownListFor(m => m.HomeOwner.PreviousAddressInformation.Province, (Model.ProvinceTaxRates).Select(x => new SelectListItem { Value = x.Province, Text = x.Province, Selected = Model.HomeOwner?.PreviousAddressInformation?.Province == x.Province }), "",
                                                                                                      new { @class = "form-control dealnet-input", id = "previous_administrative_area_level_1", disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.PreviousAddressInformation.Province, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.PreviousAddressInformation.PostalCode, new { @for = "previous_postal_code" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.PreviousAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "previous_postal_code", placeholder = "12345", disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.PreviousAddressInformation.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <a href="#" class="dealnet-disabled-text clear-address">
                <svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg><span>@Resources.ClearAddress</span>
            </a>
        </div>
    </div>
</div>
<!--End Living time-->
<!--Mailing Address-->
<div id="mailing-address-different" class="form-group">
    <label for="mailing-address-checkbox" class="align-middle custom-checkbox">
        <input type="checkbox" class="dealnet-checkbox address-checkbox" id="mailing-address-checkbox" @if(Model?.HomeOwner?.MailingAddressInformation != null) { <text> checked</text> } data-section="mailing-address" />
        <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
        <span>@Resources.MailingAddressNotSameAsInstallation</span>
    </label>
</div>
<div id="mailing-address">

    <h2 class="dealnet-middle-header address-info-label no-margin-top">@Resources.MailingAddress</h2>
    <div class="row address-info1">
        <div class="col-md-6 col-lg-6">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.MailingAddressInformation.Street, new { @for = "mailing_street" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.MailingAddressInformation.Street, new { @class = "form-control dealnet-input", id = "mailing_street", placeholder = Resources.StreetPlaceholder, disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.MailingAddressInformation.Street, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-2 col-lg-2">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.MailingAddressInformation.UnitNumber, new { @for = "mailing_unit_number" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "form-control dealnet-input", type = "text", id = "mailing_unit_number", placeholder = "12345", disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.MailingAddressInformation.UnitNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.MailingAddressInformation.City, new { @for = "mailing_locality" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.MailingAddressInformation.City, new { @class = "form-control dealnet-input", id = "mailing_locality", placeholder = Resources.Ottawa, disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.MailingAddressInformation.City, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row address-info2">
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.MailingAddressInformation.Province, new { @for = "mailing_administrative_area_level_1" })
                <div class="control-group">
                    @Html.DropDownListFor(m => m.HomeOwner.MailingAddressInformation.Province,
                                                                                                      (Model.ProvinceTaxRates).Select(x => new SelectListItem { Value = x.Province, Text = x.Province, Selected = Model.HomeOwner?.MailingAddressInformation?.Province == x.Province }), "",
                                                                                                      new { @class = "form-control dealnet-input", id = "mailing_administrative_area_level_1", disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.MailingAddressInformation.Province, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.HomeOwner.MailingAddressInformation.PostalCode, new { @for = "mailing_postal_code" })
                <div class="control-group">
                    @Html.TextBoxFor(m => m.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "mailing_postal_code", placeholder = "12345", disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.HomeOwner.MailingAddressInformation.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 col-lg-4">
            <a href="#" class="dealnet-disabled-text clear-address">
                <svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg><span>@Resources.ClearAddress</span>
            </a>
        </div>
    </div>
</div>
<!--End Mailing Address-->
<!--Home Owner Information-->
<div id="borrower-is-homeowner" class="form-group">
    <label for="homeowner-checkbox" class="align-middle custom-checkbox">
        @Html.CheckBoxFor(m => m.HomeOwner.IsHomeOwner, new { @class = "dealnet-checkbox check-homeowner", id = "homeowner-checkbox" })
        @*<input type="checkbox" class="dealnet-checkbox" id="homeowner-checkbox" checked="checked"/>*@
        <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
        <span>@Resources.BorrowerIsHomeOwner</span>
        @Html.ValidationMessageFor(m => m.HomeOwner, "", new { @class = "text-danger" })
    </label>
</div>
<!--Home Owner Information-->
<!--Borrower Employment Information-->
<div id="employment-info" data-bind="visible: showEmployment">
    <div data-bind="with: homeOwner.employment">
        <h2 class="dealnet-middle-header address-info-label no-margin-top">@Resources.BorrowerEmploymentInformation</h2>
        <div class="row">
            <div class="col-md-2 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.EmploymentStatus)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.HomeOwner.EmploymentInformation.EmploymentStatus, new { @class = "form-control dealnet-input", id = "ho-employment-status", data_bind = "value: status, enable: $parent.showEmployment, attr:{required:$parent.showEmployment}" })
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.EmploymentStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-6" data-bind="visible: isEmployed">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.IncomeType)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.HomeOwner.EmploymentInformation.IncomeType, new { @class = "form-control dealnet-input", id = "ho-employment-income-type", data_bind = "value: incomeType, enable: isEmployed" })
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.IncomeType, "", new { @class = "text-danger", data_bind = "validationMessage: incomeType" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-12" data-bind="visible: showAnnualSalary">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.AnnualSalary)
                    <div class="control-group">
                        <select class="form-control dealnet-input" name="@Html.NameFor(m => m.HomeOwner.EmploymentInformation.AnnualSalary)" data-bind="value: annualSalary, enable: showAnnualSalary">
                            <option value=""></option>
                            <option value="<20000" @(Model.HomeOwner?.EmploymentInformation?.AnnualSalary == "<20000" ? "selected" : "")>@Resources.LessThan $20,000</option>
                            @for (var i = 20000; i < 200000; i += 15000)
                            {
                                var val = $"{i}-{i + 15000}";
                                <option value="@val" @(Model.HomeOwner?.EmploymentInformation?.AnnualSalary == val ? "selected" : "")>$@($"{i:n0}") - $@($"{i + 15000:n0}")</option>
                            }
                            <option value="200000" @(Model.HomeOwner?.EmploymentInformation?.AnnualSalary == "200000" ? "selected" : "")>$200,000+</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.AnnualSalary, "", new { @class = "text-danger", data_bind = "validationMessage: annualSalary" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-12" data-bind="visible: showHourlyRate">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.HourlyRate)
                    <div class="control-group">
                        <select class="form-control dealnet-input" name="@Html.NameFor(m => m.HomeOwner.EmploymentInformation.HourlyRate)" data-bind="value: hourlyRate, enable: showHourlyRate">
                            <option vlaue=""></option>
                            <option value="<10" @(Model.HomeOwner?.EmploymentInformation?.HourlyRate == "<10" ? "selected" : "")>@Resources.LessThan $10</option>
                            @for (var i = 10; i < 80; i += 5)
                            {
                                var val = $"{i}-{i + 5}";
                                <option value="@val" @(Model.HomeOwner?.EmploymentInformation?.HourlyRate == val ? "selected" : "")>$@i - $@(i + 5)</option>
                            }
                            <option value="80+" @(Model.HomeOwner?.EmploymentInformation?.HourlyRate == "80+" ? "selected" : "")>$80+</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.HourlyRate, "", new { @class = "text-danger", data_bind = "validationMessage: hourlyRate" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-12" data-bind="visible: isEmployedOrSelfEmployed">
                <div class="form-group">
                    <label>@Resources.LengthOfEmployment</label>
                    <div class="row control-group">
                        <div class="col-md-6 col-sm-6 col-xs-6">
                            <select name="@Html.NameFor(m => m.HomeOwner.EmploymentInformation.YearsOfEmployment)" class="form-control dealnet-input" data-bind="value: yearsOfEmploy, enable: isEmployedOrSelfEmployed">
                                <option value="" @(string.IsNullOrEmpty(Model.HomeOwner?.EmploymentInformation?.YearsOfEmployment) ? "selected" : "")>years</option>
                                @for (int j = 0; j < 10; j++)
                                {
                                    <option value="@j" @(Model.HomeOwner?.EmploymentInformation?.YearsOfEmployment == j.ToString() ? "selected" : "")>@j</option>
                                }
                                <option value="10+" @(Model.HomeOwner?.EmploymentInformation?.YearsOfEmployment == "10+" ? "selected" : "")>10+</option>
                            </select>
                            @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.YearsOfEmployment, "", new { @class = "text-danger", data_bind = "validationMessage: yearsOfEmploy" })
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-6">
                            <select name="@Html.NameFor(m => m.HomeOwner.EmploymentInformation.MonthsOfEmployment)" class="form-control dealnet-input" data-bind="value: monthsOfEmploy, enable: enableMonths">
                                <option value="" @(string.IsNullOrEmpty(Model.HomeOwner?.EmploymentInformation?.MonthsOfEmployment) ? "selected" : "")>months</option>
                                @for(int j = 0; j < 12; j++)
                                {
                                    <option value="@j" @(Model.HomeOwner?.EmploymentInformation?.MonthsOfEmployment == j.ToString() ? "selected" : "")>@j</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.MonthsOfEmployment, "", new { @class = "text-danger", data_bind = "validationMessage: monthsOfEmploy" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-6" data-bind="visible: isEmployed">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.EmploymentType)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.HomeOwner.EmploymentInformation.EmploymentType, new { @class = "form-control dealnet-input", data_bind = "value: type, enable: isEmployed" })
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.EmploymentType, "", new { @class = "text-danger", data_bind = "validationMessage: type" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row" data-bind="visible: isEmployedOrSelfEmployed">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.JobTitle)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.JobTitle, new { @class = "form-control dealnet-input", data_bind = "value: jobTitle, enable: isEmployedOrSelfEmployed, attr:{required:isEmployedOrSelfEmployed}" })
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.JobTitle, "", new { @class = "text-danger", data_bind = "validationMessage: jobTitle" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyName)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.CompanyName, new { @class = "form-control dealnet-input", data_bind = "value: companyName, enable: isEmployedOrSelfEmployed, attr:{required:isEmployedOrSelfEmployed}" })
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyName, "", new { @class = "text-danger", data_bind = "validationMessage: companyName" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyPhone)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.CompanyPhone, new { @class = "form-control dealnet-input", data_bind = "value:companyPhone, enable: isEmployedOrSelfEmployed, attr:{required:isEmployedOrSelfEmployed}" })
                        @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyPhone, "", new { @class = "text-danger", data_bind = "validationMessage:companyPhone" })
                    </div>
                </div>

            </div>
        </div>
        <div data-bind="visible: isEmployedOrSelfEmployed">
            <h3 class="dealnet-middle-header-2">@Resources.CompanyAddress</h3>
            <div data-bind="with: address">
                <div class="row address-info1">
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.Street)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.Street, new { @class = "form-control dealnet-input", data_bind = "value: street, enable: $parent.isEmployedOrSelfEmployed && $root.showEmployment", placeholder = Resources.StreetPlaceholder, id = "ho-employment-street" })
                                @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.Street, "", new { @class = "text-danger", data_bind = "validationMessage: street" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2 col-lg-2">
                        <div class="form-group">
                            @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber, new { @class = "form-control dealnet-input", data_bind = "value:unit, enable: $parent.isEmployedOrSelfEmployed && $root.showEmployment", type = "text", placeholder = "12345", id = "ho-employment-unit" })
                                @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.UnitNumber, "", new { @class = "text-danger", data_bind = "validationMessage: unit" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.City)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.City, new { @class = "form-control dealnet-input", data_bind = "value: city, enable: $parent.isEmployedOrSelfEmployed && $root.showEmployment", placeholder = Resources.Ottawa, id = "ho-employment-city" })
                                @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.City, "", new { @class = "text-danger", data_bind = "validationMessage: city" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row address-info2">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.Province)
                            <div class="control-group">
                                @Html.DropDownListFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.Province, (Model.ProvinceTaxRates).Select(x => new SelectListItem
                                {
                                    Value = x.Province,
                                    Text = x.Province,
                                    Selected = Model.HomeOwner?.EmploymentInformation?.CompanyAddress?.Province == x.Province
                                }), "", new { @class = "form-control dealnet-input", data_bind = "value:province, enable:$parent.isEmployedOrSelfEmployed && $root.showEmployment", id = "ho-employment-province" })
                                @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.Province, "", new { @class = "text-danger", data_bind = "validationMessage: province" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode)
                            <div class="control-group">
                                @Html.TextBoxFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode, new { @class = "form-control dealnet-input", data_bind = "textInput: postalCode, enable:$parent.isEmployedOrSelfEmployed && $root.showEmployment", placeholder = "12345", id = "ho-employment-postalCode" })
                                @Html.ValidationMessageFor(m => m.HomeOwner.EmploymentInformation.CompanyAddress.PostalCode, "", new { @class = "text-danger", data_bind = "validationMessage: postalCode" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <a href="#" class="dealnet-disabled-text clear-address" data-bind="click: clearAddress">
                            <svg aria-hidden="true" class="icon icon-remove">
                                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use>
                            </svg>
                            <span>@Resources.ClearAddress</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--End Employment Information-->
<!--Agreement section-->
<div class="consents-checkbox-hold" id="agreement-checkbox">
    <div class="dealnet-agrees form-group">
        <label class="align-middle custom-checkbox">
            @Html.CheckBox("home-owner-agrees", new { id = "home-owner-agrees" })
            <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
            <span class="mandatory-field">@Resources.AcknowledgeAndAgreementObtainCreditReport</span>
        </label>
        <div class="consents-links">
            <a href="" class="dealnet-info-link j-personal-data-used-modal">@Resources.HowIsMyPersonalDataUsed</a>
            @Html.ActionLink(@Resources.PrivacyPolicy, "PrivacyPolicy", "Info", null, new { @class = "dealnet-info-link", target = "_blank" })
        </div>
    </div>
</div>
@*<div id="agreement" class="form-group">
    <label for="agreement-checkbox" class="align-middle custom-checkbox">
    <input type="checkbox" class="dealnet-checkbox" id="agreement-checkbox"/>
    <span class="checkbox-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
    <span>Agrees to send his/her personal data to credit check</span>
    </label>
    </div>*@
<!--Agreement section-->