@model DealnetPortal.Web.Models.Dealer.DealerOnboardingViewModel

<div class="panel customer-loan-form-panel active-panel" id="company-panel">
    <div class="panel-heading">
        <span class="panel-step">1</span>
        <h3 class="panel-title dealnet-middle-header">@Resources.CompanyInformation</h3>
        <span class="arrow"><i class="glyphicon"></i></span>
        <span class="passed-step-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.FullLegalName, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.FullLegalName, new { @class = "form-control dealnet-input", id = "full-legal-name" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.FullLegalName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.OperatingName, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.OperatingName, new { @class = "form-control dealnet-input", id = "operating-name" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.OperatingName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <h4 class="heading-bordered">@Resources.Contacts</h4>
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.Phone, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.Phone, new { @class = "form-control dealnet-input", id = "company-phone" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.EmailAddress, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.EmailAddress, new { @class = "form-control dealnet-input", id = "company-email-address" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-clear-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.Website)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.Website, new { @class = "form-control dealnet-input", placeholder = "www.websitename.com", id = "company-website", data_rule_validurl = "true" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.Website, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <h4 class="heading-bordered">@Resources.Address</h4>
        <div class="row address-container">
            <div class="col-md-6 col-sm-9">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.CompanyAddress.Street, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.CompanyAddress.Street, new { id = "company-street", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.CompanyAddress.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.CompanyAddress.UnitNumber)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.CompanyAddress.UnitNumber, new { id = "company-unit", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.CompanyAddress.UnitNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-clear-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.CompanyAddress.City, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.CompanyAddress.City, new { id = "company-city", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.CompanyAddress.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-clear-lg-4 col-clear-md-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.CompanyAddress.Province, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.DropDownListFor(m => m.CompanyInfo.CompanyAddress.Province,
                       (Model.DictionariesData.ProvinceTaxRates).Select(p => new SelectListItem
                       {
                           Value = p.Province,
                           Text = p.Province,
                           Selected = Model.CompanyInfo.CompanyAddress.Province == p.Province
                       }),
                       "",
                       new { id = "company-province", @class = "form-control  dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.CompanyAddress.Province, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.CompanyAddress.PostalCode, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.CompanyAddress.PostalCode, new { id = "company-postal", @class = "form-control dealnet-input postal-code" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.CompanyAddress.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    <div class="dealnet-label hidden-xs">&nbsp;</div>
                    <div class="control-group flex-centered-text">
                        <a href="#" class="dealnet-disabled-text clear-address">
                            <svg aria-hidden="true" class="icon icon-remove">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use>
                            </svg>
                            <span>@Resources.ClearAddress</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <h4 class="heading-bordered">@Resources.Other</h4>
        <div class="row label-row hidden-xs">
            <div class="col-md-2 col-sm-3">
                @Html.LabelFor(m => m.CompanyInfo.BusinessType, new { @class = "mandatory-field" })
            </div>
            <div class="col-md-2 col-sm-3">
                @Html.LabelFor(m => m.CompanyInfo.YearsInBusiness, new { @class = "mandatory-field" })
            </div>
            <div class="col-md-2 col-sm-3">
                @Html.LabelFor(m => m.CompanyInfo.NumberOfInstallers)
            </div>
            <div class="col-md-2 col-sm-3">
                @Html.LabelFor(m => m.CompanyInfo.NumberOfSales)
            </div>
        </div>
        <div class="row">
            <div class="col-md-2 col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.BusinessType, new { @class = "mandatory-field visible-xs" })
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.BusinessType, "-" + Resources.NotSelected + "-", new { @class = "form-control", id = "company-type" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.BusinessType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.YearsInBusiness, new { @class = "mandatory-field visible-xs" })
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.YearsInBusiness, "-" + Resources.NotSelected + "-", new { @class = "form-control", id = "years-in-business" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.YearsInBusiness, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.NumberOfInstallers, new { @class = "visible-xs" })
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.NumberOfInstallers, "-" + Resources.NotSelected + "-", new { id = "installers", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.NumberOfInstallers, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.NumberOfInstallers, new { @class = "visible-xs" })
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.NumberOfSales, "-" + Resources.NotSelected + "-", new { id = "sales", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.NumberOfSales, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row label-row">
            <div class="col-md-4 col-sm-6">
                <label for="" class="mandatory-field">@Resources.WhatProvincesDoBusiness</label>
            </div>
            <div class="col-md-8 col-sm-6">
                <div class="dealnet-label hidden-xs">&nbsp;</div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    <div class="control-group">
                        @Html.DropDownList("province-select",
                       (Model.DictionariesData.ProvinceTaxRates).Select(p => new SelectListItem
                       {
                           Value = p.Province,
                           Text = p.Province
                       }),
                       Resources.ChooseProvinces,
                       new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-8 col-sm-6">
                <div class="form-group">
                    <ul id="province-list" class="customer-needs-list tags-list"></ul>
                </div>
            </div>
        </div>
        <div id="work-province-error" class="well danger-well hidden">
            <svg aria-hidden="true" class="icon icon-error">
                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use>
            </svg>
            @Resources.SelectOneProvince
        </div>
        <div class="save-and-resume-hold">
            <a class="save-and-resume dealnet-info-link">
                <span class="icon-hold">
                    <svg aria-hidden="true" class="icon icon-save">
                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-save")"></use>
                    </svg>
                </span>
                <span>@Resources.SaveEntireAppAndResumeLater</span>
            </a>
        </div>
    </div>
</div>
