@using DealnetPortal.Api.Models.Contract
@model DealnetPortal.Web.Models.Dealer.DealerOnboardingViewModel

<div class="panel customer-loan-form-panel active-panel">
    <div class="panel-heading">
        <span class="panel-step">1</span>
        <h3 class="panel-title dealnet-middle-header">@Resources.CompanyInformation</h3>
        <span class="arrow"><i class="glyphicon"></i></span>
        <span class="passed-step-icon"><svg aria-hidden="true" class="icon icon-checked"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use></svg></span>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.FullLegalName, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.FullLegalName, new { @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.FullLegalName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.OperatingName, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.OperatingName, new { @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.OperatingName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <h4 class="heading-bordered">@Resources.Contacts</h4>
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.Phone, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.Phone, new { @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.EmailAddress, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.EmailAddress, new { @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-clear-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.Website)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.Website, new { @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.Website, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <h4 class="heading-bordered">@Resources.Address</h4>
        <div class="row address-container">
            <div class="col-md-6 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.AddressInfo.Street, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.AddressInfo.Street, new { id = "company-street", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.AddressInfo.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.AddressInfo.UnitNumber)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.AddressInfo.UnitNumber, new { id = "company-unit", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.AddressInfo.UnitNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.AddressInfo.City, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.AddressInfo.City, new { id = "company-city", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.AddressInfo.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-clear-lg-4 col-clear-md-4 col-clear-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.AddressInfo.Province, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.DropDownListFor(m => m.CompanyInfo.AddressInfo.Province, (Model.DictionariesData.ProvinceTaxRates).Select(p => new SelectListItem { Value = p.Province, Text = p.Province }), new { id = "company-province", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.AddressInfo.Province, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.AddressInfo.PostalCode, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.CompanyInfo.AddressInfo.PostalCode, new { id = "company-postal", @class = "form-control dealnet-input" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.AddressInfo.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-clear-sm-6">
                <div class="form-group">
                    <div class="dealnet-label hidden-xs hidden-sm">&nbsp;</div>
                    <div class="control-group flex-centered-text">
                        <a href="#" class="dealnet-disabled-text clear-address">
                            <svg aria-hidden="true" class="icon icon-remove">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use>
                            </svg>
                            <span>@Resources.ClearAddress</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <h4 class="heading-bordered">@Resources.Other</h4>
        <div class="row">
            <div class="col-md-2 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.BusinessType, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.BusinessType, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.BusinessType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.YearsInBusiness, new { @class = "mandatory-field" })
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.YearsInBusiness, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.YearsInBusiness, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.NumberOfInstallers)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.NumberOfInstallers, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.NumberOfInstallers, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CompanyInfo.NumberOfSales)
                    <div class="control-group">
                        @Html.EnumDropDownListFor(m => m.CompanyInfo.NumberOfSales, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CompanyInfo.NumberOfSales, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <div class="form-group">
                    <label for="" class="mandatory-field">@Resources.WhatProvincesDoBusiness</label>
                    <div class="control-group">
                        @Html.DropDownList("province-select", (Model.DictionariesData.ProvinceTaxRates).Select(p => new SelectListItem { Value = p.Province, Text = p.Province }), Resources.ChooseProvince, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="dealnet-label">&nbsp;</div>
                <ul id="province-list" class="customer-needs-list tags-list">
                    @for (var i = 0; i < Model.CompanyInfo.Provinces.Count; i++)
                    {
                    <li id="province-@i-index">
                        @Html.HiddenFor(m => m.CompanyInfo.Provinces[i], new {id=$"province-{i}" }) <span id="province-@i-display">@Model.CompanyInfo.Provinces[i]</span>
                        <span id="@Model.CompanyInfo.Provinces[i]" class="icon-remove">
                            <svg aria-hidden="true" class="icon icon-remove-cross">
                                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove-cross")"></use>
                            </svg>
                        </span>
                    </li>
                    }
                </ul>
                @Html.ValidationMessageFor(m => m.CompanyInfo.Provinces, "", new { @class = "text-danger", id="work-porvince-error" })
            </div>
        </div>
        <a class="save-and-resume pull-right">
            <svg aria-hidden="true" class="icon icon-save">
                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-save")"></use>
            </svg>
            <span>@Resources.SaveAndResumeLater</span>
        </a>
    </div>
</div>

<script type="text/html" id="province-template">
    <li id="province-0-index">
        <input id="province-0" name="Provinces[0]" type="hidden" value="" /><span id="province-0-display"></span>
        <span class="icon-remove">
            <svg aria-hidden="true" class="icon icon-remove-cross">
                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove-cross")"></use>
            </svg>
        </span>
    </li>
</script>