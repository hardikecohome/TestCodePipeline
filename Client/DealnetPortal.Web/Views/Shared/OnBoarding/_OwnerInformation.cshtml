@model DealnetPortal.Web.Models.Dealer.DealerOnboardingViewModel

<div class="panel customer-loan-form-panel panel-collapsed" id="owner-info-section">
    <div class="panel-heading">
        <span class="panel-step">2</span>
        <h3 class="panel-title dealnet-middle-header">@Resources.PrincipalOwnerInformation</h3>
        <span class="arrow">
            <i class="glyphicon"></i>
        </span>
        <span class="passed-step-icon">
            <svg aria-hidden="true" class="icon icon-checked">
                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-checked")"></use>
            </svg>
        </span>
    </div>
    <div class="panel-body">
        <div id="owner0-container">
            <div class="row">
                @Html.HiddenFor(m => m.Owners[0].OwnerId)
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].FirstName, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].FirstName, null, new { @class = "form-control dealnet-input", id = "owner0-firstname" })
                            @Html.ValidationMessageFor(m => m.Owners[0].FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].LastName, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].LastName, null, new { @class = "form-control dealnet-input", id = "owner0-lastname" })
                            @Html.ValidationMessageFor(m => m.Owners[0].LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 col-clear-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].BirthDate, new { @for = "owner0-birthdate", @class = "mandatory-field" })
                        <div class="control-group dob-group">
                            <div class="dob-input-hold">
                                @Html.TextBoxFor(m => m.Owners[0].BirthDate, new { @class = "dob-input check-age", id = "owner0-birthdate", data_val_date = "" })
                                </div>
                                @{
                                    int month = 0;
                                    int day = 0;
                                    int year = 0;
                                    if (Model.Owners[0] != null && Model.Owners[0].BirthDate.HasValue)
                                    {
                                        day = Model.Owners[0].BirthDate.Value.Day;
                                        month = Model.Owners[0].BirthDate.Value.Month;
                                        year = Model.Owners[0].BirthDate.Value.Year;
                                    }
                                }
                                <div class="dealnet-input no-border">
                                    <select class="form-control dealnet-input dob-month">
                                        <option value="">mm</option>
                                        @for (var i = 1; i < 13; i++)
                                        {
                                            <option value="@i" @(month == i ? "selected=selected" : "")>@i</option>
                                        }
                                    </select>
                                    <select class="form-control dealnet-input dob-day">
                                        <option value="">dd</option>
                                        @for (var i = 1; i < 32; i++)
                                        {
                                            <option value="@i" @(day == i ? "selected=selected" : "")>@i</option>
                                        }
                                    </select>
                                    <select class="form-control dealnet-input dob-year">
                                        <option value="">yyyy</option>
                                        @{ var yearLess18 = DateTime.Now.Year - 18;}
                                        @for (var i = yearLess18; i >= 1900; i--)
                                        {
                                            <option value="@i" @(year == i ? "selected=selected" : "")>@i</option>
                                        }
                                    </select>
                                </div>

                                @Html.ValidationMessageFor(m => m.Owners[0].BirthDate, "", new { @class = "text-danger" })
                            </div>
                    </div>
                </div>
            </div>
            <h4 class="heading-bordered">@Resources.Contacts</h4>
            <div class="row">
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].HomePhone)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].HomePhone, null, new { @class = "form-control dealnet-input", id = "owner0-homephone" })
                            @Html.ValidationMessageFor(m => m.Owners[0].HomePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].CellPhone, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].CellPhone, null, new { @class = "form-control dealnet-input", id = "owner0-cellphone" })
                            @Html.ValidationMessageFor(m => m.Owners[0].CellPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 col-clear-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].EmailAddress, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].EmailAddress, null, new { @class = "form-control dealnet-input", id = "owner0-email" })
                            @Html.ValidationMessageFor(m => m.Owners[0].EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <h4 class="heading-bordered">@Resources.Address</h4>
            <div class="row address-container">
                <div class="col-md-6 col-sm-9">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].Address.Street, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].Address.Street, new { @class = "form-control dealnet-input", id = "owner0-street" })
                            @Html.ValidationMessageFor(m => m.Owners[0].Address.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].Address.UnitNumber)
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].Address.UnitNumber, new { @class = "form-control dealnet-input", id = "owner0-unit" })
                            @Html.ValidationMessageFor(m => m.Owners[0].Address.UnitNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].Address.City, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].Address.City, new { @class = "form-control dealnet-input", id = "owner0-city" })
                            @Html.ValidationMessageFor(m => m.Owners[0].Address.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 col-clear-lg-4 col-clear-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].Address.Province, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.DropDownListFor(m => m.Owners[0].Address.Province,
                           (Model.DictionariesData.ProvinceTaxRates)
                           .Select(p => new SelectListItem
                           {
                               Value = p.Province,
                               Text = p.Province,
                               Selected = Model.Owners[0].Address.Province == p.Province
                           }), "", new { @class = "form-control dealnet-input", id = "owner0-province" })
                            @Html.ValidationMessageFor(m => m.Owners[0].Address.Province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].Address.PostalCode, new { @class = "mandatory-field" })
                        <div class="control-group">
                            @Html.TextBoxFor(m => m.Owners[0].Address.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "owner0-postalcode" })
                            @Html.ValidationMessageFor(m => m.Owners[0].Address.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6">
                    <div class="form-group">
                        <div class="dealnet-label hidden-xs">&nbsp;</div>
                        <div class="control-group flex-centered-text">
                            <a href="#" class="dealnet-disabled-text clear-address">
                                <svg aria-hidden="true" class="icon icon-remove">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use>
                                </svg>
                                <span>@Resources.ClearAddress</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <h4 class="heading-bordered">@Resources.Ownership</h4>
            <div class="row">
                <div class="col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Owners[0].PercentOwnership, new { @class = "mandatory-field" })
                        <div class="control-group has-addon-left">
                            <div class="control-group-addon placeholder-text">%</div>
                            @Html.TextBoxFor(m => m.Owners[0].PercentOwnership, null, new { @class = "form-control form-control-not-clear dealnet-input", type = "text", id = "owner0-percentage" })
                            @Html.ValidationMessageFor(m => m.Owners[0].PercentOwnership, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-8 col-sm-6 hidden" id="owner-notify">
                    <div class="form-group">
                        <div class="dealnet-label hidden-xs">&nbsp;</div>
                        <div class="control-group owner-notify">
                            <div class="info-text-success flex-centered-text">
                                <svg aria-hidden="true" class="icon icon-info-well">
                                    <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use>
                                </svg>
                                <span>@Resources.OwnershipPercentage</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div id="additional-owners">
            @for (int i = 1; i < Model.Owners.Count; i++)
            {
                <div id="owner@(i)-container">
                    <div class="dealnet-middle-header  additional-owner-header">
                        <span>@Resources.AdditionalOwnerInformation</span>
                        <span class="additional-owner-remove" id="owner@(i)-remove">
                            <i class="glyphicon glyphicon-remove"></i>
                        </span>
                    </div>
                    <div class="row">
                        @Html.HiddenFor(m => m.Owners[i].OwnerId)
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].FirstName, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].FirstName, null, new { @class = "form-control dealnet-input", id = "owner" + i + "-firstname" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].LastName, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].LastName, null, new { @class = "form-control dealnet-input", id = "owner" + i + "-lastname" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6 col-clear-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].BirthDate, new { @for = "owner" + i + "-birthdate", @class = "mandatory-field" })
                                <div class="control-group dob-group">
                                    <div class="dob-input-hold">
                                        @Html.TextBoxFor(m => m.Owners[i].BirthDate, new { @class = "dob-input check-age", id = "owner" + i + "-birthdate", data_val_date = "" })
                                        </div>
                                        @if (Model.Owners[i] != null && Model.Owners[i].BirthDate.HasValue)
                                        {
                                            day = Model.Owners[i].BirthDate.Value.Day;
                                            month = Model.Owners[i].BirthDate.Value.Month;
                                            year = Model.Owners[i].BirthDate.Value.Year;
                                        }
                                        else
                                        {
                                            day = 0;
                                            month = 0;
                                            year = 0;
                                        }
                                        <div class="dealnet-input no-border">
                                            <select class="form-control dealnet-input dob-month">
                                                <option value="">mm</option>
                                                @for (var j = 1; j < 13; j++)
                                                {
                                                    <option value="@j" @(month == j ? "selected=selected" : "")>@j</option>
                                                }
                                            </select>
                                            <select class="form-control dealnet-input dob-day">
                                                <option value="">dd</option>
                                                @for (var j = 1; j < 32; j++)
                                                {
                                                    <option value="@j" @(day == j ? "selected=selected" : "")>@j</option>
                                                }
                                            </select>
                                            <select class="form-control dealnet-input dob-year">
                                                <option value="">yyyy</option>
                                                @for (var j = yearLess18; j >= 1900; j--)
                                                {
                                                    <option value="@j" @(year == j ? "selected=selected" : "")>@j</option>
                                                }
                                            </select>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.Owners[i].BirthDate, "", new { @class = "text-danger" })
                                    </div>
                            </div>
                        </div>
                    </div>
                    <h4 class="heading-bordered">@Resources.Contacts</h4>
                    <div class="row">
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].HomePhone)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].HomePhone, null, new { @class = "form-control dealnet-input", id = "owner" + i + "-homephone" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].HomePhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].CellPhone, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].CellPhone, null, new { @class = "form-control dealnet-input", id = "owner" + i + "-cellphone" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].CellPhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6 col-clear-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].EmailAddress, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].EmailAddress, null, new { @class = "form-control dealnet-input", id = "owner" + i + "-email" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].EmailAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <h4 class="heading-bordered">@Resources.Address</h4>
                    <div class="row address-container">
                        <div class="col-md-6 col-sm-9">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].Address.Street, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].Address.Street, new { @class = "form-control dealnet-input", id = "owner" + i + "-street" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].Address.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].Address.UnitNumber)
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].Address.UnitNumber, new { @class = "form-control dealnet-input", id = "owner" + i + "-unit" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].Address.UnitNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].Address.City, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].Address.City, new { @class = "form-control dealnet-input", id = "owner" + i + "-city" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].Address.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6 col-clear-lg-4 col-clear-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].Address.Province, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.DropDownListFor(m => m.Owners[i].Address.Province, (Model.DictionariesData.ProvinceTaxRates).Select(p => new SelectListItem { Value = p.Province, Text = p.Province, Selected = Model.Owners[i].Address.Province == p.Province }), "", new { @class = "form-control dealnet-input", id = "owner" + i + "-province" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].Address.Province, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].Address.PostalCode, new { @class = "mandatory-field" })
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.Owners[i].Address.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "owner" + i + "-postalcode" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].Address.PostalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6">
                            <div class="form-group">
                                <div class="dealnet-label hidden-xs">&nbsp;</div>
                                <div class="control-group flex-centered-text">
                                    <a href="#" class="dealnet-disabled-text clear-address">
                                        <svg aria-hidden="true" class="icon icon-remove">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use>
                                        </svg>
                                        <span>@Resources.ClearAddress</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <h4 class="heading-bordered">@Resources.Ownership</h4>
                    <div class="row">
                        <div class="col-sm-6 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Owners[i].PercentOwnership, new { @class = "mandatory-field" })
                                <div class="control-group has-addon-left">
                                    <div class="control-group-addon placeholder-text">%</div>
                                    @Html.TextBoxFor(m => m.Owners[i].PercentOwnership, null, new { @class = "form-control form-control-not-clear dealnet-input", type = "text", id = "owner" + i + "-percentage" })
                                    @Html.ValidationMessageFor(m => m.Owners[i].PercentOwnership, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-8 hidden" id="owner-notify">
                            <div class="form-group">
                                <div class="dealnet-label hidden-xs">&nbsp;</div>
                                <div class="control-group owner-notify">
                                    <div class="info-text-success flex-centered-text">
                                        <span class="icon-hold">
                                            <svg aria-hidden="true" class="icon icon-info-well">
                                                <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use>
                                            </svg>
                                        </span>
                                        <span>@Resources.OwnershipPercentage</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                                                }
        </div>
        <div class="action-link-holder flex-centered-text hidden" id="add-additional-div">
            <a class="action-link mandatory-field" id="add-additional">
                <svg aria-hidden="true" class="icon icon-add-app">
                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-add-app")"></use>
                </svg>
                <span>@Resources.AddAdditionalOwner</span>
            </a>
            <div class="well danger-well hidden" id="additional-owner-warning">
                <svg aria-hidden="true" class="icon icon-info-well">
                    <use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use>
                </svg>
                @Resources.OwnershipSubmit
            </div>
            <div class="well danger-well hidden" id="over-100">
                <svg aria-hidden="true" class="icon icon-info-well">
                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-info-well")"></use>
                </svg>
                <span>@Resources.TotalOwnershipNotExceed100</span>
            </div>
        </div>
        <div class="save-and-resume-hold">
            <a class="save-and-resume dealnet-info-link">
                <span class="icon-hold">
                    <svg aria-hidden="true" class="icon icon-save">
                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-save")"></use>
                    </svg>
                </span>
                <span>@Resources.SaveEntireAppAndResumeLater</span>
            </a>
        </div>
    </div>
</div>

@Html.Partial("OnBoarding/_AdditionalOwnerTemplate", Model)