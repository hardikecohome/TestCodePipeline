@using DealnetPortal.Api.Models.Contract
@model DealnetPortal.Web.Models.EquipmentInformation.EquipmentInformationViewModelNew
@{
    var equipment = (IList<EquipmentTypeDTO>) ViewBag.EquipmentTypes;
}

@for(var i = 0; i < Model.NewEquipment.Count; i++)
{
    var selected = equipment.FirstOrDefault(e => e.Type == Model.NewEquipment[i].Type);
    var subTypes = selected?.SubTypes?.Select(sub => new SelectListItem
    {
        Text = sub.Description,
        Value = sub.Id.ToString(),
        Selected = Model?.NewEquipment[i]?.EquipmentSubTypeId == sub.Id
    });

    <div id="new-equipment-@(i)" class="new-equipment new-equipment-wrap">
        @Html.HiddenFor(m => m.NewEquipment[i].Id)
        <div class="dealnet-middle-header equipment-number-header">
            <span class="equipment-number">№@(i + 1)</span>
            @if(i > 0)
            {
                <div class="additional-remove" id="addequipment-remove-@(i)">
                    <i class="glyphicon glyphicon-remove"></i>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.NewEquipment[i].Type)
                    @Html.DropDownListFor(m => m.NewEquipment[i].Type,
                            equipment.Select(x => new SelectListItem
                                                  {
                                                          Value = x.Type,
                                                          Text = x.Description,
                                                          Selected = Model?.NewEquipment != null && Model.NewEquipment[i]?.Type == x.Type
                                                  }),
                            new {@class = "form-control equipment-select"})
                </div>
            </div>
            <div class="col-md-2 hidden sub-type-col">
                <div class="form-group">
                    @Html.LabelFor(m => m.NewEquipment[i].EquipmentSubTypeId)
                    @Html.DropDownListFor(m => m.NewEquipment[i].EquipmentSubTypeId,
                            subTypes ?? Enumerable.Empty<SelectListItem>(),
                            new { @class="form-control sub-type-select" })
                    @Html.ValidationMessageFor(m => m.NewEquipment[i].EquipmentSubTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xs-12 col-md-6 description-col">
                <div class="form-group">
                    @Html.LabelFor(m => m.NewEquipment[i].Description)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.NewEquipment[i].Description, new
                        {
                            @class = "form-control dealnet-input",
                            placeholder = Resources.DescriptionWithMakeModel
                        })
                        @Html.ValidationMessageFor(m => m.NewEquipment[i].Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-xs-12 equipment-cost-col">
                <div class="form-group">
                    @Html.LabelFor(m => m.NewEquipment[i].Cost)
                    <div class="control-group has-addon-left">
                        <div class="control-group-addon">$</div>
                        @Html.TextBoxFor(m => m.NewEquipment[i].Cost, new
                        {
                            @class = "form-control dealnet-input equipment-cost",
                            type = "text",
                            placeholder = Resources.CostWithTaxes
                        })
                        @Html.ValidationMessageFor(m => m.NewEquipment[i].Cost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-xs-12 monthly-cost-col">
                <div class="form-group">
                    @Html.LabelFor(m => m.NewEquipment[i].MonthlyCost)
                    <div class="control-group has-addon-left">
                        <div class="control-group-addon">$</div>
                        @Html.TextBoxFor(m => m.NewEquipment[i].MonthlyCost, new
                        {
                            placeholder = Resources.MonthlyCost,
                            type = "text",
                            @class = "form-control dealnet-input monthly-cost"
                        })
                        @Html.ValidationMessageFor(m => m.NewEquipment[i].MonthlyCost, "", new { @class = "text-danger" })
                        <span class="text-warning"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-xs-12 estimated-retail-col hidden">
                <div class="form-group">
                    @Html.LabelFor(m => m.NewEquipment[i].EstimatedRetailCost)
                    <div class="control-group has-addon-left">
                        <div class="control-group-addon">$</div>
                        @Html.TextBoxFor(m => m.NewEquipment[i].EstimatedRetailCost, new
                        {
                            type = "text",
                            disabled = "disabled",
                            @class = "form-control dealnet-input estimated-retail"
                        })
                        @Html.ValidationMessageFor(m => m.NewEquipment[i].EstimatedRetailCost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}