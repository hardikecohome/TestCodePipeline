@using DealnetPortal.Web.Models.Enumeration
@model DealnetPortal.Web.Models.SendEmailsViewModel


<div class="modal fade editor-modal modal-wide esignature-modal" tabindex="-1" role="dialog" id="esignature-modal">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h2 class="modal-title text-left dealnet-large-header ">@Resources.SendContractForEsignature</h2>
            </div>
            <div class="modal-body">
                <div class="sent-contract-section">
                    @using (Html.BeginForm("SummaryAndConfirmation", "NewRental", FormMethod.Post, new { id = "send-mails-form", @class = "clearfix" }))
                    {
                        @Html.HiddenFor(m => m.ContractId)
                        @Html.HiddenFor(m => m.HomeOwnerId)
                        @Html.HiddenFor(m => m.HomeOwnerFullName)
                        @Html.AntiForgeryToken()
                        <div class="well rental-summary-emails well-info">
                            <div class="rental-summary-inner">
                                <p class="summary-emails-header">
                                    <svg aria-hidden="true" class="icon icon-email"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-email")"></use></svg>
                                    @Resources.PleaseEnterEmailsAndClickSend
                                </p>
                                <p>@Resources.InvitesForSigningWillBeSent</p>

                                <div class="row form-group">
                                    <div class="col-md-5 applicant-col">
                                        <div class="dealnet-label">@Resources.Borrower</div>
                                        <div class="control-group text-middle-group text-semibold"><div class="text-hold">@Model.HomeOwnerFullName</div></div>
                                    </div>
                                    <div class="col-md-7">
                                        <!--@Html.LabelFor(m => m.BorrowerEmail)-->
                                        <label for="">@Resources.Email</label>
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BorrowerEmail, new { @class = "dealnet-input form-control", type = "email", placeholder = Resources.Email })
                                            @Html.ValidationMessageFor(m => m.BorrowerEmail, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                @if (Model.AdditionalApplicantsEmails != null)
                                {
                                    for (var i = 0; i < Model.AdditionalApplicantsEmails.Length; i++)
                                    {
                                        <div class="row form-group">
                                            <div class="col-md-5 applicant-col">
                                                <div class="dealnet-label">@Resources.AdditionalApplicant</div>
                                                <div class="control-group text-middle-group text-semibold"><div class="text-hold">@Model.AdditionalApplicantsEmails[i].CustomerName</div></div>
                                            </div>
                                            <div class="col-md-7">
                                                <label for="">@Resources.Email</label>
                                                <div class="control-group">
                                                    @Html.HiddenFor(m => m.AdditionalApplicantsEmails[i].CustomerId)
                                                    @Html.TextBoxFor(m => m.AdditionalApplicantsEmails[i].Email, new { id = "addApplicantEmail" + i, @class = "dealnet-input form-control", type = "email", placeholder = Resources.Email })
                                                    @Html.ValidationMessageFor(m => m.AdditionalApplicantsEmails[i].Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                <div class="row form-group mb-25">
                                    <div class="col-md-5 applicant-col">
                                        <div class="dealnet-label">@Resources.SalesRep</div>
                                        <div class="control-group text-middle-group text-semibold"><div class="text-hold">@Model.SalesRep</div></div>
                                    </div>
                                    <div class="col-md-7">
                                        <label for="">@Resources.Email</label>
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.SalesRepEmail, new { id = "salesRepEmail", @class = "dealnet-input form-control", type = "email", placeholder = Resources.Email })
                                            @Html.ValidationMessageFor(m => m.SalesRepEmail, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group text-center clearfix">
                                    <button type="button" class="btn dealnet-button dealnet-success-button" id="send-email-button" onclick="submitEmailsAsync('@Url.Action("SendContractEmails", "NewRental")', $('#send-mails-form'));">
                                        @Resources.SendEmails
                                    </button>
                                </div>

                                <div class="sent-email-msg text-center" style="display: none;">
                                    <h4 class="align-middle"><svg aria-hidden="true" class="icon icon-success"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-success")"></use></svg>
                                        <span>@Resources.InvitesWereSentToEmails</span>
                                    </h4>
                                    @Resources.PlatformIsPreparingCheck
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>