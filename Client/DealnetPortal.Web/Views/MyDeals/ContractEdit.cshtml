@using System
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@using DealnetPortal.Api.Common.Enumeration
@using DealnetPortal.Api.Common.Helpers
@using DealnetPortal.Api.Models.Contract
@using DealnetPortal.Web.Models
@model DealnetPortal.Web.Models.ContractEditViewModel
<div id="label-steps">
	@Html.ActionLink("MyDeals", "Index", "MyDeals", null, new { @class = "dealnet-action-link" }) > <div class="dealnet-action-link">Contract #@(Model.AdditionalInfo.TransactionId ?? Model.BasicInfo.ContractId.ToString())</div>  >
</div>

<div class="form-container">
	<div class="form-section">
		<div class="dealnet-large-header">Contract #@(Model.AdditionalInfo.TransactionId ?? Model.BasicInfo.ContractId.ToString())</div>
        <br />
		<div class="documents-container">
			<h3 class="dealnet-section-title">Funding Checklist</h3>
			<div class="tabs tabs-vertical row responsive-tabs">
				<div class="col-md-6">
					<ul class="nav nav-pills nav-stacked documents-pills">
					    @for (var i = 0; i < Model.UploadDocumentsInfo.DocumentTypes.Count; i++)
                        {
                            var document = Model.UploadDocumentsInfo.ExistingDocuments.FirstOrDefault(x => x.DocumentTypeId.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value);
                            <li class="@(i == 0 ? "active" : "") @(document != null ? "uploaded" : "") documents-pills-item tab-container-@(i+1)">
                                <a href="#tab@(i+1)" class="documents-pills-link" aria-controls="tab@(i+1)" role="tab" data-toggle="tab">
                                    @if (Model.UploadDocumentsInfo.DocumentTypes[i].Value == "7")
                                    {
                                        <text>Other Documents</text>
                                    }
                                    else
                                    {
                                       @(Model.UploadDocumentsInfo.DocumentTypes[i].Text)
                                    }                                    
                                </a>
                            </li>
                        }
					</ul>
				</div>
				<div class="col-md-6">
					<div class="tab-content doc-tab-content documents-pills" role="tablist" >
					@for (var i = 0; i < Model.UploadDocumentsInfo.DocumentTypes.Count; i++)
                    {
                        if (Model.UploadDocumentsInfo.DocumentTypes[i].Value == "7")
                        {
                            continue;
                        }
                        var document = Model.UploadDocumentsInfo.ExistingDocuments.FirstOrDefault(x => x.DocumentTypeId.ToString() == Model.UploadDocumentsInfo.DocumentTypes[i].Value);
                        <div class="@(i == 0 ? "active" : "") @(document != null ? "uploaded" : "") documents-pills-item tab-container-@(i+1)">
                            <a href="#tab@(i+1)" class="documents-pills-link" aria-controls="tab@(i+1)" role="tab" data-toggle="tab">
                                @(Model.UploadDocumentsInfo.DocumentTypes[i].Text)
                            </a>
                        </div>
					    <div role="tabpanel" class="tab-pane @(i == 0 ? "active" : "")" id="tab@(i + 1)">
					        @using (Html.BeginForm("UploadDocument", "MyDeals", FormMethod.Post, new {enctype = "multipart/form-data", data_container = "tab-container-" + (i + 1)}))
					        {
					            <h3 class="document-pane-header">
					                @(Model.UploadDocumentsInfo.DocumentTypes[i].Text)
					            </h3>
					            <div class="well danger-well error-descr collapse">
					                <svg aria-hidden="true" class="icon icon-error"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-error")"></use></svg>
					                <span class="error-message"></span>
					            </div>
					            <div class="documents-list">
					                <div class="document-item block-item">
					                    <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
					                    <span class="document-naming">@(document?.DocumentName)</span>
					                </div>
					            </div>
					            <div class="progress-container collapse">
					                <div class="progress">
					                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
					                </div>
					                <div class="progress-bar-value text-center">0%</div>
					                <a href="#" class="clear-data-link"><svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg></a>
					            </div>
                                @Html.AntiForgeryToken()
                                @Html.Hidden("OperationGuid")
                                @Html.HiddenFor(m => m.BasicInfo.ContractId, new {Name = "ContractId"})
					            @Html.HiddenFor(m => m.UploadDocumentsInfo.DocumentTypes[i].Value, new {Name = "DocumentTypeId"})
					            <div class="form-group">
					                <div class="file-upload btn dealnet-button dealnet-success-button">
					                    <span>Upload</span>
					                    <input type="file" name="File" class="upload main-document-upload"/>
					                </div>
					            </div>
					        }
					    </div>
					}
						<!------------------------------------------------->

						<div class="@(Model.UploadDocumentsInfo.ExistingDocuments.Any(x => x.DocumentTypeId == 7) ? "uploaded" : "") documents-pills-item tab-container-7">
							<a href="#tab7" class="documents-pills-link" aria-controls="tab7" role="tab" data-toggle="tab">
								Other Documents
							</a>
						</div>
						<div role="tabpanel" class="tab-pane" id="tab7">
							<h3 class="document-pane-header">
								Other Documents
							</h3>
							<div class="documents-list" id="other-documents-list">
							    @foreach (var document in Model.UploadDocumentsInfo.ExistingDocuments.Where(x => x.DocumentTypeId == 7))
							    {
							        using (Html.BeginForm("UploadDocument", "MyDeals", FormMethod.Post, new {enctype = "multipart/form-data", id = "other-document-template"}))
							        {
							            @Html.AntiForgeryToken()
							            @Html.Hidden("OperationGuid")
							            @Html.HiddenFor(m => m.BasicInfo.ContractId, new {Name = "ContractId"})
							            @Html.Hidden("DocumentTypeId", 7)
							            <input type="hidden" name="Id" value="@document.DocumentId"/>
							            <div class="well danger-well error-descr collapse">
							                <svg aria-hidden="true" class="icon icon-error"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-error")"></use></svg>
							                <span class="error-message"></span>
							            </div>
							            <div class="document-item block-item">
							                <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
							                <span class="document-naming">@document.DocumentName</span>
                                            @Html.Hidden("DocumentName", document.DocumentName)
							                <a class="upload-doc-link file-upload" href="#">
							                    <svg aria-hidden="true" class="icon icon-upload"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-upload")"></use></svg>
							                    Reupload
                                                <input type="file" name="File" class="upload uploaded-other-document-input"/>
                                            </a>
							            </div>
							            <div class="progress-container collapse">
							                <div class="progress">
							                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
							                </div>
							                <div class="progress-bar-value text-center">0%</div>
							                <a href="#" class="clear-data-link"><svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg></a>
							            </div>
							            <hr>
							        }
							    }
                            </div>
							<div class="form-group">
							    <div class="control">
							        <input type="text" placeholder="Name of a document" class="form-control" id="other-documents-name">
							    </div>
                                <div class="collapse" id="empty-document-name-message">
                                    <span class="text-danger">Name of a document can't be empty</span>
                                </div>
								<div class="file-upload btn dealnet-button dealnet-success-button" id="other-documents-upload-button">
									<span>Upload</span>
									<input type="file" name="File" class="upload" id="other-documents-upload"/>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

            <div class="hidden">
                @using (Html.BeginForm("UploadDocument", "MyDeals", FormMethod.Post, new { enctype = "multipart/form-data", id = "other-document-template" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("OperationGuid")
                    @Html.HiddenFor(m => m.BasicInfo.ContractId, new { Name = "ContractId" })
                    @Html.Hidden("DocumentTypeId", 7)
                    <input type="hidden" name="Id"/>
                    <div class="well danger-well error-descr collapse">
                        <svg aria-hidden="true" class="icon icon-error"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-error")"></use></svg>
                        <span class="error-message"></span>
                    </div>
                    <div class="document-item block-item">
                        <svg aria-hidden="true" class="icon icon-pdf"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-pdf")"></use></svg>
                        <span class="document-naming"></span>
                        @Html.Hidden("DocumentName")
                        <a class="upload-doc-link file-upload" href="#">
                            <svg aria-hidden="true" class="icon icon-upload"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-upload")"></use></svg>
                            Reupload
                        </a>
                    </div>
                    <div class="progress-container collapse">
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
                        </div>
                        <div class="progress-bar-value text-center">0%</div>
                        <a href="#" class="clear-data-link"><svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg></a>
                    </div>
                    <hr>
                }
            </div>
            @using (Html.BeginForm("CancelDocumentUpload", "AsyncCancellation", FormMethod.Post, new {id = "cancel-upload-form"}))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("operationGuid")
            }
		</div>
	</div>
	<hr>
	<div class="form-section">
	    @if (Model.BasicInfo.SubDealers?.Any() ?? false)
        {
	        <div class="row credit-check-info-hold">
	            <div class="col-md-6 grid-column">
	                <div class="dealnet-credit-check-section">
	                    <div class="dealnet-section-title">Sub-Dealer</div>
	                    <div class="form-group">
	                        <div class="row">
	                            <label for="" class="dealnet-field-caption col-xs-6">Dealer Name</label>
	                            <div class="dealnet-field-holder col-xs-6">
	                                <div class="control-group">
	                                    @(Model.BasicInfo.SubDealers.FirstOrDefault(x => x.Id == Model.BasicInfo.SubmittingDealerId)?.DisplayName)
	                                </div>
	                            </div>
	                        </div>
	                    </div>
	                </div>
	            </div>
	        </div>
	    }
        <h3 class="dealnet-section-title">Deal Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#deal-info-form'), $('#deal-info-section-modal'), false); $('#deal-info-modal').modal();">Edit</a></h3>
		<div class="row credit-check-info-hold no-top-margin">
			<div class="col-md-6 col-md-push-6 grid-column">
				<div class="dealnet-credit-check-section">
				    @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
				    {
				        <div class="form-group">
				            <div class="row">
				                <label class="dealnet-field-caption col-xs-6">TOTAL VALUE</label>
				                <div class="dealnet-field-holder col-xs-6">
				                    <div class="control-group">
				                        $ @($"{Model.LoanCalculatorOutput.TotalBorowingCost:0.00}")
				                    </div>
				                </div>
				            </div>
				        </div>
				    }
                    @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "deal-info-form" }))
                    {
				        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
                        @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment)
                        @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
                        @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
                        @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
                        @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)
                        if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.EquipmentInfo.RequestedTerm, new {@class = "dealnet-field-caption col-xs-6"})
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.EquipmentInfo.RequestedTerm, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="row">
                                    @Html.LabelFor(m => m.EquipmentInfo.LoanTerm, new {@class = "dealnet-field-caption col-xs-6"})
                                    <div class="dealnet-field-holder col-xs-6">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.EquipmentInfo.LoanTerm, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
                        }
                        <div class="form-group">
				            <div class="row">
				                @Html.LabelFor(m => m.EquipmentInfo.SalesRep, new { @class = "dealnet-field-caption col-xs-6" })
				                <div class="dealnet-field-holder col-xs-6">
				                    <div class="control-group">
				                        @Html.TextBoxFor(m => m.EquipmentInfo.SalesRep, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
				                    </div>
				                </div>
				            </div>
				        </div>
				    }
                </div>
			</div>
			<div class="col-md-6 col-md-pull-6 grid-column">
				<div class="dealnet-credit-check-section">
					<div class="form-group">
					    <div class="row">
					        @Html.LabelFor(m => m.AdditionalInfo.ContractState, new { @class = "dealnet-field-caption col-xs-6" })
					        <div class="dealnet-field-holder col-xs-6">
					            <div class="control-group">
					                @Html.EnumDropDownListFor(m => m.AdditionalInfo.ContractState, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
					            </div>
					        </div>
					    </div>
					</div>
					<div class="form-group">
						<div class="row">
							@Html.LabelFor(m => m.EquipmentInfo.AgreementType, new { @class = "dealnet-field-caption col-xs-6" })
							<div class="dealnet-field-holder col-xs-6">
							    <div class="control-group">
							        @Html.EnumDropDownListFor(m => m.EquipmentInfo.AgreementType, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
							    </div>
							</div>
						</div>
					</div>
					<div class="form-group">
						<div class="row">
							@Html.LabelFor(m => m.AdditionalInfo.LastUpdateTime, new { @class = "dealnet-field-caption col-xs-6" })
							<div class="dealnet-field-holder col-xs-6">
							    <div class="control-group">
							        @Html.TextBoxFor(m => m.AdditionalInfo.LastUpdateTime, @"{0:MM'/'dd'/'yyyy}", new { @readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
							    </div>
							</div>
						</div>
					</div>
					<div class="form-group">
						<div class="row">
							<label class="dealnet-field-caption col-xs-6">Type of Equipment</label>
							<div class="dealnet-field-holder col-xs-6">
								<div class="control-group">
									@(Model.EquipmentInfo?.NewEquipment?.Select(eq => eq.Type).ConcatWithComma())
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<hr>
	<div class="form-section">
		<div class="row">

		@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "basic-info-form", @class="grid-parent"}))
		{
		    @Html.AntiForgeryToken()
		    @Html.HiddenFor(m => m.BasicInfo.ContractId)
            @Html.HiddenFor(m => m.BasicInfo.HomeOwner.CustomerId)
            @Html.HiddenFor(m => m.BasicInfo.SubmittingDealerId)
			<div class="credit-check-info-hold fit-to-next-grid">
		    <div class="col-md-6 grid-column">
		        <div class="dealnet-credit-check-section" id="home-owner-section">
		            <h3 class="dealnet-section-title">Home Owner Information</h3>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.FirstName, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.FirstName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.LastName, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.LastName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>

		            <div class="form-group">
		                <div class="row">
		                    @Html.Label("", "Date of Birth", new {@class = "dealnet-field-caption col-xs-6"})
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group date-group">
		                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.BirthDate, @"{0:MM'/'dd'/'yyyy}", new {@class = "dealnet-disabled-input", @readonly = "readonly", data_val_date = "Date must be in range 1900 - Today", id = ""})
		                        </div>
		                    </div>
		                </div>
		            </div>

                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.DriverLicenseNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>
		        </div>
		    </div>
		    <div class="col-md-6 grid-column">
		        <div class="dealnet-credit-check-section" id="address-section">
		            <h3 class="dealnet-section-title">Address Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#address-section'), $('#address-section-modal'), false); $('#address-modal').modal();">Edit</a>
		            </h3>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>
		            <div class="form-group">
		                <div class="row">
		                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new {@class = "dealnet-field-caption col-xs-6"})
		                    <div class="dealnet-field-holder col-xs-6">
		                        <div class="control-group">
		                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = ""})
		                        </div>
		                    </div>
		                </div>
		            </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.ResidenceType, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                <div class="control-group">
                                    @Html.EnumDropDownListFor(m => m.BasicInfo.HomeOwner.AddressInformation.ResidenceType, null, new { @readonly = "readonly", @class = "dealnet-disabled-input form-control", id = "" })
                                </div>
                            </div>
                        </div>
                    </div>
		        </div>
		    </div>
		    @if (Model.BasicInfo.HomeOwner.MailingAddressInformation != null)
		    {
                <div class="col-md-6 grid-column">
		            <div class="dealnet-credit-check-section"  id="mailing-address-section">
		                <h3 class="dealnet-section-title">Mailing Address <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#mailing-address-section'), $('#mailing-address-section-modal'), false); $('#mailing-address-modal').modal();">Edit</a>
		                </h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.Label("", "Mailing Address", new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new { @readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>
		            </div>
		        </div>
		    }
			</div>
		}
		<div class="credit-check-info-hold">
			<div class="col-md-6 grid-column">
            @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "contact-info-form" }))
            {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
                    <div class="dealnet-credit-check-section" id="contact-info-section">
                        @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                        <h3 class="dealnet-section-title">Contact Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#contact-info-section'), $('#contact-info-section-modal'), false); $('#contact-info-modal').modal();">Edit</a>
                        </h3>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "dealnet-field-caption col-xs-6"})
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "", type = "email"})
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    <div class="control-group">
                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            }
			</div>
		</div>
        </div>
	</div>

    @if (Model.ContactAndPaymentInfo.CoBorrowersContactInfo != null && Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Any())
    {
        <div class="clearfix form-section">
            <div class="row">
                <div class="credit-check-info-hold">
                    @for (var i = 0; i < Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
                    {
                        using (Html.BeginForm(null, null, FormMethod.Post, new { id = "additional-basic-info-form-" + (i + 1), @class = "credit-check-info-hold" }))
                        {
	                        <hr style="clear: both">
                            <input type="hidden" name="BasicInfo.AdditionalApplicants.Index" value="@i" />
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.BasicInfo.ContractId)
                            @Html.HiddenFor(m => m.BasicInfo.AdditionalApplicants[i].CustomerId)
                            @Html.HiddenFor(m => m.BasicInfo.SubmittingDealerId)

                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="additional@(i + 1)-section">
                                    <h3 class="dealnet-section-title">Additional Applicant</h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].FirstName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].LastName, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.Label("", "Date of Birth", new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group date-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].BirthDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "dealnet-disabled-input", @readonly = "readonly", id = "", data_val_date = "Date must be in range 1900 - Today" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].DriverLicenseNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="additional-mailing-address-section-@(i + 1)">
                                    <h3 class="dealnet-section-title">
                                        Mailing Address <a href="#" onclick="copyFormData($('#additional-mailing-address-section-@(i + 1)'), $('#additional-mailing-address-section-modal-@(i + 1)'), false); $('#additional-mailing-address-modal-@(i + 1)').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.Label("", "Mailing Address", new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption col-xs-6"})
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@readonly = "readonly", @class = "dealnet-disabled-input postal-code", id = ""})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.ResidenceType, new { @class = "dealnet-field-caption col-xs-6" })
                                            <div class="dealnet-field-holder col-xs-6">
                                                <div class="control-group">
                                                    @Html.EnumDropDownListFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.ResidenceType, null, new { @readonly = "readonly", @class = "dealnet-disabled-input form-control", id = "" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        using (Html.BeginForm(null, null, FormMethod.Post, new { id = "contact-info-coborrowers-form-" + (i + 1), @class = "credit-check-info-hold" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
                            <div class="col-md-6 grid-column">
                                <div class="dealnet-credit-check-section" id="contact-info-section@(i + 1)-coborrower">
                                    @Html.HiddenFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CustomerId)
                                    <h3 class="dealnet-section-title">
                                        Contact Information <a href="#" onclick="copyFormData($('#contact-info-section@(i + 1)-coborrower'), $('#contact-info-section@(i + 1)-coborrower-modal'), false); $('#contact-info-coborrower@(i + 1)-modal').modal();" class="dealnet-section-edit-link pull-right">Edit</a>
                                    </h3>
                                    <div class="form-group">
                                        <div class="row">
                                            <label class="dealnet-field-caption col-xs-6">Home Phone</label>
                                            <div class="dealnet-field-holder col-xs-6">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone,
                                                    new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <label class="dealnet-field-caption col-xs-6">Cell Phone</label>
                                            <div class="dealnet-field-holder col-xs-6">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone,
                                                    new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <label class="dealnet-field-caption col-xs-6">Business Phone</label>
                                            <div class="dealnet-field-holder col-xs-6">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone,
                                                    new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <label class="dealnet-field-caption col-xs-6">Email Address</label>
                                            <div class="dealnet-field-holder col-xs-6">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress,
                                                    new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

            </div>
        </div>
    }
	
	<hr>
	<div class="form-section">
	@using (Html.BeginForm(null, null, FormMethod.Post, new {@class = "clearfix", id = "new-equipment-info-form"}))
	{
	    @Html.AntiForgeryToken()
	    @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
        @Html.HiddenFor(m => m.EquipmentInfo.AgreementType)
	    @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
	    @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
        @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
        @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
        @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
        @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
        @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)
	    <h3 class="dealnet-section-title">Equipment Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#new-equipment-info-section'), $('#new-equipment-info-section-modal'), false); $('#new-equipment-info-modal').modal();">Edit</a>
	    </h3>
	    <div class="row credit-check-info-hold equipment-info no-top-margin" id="new-equipment-info-section">
	        @for (var i = 0; i < Model.EquipmentInfo.NewEquipment.Count; i++)
	        {
	            <div class="col-md-6 grid-column">
	                <div class="dealnet-credit-check-section">
	                    @Html.HiddenFor(m => m.EquipmentInfo.NewEquipment[i].Id)
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="col-xs-12">
	                                #@(i + 1)
	                            </div>
	                        </div>
	                    </div>

	                    <div class="form-group">
	                        <div class="row">
	                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Type, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.DropDownListFor(m => m.EquipmentInfo.NewEquipment[i].Type,
	                                    ((IList<EquipmentTypeDTO>) ViewBag.EquipmentTypes).Select(x => new SelectListItem {Value = x.Type, Text = x.Description, Selected = Model?.EquipmentInfo?.NewEquipment != null && Model.EquipmentInfo.NewEquipment[i]?.Type == x.Type}),
	                                    new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>

	                    <div class="form-group">
	                        <div class="row">
	                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Description, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
	                    {
	                        <div class="form-group">
	                            <div class="row">
	                                @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                                <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                    @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                                </div>
	                            </div>
	                        </div>
	                    }
	                    else
	                    {
	                        <div class="form-group">
	                            <div class="row">
	                                @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                                <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
	                                    @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                                </div>
	                            </div>
	                        </div>
	                    }
                        <div class="form-group">
	                        <div class="row">
	                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, new {@class = "dealnet-field-caption col-xs-5 col-sm-4 col-md-5"})
	                            <div class="dealnet-field-holder col-xs-7 col-sm-6 col-md-7">
                                    @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, @"{0:MM'/'dd'/'yyyy}", new {@readonly = "readonly", @class = "dealnet-disabled-input", id = "", data_val_date = "Date must be in range 1900 - Today" })
	                            </div>
	                        </div>
	                    </div>
	                </div>
	            </div>
	        }
	    </div>

	    <div class="summary-payment-info well">
	        <div class="row">
	            <div class="col-md-4 col-lg-3 col-xs-12 summary-payment-info-item">
	                <div class="row">
	                    <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
	                        MONTHLY PAYMENT
	                    </div>
	                    <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
	                        <div class="inline-children">
	                            @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
                                {
                                    <text>$</text>@(Math.Round(Model.LoanCalculatorOutput.TotalMonthlyPayment, 2))
                                }
                                else
                                {
                                    <text>$</text>@Html.TextBoxFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                }
	                        </div>
	                    </div>
	                </div>
	            </div>
	            @if (Model.EquipmentInfo.AgreementType != AgreementType.LoanApplication)
	            {
	                <div class="col-md-2 col-lg-2 col-xs-12 summary-payment-info-item">
	                    <div class="row">
	                        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
	                            HST
	                        </div>
	                        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
	                            $@(Math.Round((Model.EquipmentInfo.TotalMonthlyPayment ?? 0)*Model.ProvinceTaxRate/100, 2))
	                        </div>
	                    </div>
	                </div>
	                <div class="col-md-6 col-lg-7 col-xs-12 summary-payment-info-item">
	                    <div class="row">
	                        <div class="dealnet-field-caption col-xs-12 col-sm-8 col-md-12">
	                            TOTAL MONTHLY PAYMENT (TAX INCL.)
	                        </div>
	                        <div class="dealnet-field-holder col-xs-12 col-sm-4 col-md-12">
	                            $@(Math.Round((Model.EquipmentInfo.TotalMonthlyPayment ?? 0) + (Model.EquipmentInfo.TotalMonthlyPayment ?? 0)*Model.ProvinceTaxRate/100, 2))
	                        </div>
	                    </div>
	                </div>
	            }
	        </div>
	    </div>
	}
	@using (Html.BeginForm(null, null, FormMethod.Post, new {@class = "clearfix", id = "payment-info-form" }))
    {
	    @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ContactAndPaymentInfo.ContractId)
        <h3 class="dealnet-section-title">Payment Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#payment-info-section'), $('#payment-info-section-modal'), false); $('#payment-info-modal').modal();">Edit</a>
	    </h3>
	    <div class="row credit-check-info-hold no-top-margin">
	        <div class="col-md-6 grid-column">
	            <div class="dealnet-credit-check-section" id="payment-info-section">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "payment-type-form" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group pap-payment-form">
                        <div class="row">
                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new { @class = "dealnet-field-caption col-xs-6" })
                            <div class="dealnet-field-holder col-xs-6">
                                @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                            </div>
                        </div>
                    </div>

                    <div class="pap-payment-form">
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption col-xs-6" })
                                <div class="dealnet-field-holder col-xs-6">
                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @readonly = "readonly", @class = "dealnet-disabled-input", id = "" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@class = "dealnet-field-caption col-xs-6"})
                                <div class="dealnet-field-holder col-xs-6">
                                    @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
                                </div>
                            </div>
                        </div>
                    </div>
	                <div class="enbridge-payment-form">
	                    <div class="form-group">
	                        <div class="row">
	                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "dealnet-field-caption col-xs-6"})
	                            <div class="dealnet-field-holder col-xs-6">
	                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@class = "dealnet-field-caption col-xs-6"})
	                            <div class="dealnet-field-holder col-xs-6">
	                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                </div>
                </div>
	        </div>
	    </div>
	}
	@if (Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
	{
	    using (Html.BeginForm(null, null, FormMethod.Post, new {@class = "clearfix", id = "existing-equipment-form"}))
	    {
	        @Html.AntiForgeryToken()
	        @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
	        @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
	        @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
            @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
	        @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment)
            @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
            @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
            @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
            @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)
	        <div class="summary-return-equipment" id="existing-equipment-section">
	            <h3 class="dealnet-section-title">Existing Equipment Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#existing-equipment-section'), $('#existing-equipment-section-modal'), false); $('#existing-equipment-modal').modal();">Edit</a>
	            </h3>
	            @for (var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
	            {
	                <div class="summury-return-equip-item">
	                    @Html.HiddenFor(m => m.EquipmentInfo.ExistingEquipment[i].Id)
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
	                                    new[]
	                                    {
	                                        new {Value = "true", Text = "Yes", Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
	                                        new {Value = "false", Text = "No", Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
	                                    },
	                                    "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental), new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                            </div>
	                        </div>
	                    </div>
	                    <div class="form-group">
	                        <div class="row">
	                            <div class="dealnet-field-caption col-xs-4 col-sm-3 col-md-3 col-lg-2">
	                                @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes)
	                            </div>
	                            <div class="dealnet-field-holder col-xs-8 col-sm-9 col-md-9 col-lg-10 ">
	                                <div class="dealnet-disabled-input">
	                                    @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new {@readonly = "readonly", @class = "dealnet-disabled-input", id = ""})
	                                </div>
	                            </div>
	                        </div>
	                    </div>
	                </div>
	            }
	        </div>
	    }
	}
        <hr>
        <div class="form-section">
            <div class="row">
                <div class="credit-check-info-hold">
                    <div class="col-md-6 grid-column" id="edit-add-contract-section">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "contract-notes-form", @class = "credit-check-info-hold" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.EquipmentInfo.ContractId)
                            @Html.HiddenFor(m => m.EquipmentInfo.AgreementType)
                            @Html.HiddenFor(m => m.EquipmentInfo.SalesRep)
                            @Html.HiddenFor(m => m.EquipmentInfo.RequestedTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.LoanTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.TotalMonthlyPayment, new { @class = "total-monthly-payment" })
                            @Html.HiddenFor(m => m.EquipmentInfo.AmortizationTerm)
                            @Html.HiddenFor(m => m.EquipmentInfo.CustomerRate)
                            @Html.HiddenFor(m => m.EquipmentInfo.AdminFee)
                            @Html.HiddenFor(m => m.EquipmentInfo.DownPayment)

                            <div class="dealnet-credit-check-section">
                                <h3 class="dealnet-section-title">
                                    Additional Contract Information <a href="#" class="dealnet-section-edit-link pull-right" onclick="copyFormData($('#edit-add-contract-section'), $('#edit-add-contract-section-modal'), false); $('#edit-add-contract-modal').modal()">Edit</a>
                                </h3>
                                <div class="form-group">
                                    <div class="row">
                                        <label for="" class="dealnet-field-caption col-xs-12">Contract Notes</label>
                                        <div class="dealnet-field-holder col-xs-12">
                                            <div class="control-group">
                                                @Html.TextAreaFor(m => m.EquipmentInfo.Notes, new { @class = "dealnet-disabled-input dealnet-disabled-textarea", @cols = "30", @rows = "2", id = "contract-notes" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="comments-widget" data-username="@User.Identity.Name">
			<h3 class="dealnet-section-title">Comments</h3>
            @using (Html.BeginForm("AddComment", "MyDeals"))
            {
                <div class="form-group">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ContractId", Model.BasicInfo.ContractId)
                    <label for="">Add comment</label>
                    <textarea name="Text" cols="30" rows="2" class="form-control base-comment-text" placeholder="Write a reply..."></textarea>
                </div>
                <div class="row">
                    <div class="col-sm-5 col-md-3">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button reply-button">Reply</button>
                    </div>
                </div>
            }
            <div id="comments-start"></div>
            @AddComments(Model.Comments)
		</div>
	</div>
</div>
@helper AddComments(IEnumerable<CommentViewModel> comments)
{
if (comments == null) { return; }
foreach (var comment in comments)
{
    <div class="comment @if (comment.Replies != null && comment.Replies.Any()) { <text>active</text> }" >
        <div class="commetn-header">
            <span class="comment-user">
                <svg aria-hidden="true" class="icon icon-user"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-user")"></use></svg>
                <span class="comment-username">@comment.AuthorName</span>
            </span>
            <span class="comment-update">
                <span class="comment-update-time">@comment.Date.ToString("hh:mm tt MM/d/yyyy", CultureInfo.InvariantCulture)</span>
            </span>
            @if (comment.IsOwn)
            {
                <span class="owner-comment">your comment</span>
            }
        </div>
        <div class="comment-body">
            <input hidden name="comment-id" value="@comment.Id"/>
            <p style="white-space: pre-wrap;">@comment.Text</p>
            <a href="#" class="comment-remove-link" @if (!comment.IsOwn || (comment.Replies != null && comment.Replies.Any())) { <text>style="display:none;"</text> }><svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg></a>
        </div>
        <div class="comment-footer">
            <a href="#" class="show-comments-answers"><span class="answers-quantity">@(comment.Replies?.Count() ?? 0)</span> answer(s)</a>
            <a href="#" class="dealnet-success-link write-reply-link @if (comment.Replies != null && comment.Replies.Any()) { <text>active</text> }">Write a reply</a>
        </div>

    </div>

    <ul class="child-comments-list list-unstyled">
        <li>
            @AddComments(comment.Replies)
        </li>
    </ul>
    }
}
<div class="hidden">
    <div class="comment-reply-form" id="comment-reply-form">
        @using (Html.BeginForm("AddComment", "MyDeals"))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("ParentCommentId")
            <label for="">Add comment</label>
            <textarea name="Text" cols="30" rows="2" class="form-control base-comment-text" placeholder="Write a reply..."></textarea>
            <div class="row">
                <div class="col-sm-5 col-md-3">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button reply-button">Reply</button>
                </div>
            </div>
        }
    </div>
</div>
<div class="hidden">
    <div class="comment" id="comment-template">
        <div class="commetn-header">
            <span class="comment-user">
                    <svg aria-hidden="true" class="icon icon-user"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-user")"></use></svg>                    
                <span class="comment-username"></span>
                </span>
            <span class="comment-update">
                    <span class="comment-update-time"></span>
                </span>
            <span class="owner-comment">your comment</span>
        </div>
        <div class="comment-body">
            <input hidden name="comment-id"/>
            <p></p>
            <a href="#" class="comment-remove-link"><svg aria-hidden="true" class="icon icon-remove"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-remove")"></use></svg></a>
        </div>
        <div class="comment-footer">
            <a href="#" class="show-comments-answers"><span class="answers-quantity">0</span> answer(s)</a>
            <a href="#" class="dealnet-success-link write-reply-link">Write a reply</a>
        </div>
    </div>
</div>
<div class="hidden">
    <ul class="child-comments-list list-unstyled" id="replies-template">
        <li>
        </li>
    </ul>
</div>
@using (Html.BeginForm("RemoveComment", "MyDeals", FormMethod.Post, new { id = "remove-comment-form"}))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("commentId")
}
<div class="text-center back-to-top-hold">
    <br/>
    <a href="#" class="dealnet-info-link" onClick="backToTop()"><svg aria-hidden="true" class="icon icon-back-to-top"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-back-to-top")"></use></svg>Back to top</a>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="deal-info-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Deal Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
					<form id="deal-info-section-modal">
						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label class="dealnet-field-caption">TOTAL VALUE</label>
									<div class="dealnet-field-holder">
										<div class="control-group">
											<div class="form-control control-disabled">
												$ @($"{Model.EquipmentInfo.NewEquipment.Sum(e => e.Cost):0.00}")
											</div>
										</div>
									</div>
								</div>
							</div>
						    @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
						    {
						        <div class="col-md-6">
						            <div class="form-group">
						                @Html.LabelFor(m => m.EquipmentInfo.LoanTerm, new {@class = "dealnet-field-caption"})
						                <div class="dealnet-field-holder">
						                    <div class="control-group">
						                        @Html.TextBoxFor(m => m.EquipmentInfo.LoanTerm, new {@readonly = "readonly", @class = "form-control control-disabled"})
						                    </div>
						                </div>
						            </div>
						        </div>
                            }
                            else
                            {
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EquipmentInfo.RequestedTerm, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.RequestedTerm, new { @readonly = "readonly", @class = "form-control control-disabled" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EquipmentInfo.SalesRep, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.EquipmentInfo.SalesRep, new { @class = "form-control dealnet-input" })
                                            @Html.ValidationMessageFor(m => m.EquipmentInfo.SalesRep, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
								    @Html.LabelFor(m => m.AdditionalInfo.ContractState, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.AdditionalInfo.ContractState, null, new { @readonly = "readonly", @class = "form-control control-disabled" })
                                        </div>
                                    </div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.EquipmentInfo.AgreementType, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.EquipmentInfo.AgreementType, null, new { @readonly = "readonly", @class = "form-control control-disabled" })
                                        </div>
                                    </div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(m => m.AdditionalInfo.LastUpdateTime, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.AdditionalInfo.LastUpdateTime, @"{0:MM'/'dd'/'yyyy}", new { @readonly = "readonly", @class = "form-control control-disabled"})
                                        </div>
                                    </div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									<label class="dealnet-field-caption">Type of Equipment</label>
									<div class="dealnet-field-holder">
										<div class="control-group">
											<div class="form-control control-disabled">
												@(Model.EquipmentInfo?.NewEquipment?.Select(eq => eq.Type).ConcatWithComma())
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#deal-info-section-modal'), $('#deal-info-form'), '@Url.Action("UpdateEquipmentInfo", "MyDeals")', $('#deal-info-form'))) { $('#deal-info-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="address-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Address Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
					<form id="address-section-modal">
						<div class="row">
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, new { @class = "form-control dealnet-input", id = "street" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.Street, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, new { @class = "form-control dealnet-input" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.UnitNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, new { @class = "form-control dealnet-input", id = "locality" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, new { @class = "form-control dealnet-input", id = "administrative_area_level_1" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.Province, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, new { @class = "form-control dealnet-input postal-code", id = "postal_code" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.PostalCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BasicInfo.HomeOwner.AddressInformation.ResidenceType, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.BasicInfo.HomeOwner.AddressInformation.ResidenceType, null, new { @class = "form-control", id = "residence" })
                                            @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.AddressInformation.ResidenceType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
					</form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#address-section-modal'), $('#address-section'), '@Url.Action("UpdateApplicants", "MyDeals")', $('#basic-info-form'))) { $('#address-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>

@if (Model.BasicInfo.HomeOwner.MailingAddressInformation != null)
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="mailing-address-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">Editing Mailing Address</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "mailing-address-section-modal"}))
                        {
                            <div class="row">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        @Html.Label("mailing_street", "Mailing Address", new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, new {@class = "form-control dealnet-input", id = "mailing_street"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Street, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, new {@class = "form-control dealnet-input"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, new {@class = "form-control dealnet-input", id = "mailing_locality"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.City, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, new {@class = "form-control dealnet-input", id = "mailing_administrative_area_level_1"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.Province, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "mailing_postal_code"})
                                                @Html.ValidationMessageFor(m => m.BasicInfo.HomeOwner.MailingAddressInformation.PostalCode, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#mailing-address-section-modal'), $('#mailing-address-section'), '@Url.Action("UpdateApplicants", "MyDeals")', $('#basic-info-form'))) { $('#mailing-address-modal').modal('hide'); }">Save changes</button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="contact-info-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Contact Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
                    <form id="contact-info-section-modal">
                        <div class="row mandatory-phones">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CustomerId)
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, new { @class = "form-control dealnet-input home-phone" })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.HomePhone, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, new { @class = "form-control dealnet-input cell-phone" })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.CellPhone, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, new { @class = "form-control dealnet-input", id = "locality" })
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.BusinessPhone, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "dealnet-field-caption"})
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, new {@class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email"})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HomeOwnerContactInfo.EmailAddress, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.TextBoxFor(m => m.ContactAndPaymentInfo.HouseSize, new { @class = "form-control dealnet-input"})
                                            @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.HouseSize, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#contact-info-section-modal'), $('#contact-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "MyDeals")', $('#contact-info-form'))) { $('#contact-info-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="new-equipment-info-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Equipment Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
                    <form id="new-equipment-info-section-modal">
                        @for (var i = 0; i < Model.EquipmentInfo.NewEquipment.Count; i++)
                        {
                            <div class="dealnet-middle-header">
	                            &#8470;@(i+1)
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Type, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.DropDownListFor(m => m.EquipmentInfo.NewEquipment[i].Type,
                                            ((IList<EquipmentTypeDTO>)ViewBag.EquipmentTypes).Select(x => new SelectListItem { Value = x.Type, Text = x.Description, Selected = Model?.EquipmentInfo?.NewEquipment != null && Model.EquipmentInfo.NewEquipment[i]?.Type == x.Type }),
                                            new { @readonly = "readonly", @class = "form-control control-disabled" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Description, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Description, new { @class = "form-control dealnet-input" })
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (Model.EquipmentInfo.AgreementType == AgreementType.LoanApplication)
                                {
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].Cost, new { @readonly = "readonly", @class = "form-control control-disabled" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].Cost, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, new { @readonly = "readonly", @class = "form-control control-disabled" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].MonthlyCost, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, @"{0:MM'/'dd'/'yyyy}", new { @class = "form-control dealnet-input date-input"})
                                                @Html.ValidationMessageFor(m => m.EquipmentInfo.NewEquipment[i].EstimatedInstallationDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#new-equipment-info-section-modal'), $('#new-equipment-info-section'), '@Url.Action("UpdateEquipmentInfo", "MyDeals")', $('#new-equipment-info-form'))) { $('#new-equipment-info-modal').modal('hide'); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="payment-info-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<div class="modal-title dealnet-large-header">Editing Payment Information</div>
			</div>
			<div class="modal-body">
				<div class="dealnet-credit-check-section dealnet-modal-section">
                    <form id="payment-info-section-modal">
                        <div class="row">
                            <div class="col-md-8 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PaymentType, null, new { @class = "form-control", id = "payment-type" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-5">
                                <div class="form-group">
                                    <div class="dealnet-label dealnet-field-caption">Photo of Void Cheque</div>
                                    <div class="equip-photo-group" style="position: relative;">
                                        <div class="equip-photo-hold">
                                            <div class="photo-pic">
                                                <img src="" alt="">
                                            </div>
                                        </div>
                                        <a href="#" class="remove-link"><i class="glyphicon glyphicon-remove"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 col-sm-7">
                                <div class="form-group">
                                    <div class="file-upload btn dealnet-button dealnet-success-button">
                                        <svg aria-hidden="true" class="icon icon-scan-licence"><use xlink:href="@Url.Content("~/Content/images/sprite/sprite.svg#icon-scan-licence")"></use></svg>
                                        <span>Add New Photo</span>
                                        <input type="file" accept="image/*" class="upload" id="upload-new-photo" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 col-sm-12 pap-payment">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, new { @class = "dealnet-field-caption" })
                                    <div class="dealnet-field-holder">
                                        <div class="control-group">
                                            @Html.EnumDropDownListFor(m => m.ContactAndPaymentInfo.PaymentInfo.PrefferedWithdrawalDate, null, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="pap-payment">
                                <div class="col-md-8 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, new { @class = "form-control dealnet-input", id = "account-number" })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.AccountNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-8 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, new { @class = "form-control dealnet-input", id = "transit-number" })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.TransitNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-8 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "dealnet-field-caption" })
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, new { @class = "form-control dealnet-input", id = "bank-number" })
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.BlankNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="enbridge-payment">
                                <div class="col-md-8 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, new {@class = "form-control dealnet-input", id = "enbridge-gas-distribution-account"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.EnbridgeGasDistributionAccount, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-8 col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@class = "dealnet-field-caption"})
                                        <div class="dealnet-field-holder">
                                            <div class="control-group">
                                                @Html.TextBoxFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, new {@class = "form-control dealnet-input", id = "meter-number"})
                                                @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.PaymentInfo.MeterNumber, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
				</div>
				<div class="btn-container">
					<button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#payment-info-section-modal'), $('#payment-info-section'), '@Url.Action("UpdateContactAndPaymentInfo", "MyDeals")', $('#payment-info-form'))) { $('#payment-info-modal').modal('hide'); $('#payment-type-form').change(); }">Save changes</button>
					<button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
				</div>
			</div>
		</div>
	</div>
</div>

@if (Model.EquipmentInfo.ExistingEquipment != null && Model.EquipmentInfo.ExistingEquipment.Any())
{
    <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="existing-equipment-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div class="modal-title dealnet-large-header">Editing Existing Equipment Information</div>
                </div>
                <div class="modal-body">
                    <div class="dealnet-credit-check-section dealnet-modal-section">
                        <form id="existing-equipment-section-modal">
                            @for (var i = 0; i < Model.EquipmentInfo.ExistingEquipment.Count; i++)
                            {
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.DropDownListFor(m => m.EquipmentInfo.ExistingEquipment[i].IsRental, new SelectList(
                                                new[]
                                                {
                                                new {Value = "true", Text = "Yes", Selected = Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                new {Value = "false", Text = "No", Selected = !Model.EquipmentInfo.ExistingEquipment[i].IsRental},
                                                },
                                                "Value", "Text", Model.EquipmentInfo.ExistingEquipment[i].IsRental),
                                                new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].RentalCompany, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].EstimatedAge, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Make, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Model, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].SerialNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].GeneralCondition, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextAreaFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, new { @class = "form-control dealnet-input" })
                                                    @Html.ValidationMessageFor(m => m.EquipmentInfo.ExistingEquipment[i].Notes, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </form>
                    </div>
                    <div class="btn-container">
                        <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#existing-equipment-section-modal'), $('#existing-equipment-section'), '@Url.Action("UpdateEquipmentInfo", "MyDeals")', $('#existing-equipment-form'))) { $('#existing-equipment-modal').modal('hide'); }">Save changes</button>
                        <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.ContactAndPaymentInfo.CoBorrowersContactInfo != null && Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Any())
{
    for (var i = 0; i < Model.ContactAndPaymentInfo.CoBorrowersContactInfo.Count; i++)
    {
        <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="contact-info-coborrower@(i + 1)-modal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">Editing Contact Information</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            <form id="contact-info-section@(i + 1)-coborrower-modal">

                                <div class="row mandatory-phones">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.HiddenFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CustomerId)
                                                @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, new {@class = "form-control dealnet-input home-phone"})
                                                        @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].HomePhone, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, new {@class = "form-control dealnet-input cell-phone"})
                                                        @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].CellPhone, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, new {@class = "form-control dealnet-input", id = "locality"})
                                                        @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].BusinessPhone, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="row">
                                                @Html.LabelFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new {@class = "dealnet-field-caption col-xs-6"})
                                                <div class="dealnet-field-holder col-xs-6">
                                                    <div class="control-group">
                                                        @Html.TextBoxFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, new {@class = "form-control dealnet-input", id = "administrative_area_level_1", type = "email"})
                                                        @Html.ValidationMessageFor(m => m.ContactAndPaymentInfo.CoBorrowersContactInfo[i].EmailAddress, "", new {@class = "text-danger"})
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="btn-container">
                            <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#contact-info-section@(i + 1)-coborrower-modal'), $('#contact-info-section@(i + 1)-coborrower'), '@Url.Action("UpdateContactAndPaymentInfo", "NewRental")', $('#contact-info-coborrowers-form-@(i + 1)'))) { $('#contact-info-coborrower@(i + 1)-modal').modal('hide'); }">Save changes</button>
                            <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="additional-mailing-address-modal-@(i + 1)">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <div class="modal-title dealnet-large-header">Editing Mailing Address</div>
                    </div>
                    <div class="modal-body">
                        <div class="dealnet-credit-check-section dealnet-modal-section">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "additional-mailing-address-section-modal-" + (i + 1)}))
                            {
                                <div class="row">
                                    <div class="col-md-9">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, new {@class = "form-control dealnet-input", id = "additional-street-" + (i + 1)})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Street, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, new {@class = "form-control dealnet-input", id = "additional-unit_number-" + (i + 1)})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.UnitNumber, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, new {@class = "form-control dealnet-input", id = "additional-locality-" + (i + 1)})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.City, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, new {@class = "form-control dealnet-input", id = "additional-administrative_area_level_1-" + (i + 1)})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.Province, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@class = "dealnet-field-caption"})
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.TextBoxFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, new {@class = "form-control dealnet-input postal-code", id = "additional-postal_code-" + (i + 1)})
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.PostalCode, "", new {@class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BasicInfo.AdditionalApplicants[i].AddressInformation.ResidenceType, new { @class = "dealnet-field-caption" })
                                            <div class="dealnet-field-holder">
                                                <div class="control-group">
                                                    @Html.EnumDropDownListFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.ResidenceType, null, new { @class = "form-control", id = "additional-residence-" + (i + 1) })
                                                    @Html.ValidationMessageFor(m => m.BasicInfo.AdditionalApplicants[i].MailingAddressInformation.ResidenceType, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }
                            </div>
                            <div class="btn-container">
                                <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#additional-mailing-address-section-modal-@(i + 1)'), $('#additional-mailing-address-section-@(i + 1)'), '@Url.Action("UpdateApplicants", "NewRental" )', $('#additional-basic-info-form-@(i + 1)'))) { $('#additional-mailing-address-modal-@(i + 1)').modal('hide'); }">Save changes</button>
                                <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                            }
}

<div class="modal fade editor-modal modal-wide" tabindex="-1" role="dialog" id="edit-add-contract-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="modal-title dealnet-large-header">Editing Additional Contract Information</div>
            </div>
            <div class="modal-body">
                <div class="dealnet-credit-check-section dealnet-modal-section">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit-add-contract-section-modal" }))
                    {
                        <div class="form-group">
                            <div class="row">
                                <label class="col-xs-12">Contract Notes</label>
                                <div class="dealnet-field-holder col-xs-12">
                                    <div class="control-group">
                                        @Html.TextAreaFor(m => m.EquipmentInfo.Notes, new { @class = "form-control", id = "contract-notes" })
                                        @Html.ValidationMessageFor(m => m.EquipmentInfo.Notes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="btn-container">
                    <button type="button" class="btn dealnet-button dealnet-success-button block-button big-button" onclick="if (saveChanges($('#edit-add-contract-section-modal'), $('#edit-add-contract-section'), '@Url.Action("UpdateEquipmentInfo", "NewRental")', $('#contract-notes-form'))) { $('#edit-add-contract-modal').modal('hide'); }">Save changes</button>
                    <button type="button" class="btn dealnet-button dealnet-link-button block-button big-button" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="https://code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css" rel="stylesheet">

@section scripts
{
    <script type="text/javascript">
        var isMobileBrowser = @(ViewBag.IsMobileRequest ? "true" : "false");
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/contract-edit")
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaQqymsNuummVv7Yi9I2kgGl0lxDjZri4&libraries=places&callback=assignAutocompletes" async defer></script>
}