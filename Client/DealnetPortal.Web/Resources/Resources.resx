<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="ActionReq" xml:space="preserve">
    <value>Action Req.</value>
  </data>
  <data name="AddComment" xml:space="preserve">
    <value>Add comment</value>
  </data>
  <data name="AdditionalApplicant" xml:space="preserve">
    <value>Additional Applicant</value>
  </data>
  <data name="AdditionalContractInformation" xml:space="preserve">
    <value>Additional Contract Information</value>
  </data>
  <data name="AddressInformation" xml:space="preserve">
    <value>Address Information</value>
  </data>
  <data name="Anonymous" xml:space="preserve">
    <value>Anonymous</value>
  </data>
  <data name="Answers" xml:space="preserve">
    <value>answer(s)</value>
  </data>
  <data name="BackToTop" xml:space="preserve">
    <value>Back to top</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeYourPassword" xml:space="preserve">
    <value>Change your password</value>
  </data>
  <data name="ClearFilters" xml:space="preserve">
    <value>Clear Filters</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="ContactInformation" xml:space="preserve">
    <value>Contact Information</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="Contract" xml:space="preserve">
    <value>Contract</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateFrom" xml:space="preserve">
    <value>Date From</value>
  </data>
  <data name="DateTo" xml:space="preserve">
    <value>Date To</value>
  </data>
  <data name="DealerName" xml:space="preserve">
    <value>Dealer Name</value>
  </data>
  <data name="DealFlowOverview" xml:space="preserve">
    <value>Deal Flow Overview</value>
  </data>
  <data name="DealInfo" xml:space="preserve">
    <value>Deal Info</value>
  </data>
  <data name="DealInformation" xml:space="preserve">
    <value>Deal Information</value>
  </data>
  <data name="DealStatus" xml:space="preserve">
    <value>Deal Status</value>
  </data>
  <data name="DealType" xml:space="preserve">
    <value>Deal Type</value>
  </data>
  <data name="DetailedInfo" xml:space="preserve">
    <value>Detailed Info</value>
  </data>
  <data name="DocumentNameEmpty" xml:space="preserve">
    <value>Name of a document can't be empty</value>
  </data>
  <data name="EcoHomeAbout1" xml:space="preserve">
    <value>EcoHome Financial is a Canadian owned finance company providing custom consumer financing and loan products to the HVAC and home improvement markets. We manage all of our business in-house.</value>
  </data>
  <data name="EcoHomeAbout2" xml:space="preserve">
    <value>We partner with leading dealers and manufacturers to deliver what is needed to succeed in today’s competitive arena – hassle free finance programs for dealers and their customers.</value>
  </data>
  <data name="EcoHomeAbout3" xml:space="preserve">
    <value>Give your customers the ability to purchase now, and the ability to purchase more. We deliver what you need to succeed.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Editing" xml:space="preserve">
    <value>Editing</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Entries" xml:space="preserve">
    <value>entries</value>
  </data>
  <data name="Equipment" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="EquipmentInformation" xml:space="preserve">
    <value>Equipment Information</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorWhileAddingComment" xml:space="preserve">
    <value>An error occurred while adding comment</value>
  </data>
  <data name="ErrorWhileRemovingComment" xml:space="preserve">
    <value>An error occurred while removing comment</value>
  </data>
  <data name="ErrorWhileUploadingFile" xml:space="preserve">
    <value>An error occurred while uploading file.</value>
  </data>
  <data name="ExistingEquipmentInformation" xml:space="preserve">
    <value>Existing Equipment Information</value>
  </data>
  <data name="ExportAllToExcel" xml:space="preserve">
    <value>Export All to Excel</value>
  </data>
  <data name="ExportToExcel" xml:space="preserve">
    <value>Export to Excel</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FindUs" xml:space="preserve">
    <value>Find us</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
  <data name="FundingChecklist" xml:space="preserve">
    <value>Funding Checklist</value>
  </data>
  <data name="GoToApp" xml:space="preserve">
    <value>Go to app</value>
  </data>
  <data name="GoToStep" xml:space="preserve">
    <value>Go to Step </value>
  </data>
  <data name="GrandTotal" xml:space="preserve">
    <value>Grand Total:</value>
  </data>
  <data name="GreatWork" xml:space="preserve">
    <value>Great work!</value>
  </data>
  <data name="HomeOwnerInformation" xml:space="preserve">
    <value>Home Owner Information</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="GstHst" xml:space="preserve">
    <value>GST/HST</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="IfYouChangeInfo" xml:space="preserve">
    <value>If you change Home Owner Information you will have to pass Credit Check step again</value>
  </data>
  <data name="IsRental" xml:space="preserve">
    <value>Is rental?</value>
  </data>
  <data name="LoanTerm" xml:space="preserve">
    <value>Loan Term</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MailingAddress" xml:space="preserve">
    <value>Mailing Address</value>
  </data>
  <data name="MaximumFileSize" xml:space="preserve">
    <value>Maximum file size is limited to 50 MB for a single file.</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="MonthlyPayment" xml:space="preserve">
    <value>MONTHLY PAYMENT</value>
  </data>
  <data name="MyDeals" xml:space="preserve">
    <value>My Deals</value>
  </data>
  <data name="MyWorkItems" xml:space="preserve">
    <value>My Work Items</value>
  </data>
  <data name="NavigateToStep" xml:space="preserve">
    <value>Navigate to step </value>
  </data>
  <data name="NewApplication" xml:space="preserve">
    <value>New Application</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoMatchingRecordsFound" xml:space="preserve">
    <value>No matching records found</value>
  </data>
  <data name="NotSelected" xml:space="preserve">
    <value>not selected</value>
  </data>
  <data name="NowYouCanLogIn" xml:space="preserve">
    <value>Now you can log in with your new password.</value>
  </data>
  <data name="OnThisEmail" xml:space="preserve">
    <value>On this email you will get a new password</value>
  </data>
  <data name="OtherDocuments" xml:space="preserve">
    <value>Other Documents</value>
  </data>
  <data name="PasswordWasChanged" xml:space="preserve">
    <value>Your password was successfully changed.</value>
  </data>
  <data name="PaymentInformation" xml:space="preserve">
    <value>Payment Information</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PleaseCheckEmail" xml:space="preserve">
    <value>please check your email for one-time password.</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Reply" xml:space="preserve">
    <value>Reply</value>
  </data>
  <data name="ReportForContract" xml:space="preserve">
    <value>Report for contract</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="RequestedTerm" xml:space="preserve">
    <value>Requested Term</value>
  </data>
  <data name="Reupload" xml:space="preserve">
    <value>Reupload</value>
  </data>
  <data name="SalesRep" xml:space="preserve">
    <value>Sales Rep</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SubDealer" xml:space="preserve">
    <value>Sub-Dealer</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TotalForSelected" xml:space="preserve">
    <value>Total for Selected:</value>
  </data>
  <data name="TotalMonthlyPaymentWithTaxes" xml:space="preserve">
    <value>TOTAL MONTHLY PAYMENT (TAX INCL.)</value>
  </data>
  <data name="TotalValue" xml:space="preserve">
    <value>TOTAL VALUE</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeOfEquipment" xml:space="preserve">
    <value>Type of Equipment</value>
  </data>
  <data name="TypeOfPayment" xml:space="preserve">
    <value>Type of Payment</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ValueOfDeal" xml:space="preserve">
    <value>Value of Deal</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="WriteReply" xml:space="preserve">
    <value>Write a reply...</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YouHaveBeenRegistered" xml:space="preserve">
    <value>You have been successfully registered,</value>
  </data>
  <data name="YourComment" xml:space="preserve">
    <value>your comment</value>
  </data>
  <data name="Contracts" xml:space="preserve">
    <value>Contracts</value>
  </data>
  <data name="ReportForContracts" xml:space="preserve">
    <value>Report for contracts</value>
  </data>
  <data name="ShowMoreInfo" xml:space="preserve">
    <value>Show more information</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Report for contract</value>
  </data>
</root>